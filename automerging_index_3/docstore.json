{"docstore/data": {"ba8c4dd2-ced9-43db-a5e8-29d7d8155828": {"__data__": {"id_": "ba8c4dd2-ced9-43db-a5e8-29d7d8155828", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0129a81e-c476-4369-b096-1bfc7132d5b6", "node_type": "1", "metadata": {}, "hash": "f071dd5d2e514a9b59212b478d620d742c281caa064e269689d6c1d59d34e665", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "74b8c932-c6b7-41f5-91e0-c6a20d3ef13a", "node_type": "1", "metadata": {}, "hash": "86d33656952aac8d71d62b37b0a595fba516c3cbbf50c65325d6a4d879aba673", "class_name": "RelatedNodeInfo"}, {"node_id": "b9071b6d-a92e-47b0-a73d-a116beafbbe1", "node_type": "1", "metadata": {}, "hash": "903f9e1ed863e828bf9a168651fb86a45698b74a8dc53b3658f223f27c767226", "class_name": "RelatedNodeInfo"}, {"node_id": "a0ac8be7-2343-4739-b1bf-b639d7a83627", "node_type": "1", "metadata": {}, "hash": "c2cf040724b60d5cbd179ba4455bc631338d5c61832b499d1352f41f119b0737", "class_name": "RelatedNodeInfo"}, {"node_id": "7548a93b-2042-402d-9663-c9cf58f7af05", "node_type": "1", "metadata": {}, "hash": "a8355e5dbfe2b0ffe2fc7d03db126a8cebd7a0cf0fe0e01bf690243634403529", "class_name": "RelatedNodeInfo"}, {"node_id": "8b80bc92-fa6a-4fc1-a38d-15ae1f43f48e", "node_type": "1", "metadata": {}, "hash": "3fd24ba2effda542452c4a1b688d6221ad6b4f3a2cfd71fcce3abe82276d1ec6", "class_name": "RelatedNodeInfo"}]}, "text": "Introduction to natural\nlanguage processing\nR. Kibble\nCO3354\n2013\nUndergraduate study in \nComputing and related programmes\nThis is an extract from a subject guide for an undergraduate course offered as part of the \nUniversity of London International Programmes in Computing. Materials for these programmes are developed by academics at Goldsmiths.\nFor more information, see: www.londoninternational.ac.uk\n\nThis guide was prepared for the University of London International Programmes by:\nR. KibbleThis is one of a series of subject guides published by the University. We regret that due to pressure of work the author is \nunable to enter into any correspondence relating to, or arising from, the guide. If you have any comments on this subject guide, favourable or unfavourable, please use the form at the back of this guide.\nUniversity of London International Programmes \nPublications Office 32 Russell Square London WC1B 5DN United Kingdom \nwww.londoninternational.ac.uk\nPublished by: University of London \nCopyright \u00a9 Department of Computing, Goldsmiths 2013\nThe University of London and Goldsmiths assert copyright over all material in this subject guide except where otherwise \nindicated. All rights reserved. No part of this work may be reproduced in any form, or by any means, without permission in writing from the publisher. We make every effort to respect copyright. If you think we have inadvertently used your copyright material, please let us know.\n\nContents\nPreface 1\nAbout this half unit . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 1\nAssessment . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 1\nThe subject guide and other learning resources . . . . . . . . . . . . . . . . 2\nSuggested study time . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2\nAcknowledgement . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 3\n1 Introduction: how to use this subject guide 5\n1.1 Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5\n1.2 Aims of the course . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5\n1.3 Learning outcomes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 6\n1.4 Reading list and other learning resources . . . . . . . . . . . . . . . . . 6\n1.5 Software requirements . . . . . . . . . . . . . . . . . . . . . . . . . . . 8\n1.6 How to use the guide/structure of the course . . . . . . . . . . . . . . 8\n1.6.1 Chapter 2: Introducing NLP: patterns and structures in language 8\n1.6.2 Chapter 3: Getting to grips with natural language data . . . . . 8\n1.6.3 Chapter 4: Computational tools for text analysis . . . . . . . . . 9\n1.6.4 Chapter 5: Statistically-based techniques for text analysis . . . 9\n1.6.5 Chapter 6: Analysing sentences: syntax and parsing . . . . . . 9\n1.6.6 Appendices . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 9\n1.7 What the course does not cover . . . . . . . . . . . . . . . . . . . . . . 9\n2 Introducing NLP: patterns and structure in language 11\nEssential reading . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 11\nRecommended reading . . . . . . . . . . . . . . . . . . . . . . . . . . . 11\nAdditional reading . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 11\n2.1 Learning outcomes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 11\n2.2 Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 12\n2.3 Basic concepts . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 12\n2.3.1 Tokenised text and pattern matching . . . . . . . . . . . . . . . 12\nActivity: Recognising names . . . . . . . . . . . . . . . . . . . . . . . . 13\n2.3.2 Parts of speech . . . . . . . . . . . . . . . . . . . . . . . . . . . 13\nActivity: identify parts of speech . . . . . . . . . . . . . . . . . . . . . 14\n2.3.3 Constituent structure . . . . . . . . . . . . . . . . . . . . . . . . 14\nActivity: Writing production rules . . . . . . . . . . . . . . . . . . . . . 15\n2.4 A closer look at syntax . . . . . . . . . . . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 4067, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0129a81e-c476-4369-b096-1bfc7132d5b6": {"__data__": {"id_": "0129a81e-c476-4369-b096-1bfc7132d5b6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ba8c4dd2-ced9-43db-a5e8-29d7d8155828", "node_type": "1", "metadata": {}, "hash": "a8a4a6f2804b7e72904527f36a30fbcbb5316da2ac8d57689ec978a8bd8458c3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ec93a1fd-8a9f-492d-90ec-ec72cc2166f6", "node_type": "1", "metadata": {}, "hash": "2fc023692fd1007fa3108db61c2533e7d248ea367bd52cc4389821e96b6ce22b", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "dbfd4b04-0039-4fa3-9ced-4978c625aca3", "node_type": "1", "metadata": {}, "hash": "1de4ba250958cf47bd682c400428e98acaa8197f57ce7a3adf0999da8c8a901b", "class_name": "RelatedNodeInfo"}, {"node_id": "157392c9-14b3-4239-abe6-c0e6b2afa370", "node_type": "1", "metadata": {}, "hash": "43e2df41ce641c558868cefa34dedf2d7e16fecb13a8229ef91a3a785ad167b2", "class_name": "RelatedNodeInfo"}, {"node_id": "3e466a67-6571-4e0e-ada3-07c55a9a2a69", "node_type": "1", "metadata": {}, "hash": "83abb2b4b0840d63176b5e9889865fe375230d0635690ba4aa5c23557d3dd6d9", "class_name": "RelatedNodeInfo"}, {"node_id": "23c3f2b8-b98f-4f91-bfad-eb7a245bad97", "node_type": "1", "metadata": {}, "hash": "be91b01445676fe4530c31a88d22b884b3dc2407420b4df52e5d6f46f1e9dcdb", "class_name": "RelatedNodeInfo"}, {"node_id": "c1517d4c-3d41-4412-a7a4-1e3b2a3bb783", "node_type": "1", "metadata": {}, "hash": "b486f45ccda84ef13bdecb8da06326afc939cb5b2574948603389e6f83d9657a", "class_name": "RelatedNodeInfo"}]}, "text": ". . . . . . . . . . . 15\n2.4.1 Operation of a \ufb01nite-state machine . . . . . . . . . . . . . . . . 16\nActivity: Finite-state machines . . . . . . . . . . . . . . . . . . . . . . . 17\n2.4.2 Representing \ufb01nite-state machines . . . . . . . . . . . . . . . . 17\n2.4.3 Declarative alternatives to \ufb01nite-state machines . . . . . . . . . 18\nActivity: Coding regular expressions . . . . . . . . . . . . . . . . . . . 19\nActivity: tree diagrams for a regular language . . . . . . . . . . . . . . 21\n2.4.4 Limitations of \ufb01nite-state methods \u2013 introducing context-free\ngrammars . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 21\nActivity: Regular grammars . . . . . . . . . . . . . . . . . . . . . . . . 21\nActivity: Context-free grammar . . . . . . . . . . . . . . . . . . . . . . 23\n2.4.5 Looking ahead: some further uses of regular expressions . . . . 23\ni\n\nCO3354 Introduction to natural language processing\n2.4.6 Looking ahead: grammars and parsing . . . . . . . . . . . . . . 24\n2.5 Word structure . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24\nActivity: Past tense formation . . . . . . . . . . . . . . . . . . . . . . . 25\n2.6 A brief history of natural language processing . . . . . . . . . . . . . . 25\n2.7 Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 27\n2.8 Sample examination questions . . . . . . . . . . . . . . . . . . . . . . 27\n3 Getting to grips with natural language data 29\nEssential reading . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 29\nRecommended reading . . . . . . . . . . . . . . . . . . . . . . . . . . . 29\nAdditional reading . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 29\n3.1 Learning outcomes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 29\n3.2 Using the Natural Language Toolkit . . . . . . . . . . . . . . . . . . . . 29\n3.3 Corpora and other data resources . . . . . . . . . . . . . . . . . . . . . 30\n3.4 Some uses of corpora . . . . . . . . . . . . . . . . . . . . . . . . . . . . 31\n3.4.1 Lexicography . . . . . . . . . . . . . . . . . . . . . . . . . . . . 32\n3.4.2 Grammar and syntax . . . . . . . . . . . . . . . . . . . . . . . . 32\n3.4.3 Stylistics: variation across authors, periods, genres and chan-\nnels of communication . . . . . . . . . . . . . . . . . . . . . . . 32\n3.4.4 Training and evaluation . . . . . . . . . . . . . . . . . . . . . . 33\n3.5 Corpora . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 33\n3.5.1 Brown corpus . . . . . . . . . . . . . . . . . . . . . . . . . . . . 34\n3.5.2 British National Corpus . . . . . . . . . . . . . . . . . . . . . . 34\n3.5.3 COBUILD Bank of English . . . . . . . . . . . . . . . . . . . . . 34\n3.5.4 Penn Treebank . . . . . . . . . . . . . . . . . . . . . . . . . . . 35\n3.5.5 Gutenberg archive . . . . . . . . . . . . . . . . . . . . . . . . . 36\n3.5.6 Other corpora . . . . . . . . . . . . . . . . . . . . . . . . . . . . 36\nActivity: Online corpus queries . . . . . . . . . . . . . . . . . . . . . . 37\n3.5.7 WordNet . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 4048, "end_char_idx": 7104, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ec93a1fd-8a9f-492d-90ec-ec72cc2166f6": {"__data__": {"id_": "ec93a1fd-8a9f-492d-90ec-ec72cc2166f6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0129a81e-c476-4369-b096-1bfc7132d5b6", "node_type": "1", "metadata": {}, "hash": "f071dd5d2e514a9b59212b478d620d742c281caa064e269689d6c1d59d34e665", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5b37f427-5b47-40d0-bf79-a020b02747ac", "node_type": "1", "metadata": {}, "hash": "8cbc1cf337b1b009f219f6637bb022eed06259725866a7289740d08b1ac02e35", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "09e1c915-353b-4835-a613-f85f9720452a", "node_type": "1", "metadata": {}, "hash": "9b78ade23b18d3c95670b2b93f75d9cb6b7ace0d0c46a071b262f7ae4259cc75", "class_name": "RelatedNodeInfo"}, {"node_id": "c2721a5a-8852-4e29-8d5f-62a65709c385", "node_type": "1", "metadata": {}, "hash": "47c0ac8d929e29b2eee369f07ddca67ad42626ea2b0480d02bd39b809ddc40f9", "class_name": "RelatedNodeInfo"}, {"node_id": "e12349db-35f7-465b-9a2f-fefa4446054a", "node_type": "1", "metadata": {}, "hash": "93f7510aac7ae0c64e02d42b7ca81ef0e0d2c0089ccf12bcaf1376ba16799549", "class_name": "RelatedNodeInfo"}, {"node_id": "2f0134f0-97f4-4add-bf9d-8f93c7a723f5", "node_type": "1", "metadata": {}, "hash": "79eee0d2074bf953923828d9e1ddc2cda16a0acfd771d0e3f2f2c3700a76996f", "class_name": "RelatedNodeInfo"}, {"node_id": "d43edd0d-285e-4d1d-9f48-510ba80a26b2", "node_type": "1", "metadata": {}, "hash": "faad69882e5b9030eb7806200c07ff676d53716f30c6a3a56ea37c9292f9d577", "class_name": "RelatedNodeInfo"}]}, "text": ". . . . . . . . . . . . . . . . . . . . . . . . . 37\n3.6 Some basic corpus analysis . . . . . . . . . . . . . . . . . . . . . . . . 38\n3.6.1 Frequency distributions . . . . . . . . . . . . . . . . . . . . . . 38\nActivity: Using NLTK tools . . . . . . . . . . . . . . . . . . . . . . . . . 39\n3.6.2 DIY corpus: some worked examples . . . . . . . . . . . . . . . 39\nActivity: building and analysing a DIY corpus . . . . . . . . . . . . . . 41\n3.7 Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 41\n3.8 Sample examination question . . . . . . . . . . . . . . . . . . . . . . . 42\n4 Computational tools for text analysis 43\nEssential reading . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 43\nRecommended reading . . . . . . . . . . . . . . . . . . . . . . . . . . . 43\nAdditional reading . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 43\n4.1 Introduction and learning outcomes . . . . . . . . . . . . . . . . . . . 43\n4.1.1 Learning outcomes . . . . . . . . . . . . . . . . . . . . . . . . . 43\n4.2 Data structures . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 44\nActivity: strings and sequences . . . . . . . . . . . . . . . . . . . . . . 44\n4.3 Tokenisation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 44\n4.3.1 Some issues with tokenisation . . . . . . . . . . . . . . . . . . . 45\n4.3.2 Tokenisation in the NLTK . . . . . . . . . . . . . . . . . . . . . 46\nActivity: Tokenising text . . . . . . . . . . . . . . . . . . . . . . . . . . 46\n4.4 Stemming . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 46\nActivity: Comparing stemmers . . . . . . . . . . . . . . . . . . . . . . . 48\n4.5 Tagging . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 48\n4.5.1 RE tagging . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 49\nActivity: Tagging with REs . . . . . . . . . . . . . . . . . . . . . . . . . 51\n4.5.2 Trained taggers and backoff . . . . . . . . . . . . . . . . . . . . 51\nii\n\n4.5.3 Transformation-based tagging . . . . . . . . . . . . . . . . . . . 53\n4.5.4 Evaluation and performance . . . . . . . . . . . . . . . . . . . . 53\nActivity: Trained taggers . . . . . . . . . . . . . . . . . . . . . . . . . . 53\n4.6 Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 53\n4.7 Sample examination question . . . . . . . . . . . . . . . . . . . . . . . 54\n5 Statistically-based techniques for text analysis 57\nEssential reading . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 57\nRecommended reading . . . . . . . . . . . . . . . . . . . . . . . . . . . 57\nAdditional reading . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 57\n5.1 Learning outcomes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 57\n5.2 Introduction . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 7085, "end_char_idx": 9908, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5b37f427-5b47-40d0-bf79-a020b02747ac": {"__data__": {"id_": "5b37f427-5b47-40d0-bf79-a020b02747ac", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ec93a1fd-8a9f-492d-90ec-ec72cc2166f6", "node_type": "1", "metadata": {}, "hash": "2fc023692fd1007fa3108db61c2533e7d248ea367bd52cc4389821e96b6ce22b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9820bd76-52ad-4d76-a299-ce6aaad2d619", "node_type": "1", "metadata": {}, "hash": "60d4d94ca581554a9ba78c0d25e45f852c5807c0ce78929565b911e97cbe8cef", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "d05612d5-1fc2-4b4e-8b23-b654fac5eb54", "node_type": "1", "metadata": {}, "hash": "9d2f1c6e95fa9ed74a3ef6798aa9e8524de38ae4f859f2879eeb50b43ce3b5ad", "class_name": "RelatedNodeInfo"}, {"node_id": "12c6529e-5bfc-4cdb-ba1d-b346b537ddbd", "node_type": "1", "metadata": {}, "hash": "3cfe6a7eb28525e16afbbdb10d741e180e23b8795391c455f57008df81a7106e", "class_name": "RelatedNodeInfo"}, {"node_id": "5f9803e1-c78b-4516-9676-7c3d59f5e3c6", "node_type": "1", "metadata": {}, "hash": "f9edb7a28da6d820827977a86976aeec8ae917a1f663345ca26d7f8ab9416d80", "class_name": "RelatedNodeInfo"}, {"node_id": "d5e7803c-fe7e-4397-9d57-b4d233d2940e", "node_type": "1", "metadata": {}, "hash": "8ef01e3092c28c9de37d43b5d2d2c860b5a3e19664aedd42b676c74989f81dd3", "class_name": "RelatedNodeInfo"}, {"node_id": "a86fa115-9666-4413-803a-f9bdc2b3c705", "node_type": "1", "metadata": {}, "hash": "15af1985d1c780c7b9bad6385dd4bb41f9c91cd230587884202a69412169ef91", "class_name": "RelatedNodeInfo"}]}, "text": ". . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 58\n5.3 Some fundamentals of machine learning . . . . . . . . . . . . . . . . . 58\n5.3.1 Naive Bayes classi\ufb01ers . . . . . . . . . . . . . . . . . . . . . . . 58\nActivity: Bayes\u2019 rule . . . . . . . . . . . . . . . . . . . . . . . . . . . . 59\n5.3.2 Hidden Markov models . . . . . . . . . . . . . . . . . . . . . . 60\n5.3.3 Information and entropy . . . . . . . . . . . . . . . . . . . . . . 61\n5.3.4 Decision trees and maximum entropy classi\ufb01ers . . . . . . . . . 62\nActivity: further reading . . . . . . . . . . . . . . . . . . . . . . . . . . 63\n5.3.5 Evaluation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 63\n5.4 Machine learning in action: document classi\ufb01cation . . . . . . . . . . . 64\n5.4.1 Summary: document classi\ufb01cation . . . . . . . . . . . . . . . . 65\nActivity: document classi\ufb01cation . . . . . . . . . . . . . . . . . . . . . 66\n5.5 Machine learning in action: information extraction . . . . . . . . . . . 66\n5.5.1 Types of information extraction . . . . . . . . . . . . . . . . . . 67\n5.5.2 Regular expressions for personal names . . . . . . . . . . . . . 67\nActivity: coding regular expressions for proper names . . . . . . . . . . 69\n5.5.3 Information extraction as sequential classi\ufb01cation: chunking\nand NE recognition . . . . . . . . . . . . . . . . . . . . . . . . . 69\nActivity: chunking and NE recognition . . . . . . . . . . . . . . . . . . 71\n5.6 Limitations of statistical methods . . . . . . . . . . . . . . . . . . . . . 71\n5.7 Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 72\n5.8 Sample examination question . . . . . . . . . . . . . . . . . . . . . . . 72\n6 Analysing sentences: syntax and parsing 75\nEssential reading . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 75\nRecommended reading . . . . . . . . . . . . . . . . . . . . . . . . . . . 75\nAdditional reading . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 75\n6.1 Learning outcomes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 75\n6.2 Grammars and parsing . . . . . . . . . . . . . . . . . . . . . . . . . . . 75\n6.3 Complicating CFGs . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 76\n6.3.1 Verb categories . . . . . . . . . . . . . . . . . . . . . . . . . . . 76\nActivity: Verb categories . . . . . . . . . . . . . . . . . . . . . . . . . . 78\n6.3.2 Agreement . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 78\nActivity: feature-based grammar . . . . . . . . . . . . . . . . . . . . . 80\n6.3.3 Unbounded dependencies . . . . . . . . . . . . . . . . . . . . . 80\n6.3.4 Ambiguity and probabilistic grammars . . . . . . . . . . . . . . 82\nActivity: probabilistic grammar . . . . . . . . . . . . . . . . . . . . . . 85\n6.4 Parsing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 85\n6.4.1 Recursive descent parsing . . . . . . . . . . . . . . . . . . . . . 86\n6.4.2 Shift-reduce parsing . . . . . . . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 9889, "end_char_idx": 12888, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9820bd76-52ad-4d76-a299-ce6aaad2d619": {"__data__": {"id_": "9820bd76-52ad-4d76-a299-ce6aaad2d619", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5b37f427-5b47-40d0-bf79-a020b02747ac", "node_type": "1", "metadata": {}, "hash": "8cbc1cf337b1b009f219f6637bb022eed06259725866a7289740d08b1ac02e35", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0e3d4afd-db7e-4a20-85fc-3433bed3f402", "node_type": "1", "metadata": {}, "hash": "427b345b53ed8c3b7294bedbfb80591f769256b835da0cd99d330f7a9657d61a", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "64248c25-68be-4d86-9036-2bc5ebf5087f", "node_type": "1", "metadata": {}, "hash": "fa837a258fe5a5ab220e1684ce17d1a346b6d55f51409633f50889e950769f2b", "class_name": "RelatedNodeInfo"}, {"node_id": "3ef22783-da6f-428d-bb12-7e6c2273dd61", "node_type": "1", "metadata": {}, "hash": "c3fed5b0cc4a4680b72a2e2203a2cb8512d67d80011a3bc7653f7fb2c58b7d49", "class_name": "RelatedNodeInfo"}, {"node_id": "5f4ecab5-ad1b-47e9-822c-0f54cdd8ccdd", "node_type": "1", "metadata": {}, "hash": "4537fbe0fc02fa713a70e270b3c52354b6c29cc126d249ed98e9364ee99bc7ab", "class_name": "RelatedNodeInfo"}, {"node_id": "9ff3ce2c-0379-406c-a8eb-1ab0013304fc", "node_type": "1", "metadata": {}, "hash": "0de2d960139de5c49efc6193d9fe47968bd392d9e594b465437d305dccc8a328", "class_name": "RelatedNodeInfo"}, {"node_id": "bd41e00a-7043-4f68-bb92-5ffc9c4dc1ec", "node_type": "1", "metadata": {}, "hash": "30c796154cf6a6acd40d3d356d68b7503ecb1a6a333b3d102bedb324418ab51c", "class_name": "RelatedNodeInfo"}]}, "text": ". . . . . . . . . . . . 87\n6.4.3 Parsing with a well-formed substring table . . . . . . . . . . . . 87\n6.4.4 Finite-state machines and context-free parsing . . . . . . . . . . 89\nActivity: Parsing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 90\n6.5 Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 90\niii\n\nCO3354 Introduction to natural language processing\n6.6 Sample examination question . . . . . . . . . . . . . . . . . . . . . . . 91\nA Bibliography 93\nB Glossary 95\nC Answers to selected activities 97\nChapter 2: Introducing NLP: patterns and structure in natural language . . . 97\nIdentify parts of speech, page 14 . . . . . . . . . . . . . . . . . . . . . 97\nOperation of a \ufb01nite-state machine, page 17 . . . . . . . . . . . . . . . 97\nCoding regular expressions, page 19 . . . . . . . . . . . . . . . . . . . 97\nRegular grammars, page 21 . . . . . . . . . . . . . . . . . . . . . . . . 98\nPast tense forms, page 25 . . . . . . . . . . . . . . . . . . . . . . . . . 98\nChapter 3: Getting to grips with natural language data . . . . . . . . . . . . 98\nOnline corpus queries, page 37 . . . . . . . . . . . . . . . . . . . . . . 98\nUsing NLTK tools, page 39 . . . . . . . . . . . . . . . . . . . . . . . . . 99\nChapter 4: Computational tools for text analysis . . . . . . . . . . . . . . . . 100\nComparing stemmers, page 48 . . . . . . . . . . . . . . . . . . . . . . . 100\nTagging with REs, page 51 . . . . . . . . . . . . . . . . . . . . . . . . . 101\nChapter 5: Statistically-based techniques for text analysis . . . . . . . . . . . 101\nActivity: Bayes\u2019 Rule, page 59 . . . . . . . . . . . . . . . . . . . . . . . 101\nChapter 6: Analysing sentences: syntax and parsing . . . . . . . . . . . . . . 102\nActivity: Verb categories, page 78 . . . . . . . . . . . . . . . . . . . . . 102\nActivity: Feature-based grammar, page 80 . . . . . . . . . . . . . . . . 102\nD Trace of recursive descent parse 105\nE Sample examination paper with answering guidelines 107\nE.1 Sample examination questions . . . . . . . . . . . . . . . . . . . . . . 108\nE.2 Answering guidelines for sample examination questions . . . . . . . . 113\niv\n\nPreface\nAbout this half unit\nThis half unit course combines a critical introduction to key topics in theoretical and\ncomputational linguistics with hands-on practical experience of using existing\nsoftware tools and developing applications to process texts and access linguistic\nresources. The aims of the course and learning outcomes are listed in Chapter 1.\nThis course has no speci\ufb01c prerequisites. There will be some programming involved\nand you will need to acquire some familiarity with the Python language, but you will\nnot be expected to develop substantial original code or to encode specialised\nalgorithms. The course involves some statistical techniques, but the only\nmathematical knowledge assumed is an understanding of elementary probability\nand familiarity with the concept of logarithms.\nBefore the advent of the world wide web, most machine-readable information was\nstored in structured databases and accessed via specialised query languages such as\nStructured Query Language (SQL). Nowadays the situation is reversed: most\ninformation is found in unstructured or semi-structured natural language documents\nand there is increasing demand for techniques to \u2018unlock\u2019 this data. Computing\ngraduates with knowledge of natural language processing techniques are \ufb01nding\nemployment in areas such as text analytics, sentiment analysis, topic detection and\ninformation extraction.\nAssessment\nThe course is assessed via an unseen written examination. A sample examination\npaper is provided in the Appendix at the end of this subject guide, with some\nguidelines on how to answer the questions. You will be required to attempt three\nquestions out of a choice of \ufb01ve. The questions will cover \u2018book knowledge\u2019, problem\nsolving and short essays on more theoretical topics. The examination is not a\nmemory test but will be designed to assess your understanding of the course\ncontent. There will also be coursework which will include a similar mix of questions,\nbut with a stronger focus on practical problem-solving.\nYou will be expected to provide electronic copies of your coursework for plagiarism\nchecking purposes. It is very important that any material that is not original to you\nshould be properly attributed and placed in quotation marks, with a full list of\nreferences at the end of your submission. You should follow the style used in this\nsubject guide for citing references, for example:\nSegaran (2007, pp.117\u2013118) discusses some problems with rule-based spam \ufb01lters.\nAnswers which consist entirely or mostly of quoted material are unlikely to get many\nmarks even if properly attributed, as simply reproducing an answer in someone\nelse\u2019s words does not demonstrate that you have fully understood the material.\nIn order to give you some practice in problem-solving and writing short essays, there\n1\n\nCO3354 Introduction to natural language processing\nare a number of Activities throughout this subject guide. The Appendix includes a\nsection \u2018Answers to selected activities\u2019, although these will not always provide\ncomplete answers to the questions but are intended to indicate how particular types\nof questions should be approached. Sample examination questions are provided at\nthe end of each chapter. Some, but not all, of these are included in the sample\nexamination paper with suggested answers at the end of the guide.\nThe subject guide and other learning resources\nThis subject guide is not intended as a self-contained textbook but sets out speci\ufb01c\ntopics for study in the CO3354 half unit. There is a recommended textbook and a\nnumber of other readings are listed at appropriate places. There are also links to\nwebsites providing useful resources such as software tools and access to online\nlinguistic data. The learning outcomes listed in the next chapter assume that you are\nworking through the recommended readings, activities and sample examination\nquestions. It will not be possible to pass this half unit by reading only the subject\nguide.", "mimetype": "text/plain", "start_char_idx": 12869, "end_char_idx": 19001, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0e3d4afd-db7e-4a20-85fc-3433bed3f402": {"__data__": {"id_": "0e3d4afd-db7e-4a20-85fc-3433bed3f402", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9820bd76-52ad-4d76-a299-ce6aaad2d619", "node_type": "1", "metadata": {}, "hash": "60d4d94ca581554a9ba78c0d25e45f852c5807c0ce78929565b911e97cbe8cef", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6d05c069-f995-4871-a6a5-1996a4a9d8d5", "node_type": "1", "metadata": {}, "hash": "1f8d51e30f7e51c5fcc4bf38d6c24435d70fc304d8dda4100a6e59f82410867b", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "73d1e212-4483-441d-bac3-f8be01007682", "node_type": "1", "metadata": {}, "hash": "91a2eb3fc8e8bab9c3c512f1de6728ef628ab8f34a6e4bc16921de2a7f382d53", "class_name": "RelatedNodeInfo"}, {"node_id": "17985ccc-408f-4d6e-a15e-a1062fce4a0c", "node_type": "1", "metadata": {}, "hash": "703ea9cbae100392fee7a4a770d5b53423c594dba37ee9f44b50a34d0098e4ed", "class_name": "RelatedNodeInfo"}, {"node_id": "5408125b-8b32-4b98-b9cd-05fc3aaa7fbd", "node_type": "1", "metadata": {}, "hash": "47ca26199ec87dac70556888b2494d416460fc4e184d6f6d41eb193b6b00fb55", "class_name": "RelatedNodeInfo"}, {"node_id": "e686929c-2133-4304-86df-a8dd0e707731", "node_type": "1", "metadata": {}, "hash": "dd161576442b509e696fb450d2f53954335722303c8c11039df93097c821bf5c", "class_name": "RelatedNodeInfo"}, {"node_id": "a47fea3a-8340-432c-ae40-5a848af88020", "node_type": "1", "metadata": {}, "hash": "101c5eccc70b21942290f1c7d69a95e689975b1a389f7958179aa96348693205", "class_name": "RelatedNodeInfo"}]}, "text": "It will not be possible to pass this half unit by reading only the subject\nguide. Please refer to the Computing VLE for other resources, which should be used\nas an aid to your learning.\nSuggested study time\nThe Student Handbook states that \u2018To be able to gain the most bene\ufb01t from the\nprogramme, it is likely that you will have to spend at least 300 hours studying for\neach full unit, though you are likely to bene\ufb01t from spending up to twice this time\u2019.\nNote that this subject is a half unit.\nThe course is designed to be delivered over a ten-week term as one of four\nconcurrent modules, and this guide has six chapters. Chapter 1 goes into more detail\nabout the structure of the guide and the course, while Chapters 2 to 6 are each\ndedicated to a particular topic. It is suggested that you spend about two weeks on\nChapters 1 and 2 together and each of Chapters 3 to 6, including the associated\nreading and web-based material, and work through the activities and sample\nexamination questions during this time.\n2\n\nContents\nAcknowledgement\nThis subject guide draws closely on:\nBird, S., E. Klein and E. Loper, Natural Language Processing with Python . (O\u2019Reilly\nMedia 2009) [ISBN 9780596516499; http://nltk.org/book].\nYou will be expected to draw on it in your studies and to use the accompanying\nsoftware package, the Natural Language Toolkit, which requires the Python\nlanguage. Natural language processing with Python has been made available under\nthe terms of the Creative Commons Attribution Noncommercial No-Derivative-Works\n3.0 US License: http://creativecommons.org/licenses/by-nc-nd.3.0/us/legalcode (last\nvisited 13th April 2013).\n3\n\nCO3354 Introduction to natural language processing\n4\n\nChapter 1\nIntroduction: how to use this subject guide\n1.1 Introduction\nThe idea of computers being able to understand ordinary languages and hold\nconversations with human beings has been a staple of science \ufb01ction since the \ufb01rst\nhalf of the twentieth century and was envisaged in a classic paper by Alan Turing\n(1950) as a hallmark of computational intelligence. Since the start of the\ntwenty-\ufb01rst century this vision has been starting to look more plausible: arti\ufb01cial\nintelligence techniques allied with the scienti\ufb01c study of language have emerged\nfrom universities and research laboratories to inform a variety of industrial and\ncommercial applications. Many websites now offer automatic translation; mobile\nphones can appear to understand spoken questions and commands; search engines\nlike Google use basic linguistic techniques for automatically completing or\n\u2018correcting\u2019 your queries and for \ufb01nding relevant results that are closely matched to\nyour search terms. We are still some way from full machine understanding of natural\nlanguage, however. Automated translations still need to be reviewed and edited by\nskilled human translators while no computer system has yet come close to passing\nthe \u2018Turing Test\u2019 of convincingly simulating human conversation. Indeed it has been\nargued that the Turing Test is a blind alley and that research should focus on\nproducing effective applications for speci\ufb01c requirements without seeking to\ngenerate an illusion that users are interacting with a human rather than a machine\n(Hayes and Ford, 1995). Hopefully, by the time you \ufb01nish this course you will have\ncome to appreciate some of the challenges posed by full understanding of natural\nlanguage as well as the very real achievements that have resulted from focusing on a\nrange of speci\ufb01c, well-de\ufb01ned tasks.\n1.2 Aims of the course\nThis course combines a critical introduction to key topics in theoretical linguistics\nwith hands-on practical experience of developing applications to process texts and\naccess linguistic resources. The main topics covered are:\naccessing text corpora and lexical resources\nprocessing raw text\ncategorising and tagging\nextracting information from text\nanalysing sentence structure.\n5\n\nCO3354 Introduction to natural language processing\n1.3 Learning outcomes\nOn successful completion of this course, including recommended readings, exercises\nand activities, you should be able to:\n1. utilise and explain the function of software tools such as corpus readers,\nstemmers, taggers and parsers\n2. explain the difference between regular and context-free grammars and de\ufb01ne\nformal grammars for fragments of a natural language\n3. critically appraise existing Natural Language Processing (NLP) applications such\nas chatbots and translation systems\n4. describe some applications of statistical techniques to natural language analysis,\nsuch as classi\ufb01cation and probabilistic parsing.\nEach main chapter contains a list of learning outcomes speci\ufb01c to that chapter at the\nbeginning, as well as a summary at the end of the chapter.\n1.4 Reading list and other learning resources\nThis is a list of textbooks and other resources which will be useful for all or most\nparts of the course. Additional readings will be given at the start of each chapter. See\nthe bibliography for a full list of books and articles referred to, including all ISBNs.\nIn some cases several different books will be listed: you are not expected to read all\nof them, rather the intention is to give you some alternatives in case particular texts\nare hard to obtain.\nEssential reading\nBird, Klein, and Loper (2009): Natural Language Processing with Python . The full\ntext including diagrams is freely available online at http://nltk.org/book (last\nvisited 13th April 2013). The main textbook for this course, Natural Language\nProcessing with Python is the outcome of a project extending over several years\nto develop the Natural Language Toolkit (NLTK), which is a set of tools and\nresources for teaching computational linguistics. The NLTK comprises a suite of\nsoftware modules written in Python and a collection of corpora and other\nresources. See section 1.5 below for advice on installing the NLTK and other\nsoftware packages.\nIn the course of working through this text you will gain some experience and\nfamiliarity with the Python language, though you will not be expected to\nproduce substantial original code as part of the learning outcomes of the course.\nRecommended reading\nPinker (2007). The Language Instinct . This book is aimed at non-specialists and\ndeals with many psychological and cultural aspects of language. Chapter 4 is\nparticularly relevant to this course as it provides a clear and accessible\npresentation of two standard techniques for modelling linguistic structure:\n\ufb01nite-state machines and context-free grammars (though Pinker does not in fact\nuse these terms, as we will see in Chapter 2 of the subject guide).\n6\n\nReading list and other learning resources\nJurafsky and Martin (2009): Speech and Language Processing , second edition.\nCurrently the de\ufb01nitive introductory textbook in this \ufb01eld, covering the major\ntopics in a way which combines theoretical issues with presentations of key\ntechnologies, formalisms and mathematical techniques. Much of this book goes\nbeyond what you will need to pass this course, but it is always worth turning to\nif you\u2019re looking for a more in-depth discussion of any particular topics.\nPerkins (2010): Python Text Processing with NLTK 2.0 Cookbook . This book will be\nsuitable for students who want to get more practice in applying Python\nprogramming to natural language processing. Perkins explains several\ntechniques and algorithms in more technical detail than Bird et al. (2009) and\nprovides a variety of worked examples and code snippets.\nSegaran (2007) Programming Collective Intelligence . This highly readable and\ninformative text includes tutorial material on machine learning techniques using\nthe Python language.\nAdditional reading\nRussell and Norvig (2010) Arti\ufb01cial Intelligence: a modern approach , third edition.\nThis book is currently regarded as the de\ufb01nitive textbook in Arti\ufb01cial\nIntelligence, and includes useful material on natural language processing as well\nas on machine learning, which has many applications in NLP.\nMitkov (2003) The Oxford Handbook of Computational Linguistics . Edited by Ruslan\nMitkov. A collection of short articles on major topics in the \ufb01eld, contributed by\nacknowledged experts in their respective disciplines.\nPartee et al. (1990) Mathematical Methods in Linguistics . A classic text, whose\ncontents indicate how much the \ufb01eld has changed since its publication. A book\nwith such a title nowadays would be expected to include substantial coverage of\nstatistics, probability and information theory, but this text is devoted exclusively\nto discrete mathematics including set theory, formal logic, algebra and automata.\nThese topics are particularly applicable to the content of Chapters 2 and 6.\nWebsites\nIntroductory/Reference The Internet Grammar of English is a clear and informative\nintroductory guide to English grammar which also serves as a tutorial in\ngrammatical terminology and concepts. The site is hosted by the Survey of\nEnglish Usage at University College London\n(http://www.ucl.ac.uk/internet-grammar/home.htm, last visited 27th May\n2013).\nHands-on corpus analysis\nBNCWeb is a web-based interface to the British National Corpus hosted at Lancaster\nUniversity which supports a variety of online queries for corpus analysis\n(http://bncweb.info/; last visited 27th May 2013).\nThe Bank of English forms part of the Collins Corpus, developed by Collins\nDictionaries and the University of Birmingham.", "mimetype": "text/plain", "start_char_idx": 18920, "end_char_idx": 28321, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6d05c069-f995-4871-a6a5-1996a4a9d8d5": {"__data__": {"id_": "6d05c069-f995-4871-a6a5-1996a4a9d8d5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0e3d4afd-db7e-4a20-85fc-3433bed3f402", "node_type": "1", "metadata": {}, "hash": "427b345b53ed8c3b7294bedbfb80591f769256b835da0cd99d330f7a9657d61a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bbffa6d0-1837-4113-b1d6-88c66a801060", "node_type": "1", "metadata": {}, "hash": "f03342bd61794a1ccb4b2c79b84c86066c39273594a19a3d1aebe420c9ce4cf1", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "73aa9fd4-cd64-4cb7-bc2f-382239d749a9", "node_type": "1", "metadata": {}, "hash": "e83b76f4d16e7656448d9a8c9d6bbfead4924e82dbc687d7ed3ca16406d46c7b", "class_name": "RelatedNodeInfo"}, {"node_id": "c12f4d5f-a272-44f4-b3e0-9523ae6c5611", "node_type": "1", "metadata": {}, "hash": "66f8d9c6d5676141b54b9695bf1c54588ae3fb2cc12cb01c16ac02768116c130", "class_name": "RelatedNodeInfo"}, {"node_id": "41954dcf-ce49-439a-bc62-a757a53c772d", "node_type": "1", "metadata": {}, "hash": "0c5a2da3fef54b73b79b1b3e4ec425d5d2b0dd493c6a88ca740888cec2709b0b", "class_name": "RelatedNodeInfo"}, {"node_id": "a7e422d7-7aa7-4dfc-b049-68e45ff08ab2", "node_type": "1", "metadata": {}, "hash": "1d4c3756b4c390d4ccff607265ae24c12c9fda9f9cfb93b0ceaf7751df9ae0b2", "class_name": "RelatedNodeInfo"}, {"node_id": "8cafad7a-b7ee-486a-96f3-35f93d97a364", "node_type": "1", "metadata": {}, "hash": "2d934263d2f854b0fb3df1aeafc4c696772474204adfe9f1a72a64a981a9e585", "class_name": "RelatedNodeInfo"}]}, "text": "Used as a basis for Collins\nAdvanced Learner\u2019s Dictionary, grammars and various tutorial materials for\nlearners of English. Limited online access at\nhttp://www.collinslanguage.com/wordbanks; (last visited 27th May 2013).\nJournals and conferences\nComputational Linguistics is the leading journal in this \ufb01eld and is freely available at\nhttp://www.mitpressjournals.org/loi/coli (last visited 27th May 2013).\nConference Proceedings are often freely downloadable and many of these are\nhosted by the ACL Anthology at http://aclweb.org/anthology-new/ (last visited\n27th May 2013).\n7\n\nCO3354 Introduction to natural language processing\n1.5 Software requirements\nThis course assumes you have access to the Natural Language Toolkit (NLTK) either\non your own computer or at your institution. The NLTK can be freely downloaded\nand it is strongly recommended that you install it on your own machine: Windows,\nMac OSX and Linux distributions are available from http://nltk.org (last visited\nApril 10th 2013) and some distributions of Linux have it in their package/software\nmanagers. Full instructions are available at the cited website along with details of\nassociated packages which should also be installed, including Python itself which is\nalso freely available. Once you have installed the software you should also download\nthe required datasets as explained in the textbook (Bird et al., 2009, p. 3).\nYou should check the NLTK website to determine what versions of Python are\nsupported. Current stable releases of NLTK are compatible with Python 2.6 and 2.7.\nA version supporting Python 3 is under development and may be available for\ntesting by the time you read this guide (as of April 2013).\n1.6 How to use the guide/structure of the course\nThis section gives a brief summary of each chapter. These learning outcomes are\nlisted at the beginning of each main chapter and assume that you have worked\nthrough the recommended readings and activities for that chapter.\n1.6.1 Chapter 2: Introducing NLP: patterns and structures in language\nThis chapter looks at different approaches to analysing texts, ranging from \u2018shallow\u2019\ntechniques that focus on individual words and phrases to \u2018deeper\u2019 methods that\nproduce a full representation of the grammatical structure of a sentence as a\nhierarchical tree diagram. The chapter introduces two important formalisms:\nregular expressions , which will play an important part throughout the course, and\ncontext-free grammars which we return to in Chapter 6 of the subject guide.\n1.6.2 Chapter 3: Getting to grips with natural language data\nThis chapter looks at the different kinds of data resources that can be used for\ndeveloping tools to harvest information that has been published as machine-readable\ndocuments. In particular, we introduce the notion of a \u2018corpus\u2019 (plural corpora ) \u2013 for\nthe purposes of this course, a computer-readable collection of text or speech. The\nNLTK includes a selection of excerpts from several well-known corpora and we\nprovide brief descriptions of the most important of these and of the different formats\nin which corpora are stored.\n8\n\nWhat the course does not cover\n1.6.3 Chapter 4: Computational tools for text analysis\nThe previous chapter introduced some relatively super\ufb01cial techniques for language\nanalysis such as concordancing and collocations. This chapter covers some\nfundamental operations in text analysis:\ntokenisation: breaking up a character string into words, punctuation marks and\nother meaningful expressions;\nstemming: removing af\ufb01xes from words, e.g. mean+ing ,distribut+ion ;\ntagging: associating each word in a text with a grammatical category or part of\nspeech.\n1.6.4 Chapter 5: Statistically-based techniques for text analysis\nStatistical and probabilistic methods are pervasive in modern computational\nlinguistics. These methods generally do not aim at complete understanding or\nanalysis of a text, but at producing reliable answers to well-de\ufb01ned problems such as\nsentiment analysis, topic detection or recognising named entities and relations\nbetween them in a text.\n1.6.5 Chapter 6: Analysing sentences: syntax and parsing\nThis chapter resumes the discussion of natural language syntax that was introduced\nin Chapter 2, concentrating on context-free grammar formalisms and various ways\nthey need to be modi\ufb01ed and extended beyond the model that was presented in that\nchapter. Formal grammars do not encode any kind of processing strategy but simply\nprovide a declarative speci\ufb01cation of the well-formed sentences in a language.\nParsers are computer programs that use grammar rules to analyse sentences, and\nthis chapter introduces some fundamental approaches to syntactic parsing.\n1.6.6 Appendices\nThe Appendices include:\nA. A bibliography listing all works referenced in the subject guide, including\npublication details and ISBNs.\nB. A glossary of technical terms used in this subject guide.\nC. Answers to selected activities.\nD. A trace of a recursive descent parse as described in Chapter 6 of the subject guide.\nE. A sample examination paper with guidelines on how to answer questions.\n1.7 What the course does not cover\nThe \ufb01eld of natural language processing or computational linguistics is a large and\ndiverse one, and includes many topics we will not be able to address in this course.\nSome of these are listed below:\n9\n\nCO3354 Introduction to natural language processing\nspeech recognition and synthesis\ndialogue and question answering\nmachine translation\nsemantic analysis, including word meanings and logical structure\ngenerating text or speech from non-linguistic inputs.\nHowever, the course should provide you with a basis for investigating some of these\nareas for your \ufb01nal year project. Some of these topics are dealt with in the later\nchapters of Bird et al. (2009) and most of them are touched on by Jurafsky and\nMartin (2009).\n10\n\nChapter 2\nIntroducing NLP: patterns and structure in\nlanguage\nEssential reading\nSteven Pinker (2007), The Language Instinct , Chapter 4.\nRecommended reading\nJurafsky and Martin (2009), Speech and Language Processing second edition,\nChapters/Sections 2 \u2018Regular Expressions and Automata\u2019, 5.1 \u2018(Mostly) English Word\nClasses\u2019, 12.1 \u2018Constituency\u2019, 12.2 \u2018Context-Free Grammars\u2019, 12.3 \u2018Some Grammar\nRules for English\u2019.\nAdditional reading\nThe Internet Grammar of English;\nhttp://www.ucl.ac.uk/internet-grammar/home.htm especially sections \u2018Word\nClasses\u2019 and \u2018Introducing Phrases\u2019.\nPartee, ter Meulen and Wall, (1990), Mathematical Methods in Linguistics ,\nChapters/Sections 16.1\u20134, 17.1\u20133 (omitting 17.1.2\u20135, 17.2.1), 18.2, 18.6.\n2.1 Learning outcomes\nBy the end of this chapter, and having completed the Essential reading and activities,\nyou should be able to:\nexplain the concept of \ufb01nite state machines (FSMs) and their connections with\nregular expressions; work through simple FSMs\nwrite regular expressions for well-de\ufb01ned patterns of symbols\nanalyse sentences in terms of parts of speech (POS) and constituent structure,\nincluding the use of tree diagrams\nwrite regular and context-free grammars for small fragments of natural language\nexplain the concept of stemming and specify word-formation rules for given\nexamples.\n11\n\nCO3354 Introduction to natural language processing\n2.2 Introduction\nPeople communicate in many different ways: through speaking and listening,\nmaking gestures, using specialised hand signals (such as when driving or directing\ntraf\ufb01c), using sign languages for the deaf, or through various forms of text.\nBy text we mean words that are written or printed on a \ufb02at surface (paper, card,\nstreet signs and so on) or displayed on a screen or electronic device in order to be\nread by their intended recipient (or by whoever happens to be passing by).\nThis course will focus only on the last of these: we will be concerned with various\nways in which computer systems can analyse and interpret texts, and we will assume\nfor convenience that these texts are presented in an electronic format. This is of\ncourse quite a reasonable assumption, given the huge amount of text we can access\nvia the World Wide Web and the increasing availability of electronic versions of\nnewspapers, novels, textbooks and indeed subject guides. This chapter introduces\nsome essential concepts, techniques and terminology that will be applied in the rest\nof the course. Some material in this chapter is a little technical but no programming\nis involved at this stage.\nWe will begin in section 2.3 by considering texts as strings of characters which can\nbe broken up into sub-strings, and introduce some techniques for informally\ndescribing patterns of various kinds that occur in texts. Subsequently in section 2.4\nwe will begin to motivate the analysis of texts in terms of hierarchical structures in\nwhich elements of various kinds can be embedded within each other, in a\ncomparable way to the elements that make up an HTML web document. This section\nintroduces some technical machinery such as: \ufb01nite-state machines (FSMs), regular\nexpressions, regular grammars and context-free grammars.", "mimetype": "text/plain", "start_char_idx": 28322, "end_char_idx": 37351, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bbffa6d0-1837-4113-b1d6-88c66a801060": {"__data__": {"id_": "bbffa6d0-1837-4113-b1d6-88c66a801060", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6d05c069-f995-4871-a6a5-1996a4a9d8d5", "node_type": "1", "metadata": {}, "hash": "1f8d51e30f7e51c5fcc4bf38d6c24435d70fc304d8dda4100a6e59f82410867b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cacf6547-8f7e-4073-a27c-8f29e73f193a", "node_type": "1", "metadata": {}, "hash": "56601d4d3509279d0de8be501e3c33b7c35f95ee6c1480f5bccda2aba9ca4865", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "d2fc6b8a-3b33-42b3-820d-a7b3ad8d0304", "node_type": "1", "metadata": {}, "hash": "5fe440ce89fd78f5ef25ab4ac66b6d3edd50705f2475fcf8f6a872e76af119bd", "class_name": "RelatedNodeInfo"}, {"node_id": "f97a944c-98e7-45e4-b396-0b516221ce32", "node_type": "1", "metadata": {}, "hash": "4e221cd2495ad8b3ff6c75af95cff601afabfc21e12b084770049bdb77f2d15a", "class_name": "RelatedNodeInfo"}, {"node_id": "471f0d14-6eb0-42cf-9816-a59b40804092", "node_type": "1", "metadata": {}, "hash": "3b9a2b848a54594d712243bebe6cab2ea5cc1645610b0d9f0ada1a9f9eaec44c", "class_name": "RelatedNodeInfo"}, {"node_id": "1e840b1d-d004-4bef-b8d7-b3e8c18e24a5", "node_type": "1", "metadata": {}, "hash": "1bc29fe514ee289d8322444be9cebc694f50d2660962fab127cf23f604bd8221", "class_name": "RelatedNodeInfo"}, {"node_id": "e483f6e7-c8cd-4cc5-88fd-128fac2f4344", "node_type": "1", "metadata": {}, "hash": "9e355dcd99cf72a9ca3457b0571ac39ec8201b386973ab0021c21b9c977a96b6", "class_name": "RelatedNodeInfo"}]}, "text": "2.3 Basic concepts\n2.3.1 Tokenised text and pattern matching\nOne of the more basic operations that can be applied to a text is tokenising :\nbreaking up a stream of characters into words, punctuation marks, numbers and\nother discrete items. So for example the character string\n\u201cDr. Watson, Mr. Sherlock Holmes\u201d, said Stamford, introducing us.\ncan be tokenised as in the following example, where each token is enclosed in single\nquotation marks:\n`\"' `Dr.' `Watson' `,' `Mr.' `Sherlock' `Holmes' `\"' `,'\n`said' `Stamford' `,' `introducing' `us' `.'\nAt this level, words have not been classi\ufb01ed into grammatical categories and we\nhave very little indication of syntactic structure. Still, a fair amount of information\nmay be obtained from relatively shallow analysis of tokenised text. For example,\nsuppose we want to develop a procedure for \ufb01nding all personal names in a given\ntext. We know that personal names always start with capital letters, but that is not\nenough to distinguish them from names of countries, cities, companies, racehorses\n12\n\nBasic concepts\nand so on, or from capitalisation at the start of a sentence. Some additional ways to\nidentify personal names include:\nUse of a title Dr.,Mr.,Mrs.,Miss,Professor and so on.\nA capitalised word or words followed by a comma and a number, usually below\n100: this is a common way of referring to people in news reports, where the\nnumber stands for their age \u2013 for example Pierre Vinken, 61, . . .\nA capitalised word followed by a verb that usually applies to humans: said,\nreported ,claimed ,thought ,argued . . . This can over-generate in the case of\ncountry or organisation names as in the Crown argues orBritain claimed .\nWe can express these more concisely as follows, where jis the disjunction symbol,\nWord stands for a capitalised word and Intis an integer:\n(Dr.jProfessorjMr.jMrs.jMissjMs)Word\nWord Word ,Int\nWord (saidjthoughtjbelievedjclaimedjarguedj...)\nLearning activity\n1. Write down your own examples of names that match each of the above patterns.\n2. Pick a newspaper article or webpage that provides a variety of examples of people\u2019s names. Do they\nmatch the patterns we have encoded above? If not, see if you can devise additional rules for\nrecognising names and write them out in a similar format.\n2.3.2 Parts of speech\nA further stage in analysing text is to associate every token with a grammatical\ncategory or part of speech (POS). A number of different POS classi\ufb01cations have\nbeen developed within computational linguistics and we will see some examples in\nsubsequent chapters. The following is a list of categories that are often encountered\nin general linguistics: you will be familiar with many of them already from learning\nthe grammar of English or other languages, though some terms such as Determiner\norConjunction may be new to you.\nNoun \ufb01sh, book, house, pen, procrastination, language\nProper noun John, France, Barack, Goldsmiths, Python\nVerb loves, hates, studies, sleeps, thinks, is, has\nAdjective grumpy, sleepy, happy, bashful\nAdverb slowly, quickly, now, here, there\nPronoun I, you, he, she, we, us, it, they\nPreposition in, on, at, by, around, with, without\nConjunction and, but, or, unless\nDeterminer the, a, an, some, many, few, 100\n13\n\nCO3354 Introduction to natural language processing\nBird et al. (2009, pp. 184\u20135) make the standard distinction that nouns \u2018generally\nrefer to people, places, things or concepts\u2019 while verbs \u2018describe events or actions\u2019.\nThis may be helpful when one is starting to learn grammatical terminology but is\nsomething of an over-simpli\ufb01cation. One can easily \ufb01nd or construct examples\nwhere the same concept can be expressed by a noun or a verb, or by an adjective or\nan adverb. And on the other hand, there are many words that can take different\nparts of speech depending on what they do in a sentence:\n1. Rome fell swiftly .\n2. The fallof Rome was swift.\n3. The enemy completely destroyed the city.\n4. The enemy\u2019s destruction of the city was complete .\n5. John likes to \ufb01shon the river bank.\n6. John caught a \ufb01sh.\nAdditionally, some types of verbs do not correspond to any particular action but\nserve a purely grammatical function: these include the auxiliary verbs such as did,\nshall and so on. So in summary, we can often only assign a part of speech to a word\ndepending on its function in context rather than how it relates to real things or\nevents in the world.\nLearning activity\nIdentify parts of speech in these examples:\n1. The cat sat on the mat.\n2. John sat on the chair.\n3. The dog saw the rabbit.\n4. Jack and Jill went up the hill.\n5. The owl and the pussycat went to sea.\n6. The train travelled slowly.\n2.3.3 Constituent structure\nYou will have noticed several recurring patterns in the above examples: Det Noun ,\nPrep Det Noun and so on. You may also have noticed that some types of phrase can\noccur in similar contexts: (Johnjthe cat) sat , aProper Noun or a sequence Det Noun\ncan come before a Verb. Some of these possibilities can be captured using the\npattern-matching notation introduced above, for example:\n(((theja)(catjdog))(JohnjJackjSusan))(barkedjslept)\nThis will match any sequence which ends in a verb barked orslept preceded by\neither a Determiner aorthefollowed by a Noun catordogora proper name John,\nJack orSusan .\nPatterns that have similar distributions (meaning that they can occur in similar\ncontexts) are standardly identi\ufb01ed by phrasal categories such as Noun Phrase orVerb\n14\n\nA closer look at syntax\nPhrase . A common way to represent information about constituent structure is by\nmeans of production rules of the form X!A;B;C::: . Using rules of this form,\ngrammatical sentences can be broken down into constituent phrases consisting of\nvarious combinations of POS:\nSentence!Noun Phrase, Verb Phrase\nNoun Phrase!Determiner, Noun ( Example: the, dog)\nNoun Phrase!Proper Noun ( Example: Jack)\nNoun Phrase!Noun Phrase, Conj, Noun Phrase ( Examples: Jack and Jill, the owl and the pussycat)\nVerb Phrase!Verb, Noun Phrase ( Example: saw the rabbit)\nVerb Phrase!Verb, Preposition, Noun Phrase ( Examples: went up the hill, sat on the mat)\nLearning activity\nRead through the recommended sections of the UCL \u2018Internet Grammar of English\u2019. Write production rules\nthat cover some of the examples in these sections.\n2.4 A closer look at syntax\nThis section aims to motivate the idea that texts can be analysed as hierarchical\nstructures rather than \u2018\ufb02at\u2019 sequences whose elements are organised in various\npatterns. The Essential reading for this chapter by Steven Pinker gives a concise and\naccessible introduction to some fundamental distinctions we will make in this\nsection, from the point of view of Chomskyan linguistics (compare Chomsky,\n1957/2002). Chomsky and his followers argue that some components of our\nknowledge of language are innate, and Pinker (2007, chapter 4) sketches some\narguments in support of this claim. This position is considered to be contentious by\nmany linguists and we will not address it in this course. However, Pinker\u2019s chapter\nprovides a useful introduction to syntactic analysis and clearly distinguishes between\ntwo formal techniques for modelling grammatical knowledge, which underlie\nregular andcontext-free grammars respectively (these terms will be explained as\nwe go along).\nLearning activity\nIf you have access to it, read through the recommended chapter by Pinker and make notes, and have it to\nhand while working through the remainder of this section.\nPinker notes that language makes \u2018in\ufb01nite use of \ufb01nite means\u2019, in Humboldt\u2019s\nphrase1. That is, there is no principled upper limit to the length of a grammatical\nsentence: we can always add another phrase, even if it\u2019s a banal one like \u2018one could\nsay that\u2019, \u2018and that\u2019s a fact\u2019 or \u2018and you can tell that to the Marines\u2019. A large\n1\u2018Sie [die Sprache] muss daher von endlichen Mitteln einen unendlichen Gebrauch machen\u2019 (von Hum-\nboldt, 1836, p. 122).\n15\n\nCO3354 Introduction to natural language processing\nproportion, perhaps most of the sentences we read, hear or speak every day may be\nentirely novel, at least to us.", "mimetype": "text/plain", "start_char_idx": 37352, "end_char_idx": 45421, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cacf6547-8f7e-4073-a27c-8f29e73f193a": {"__data__": {"id_": "cacf6547-8f7e-4073-a27c-8f29e73f193a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bbffa6d0-1837-4113-b1d6-88c66a801060", "node_type": "1", "metadata": {}, "hash": "f03342bd61794a1ccb4b2c79b84c86066c39273594a19a3d1aebe420c9ce4cf1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "82067e65-e783-43d3-bc7a-ce05b4b00d0d", "node_type": "1", "metadata": {}, "hash": "dc7b7a20c600cf458523ac1a4aec075d93445ee9406b5e16690cef21ad29f033", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "4735e27b-8cdd-4d13-999a-53a4a9b63e9b", "node_type": "1", "metadata": {}, "hash": "5a9da08b6c0dd122a1c32c70d8a38b0e52a7a590fa80a0beef4fde41958073b6", "class_name": "RelatedNodeInfo"}, {"node_id": "67c202fa-af61-477f-8edc-b4ec0a297225", "node_type": "1", "metadata": {}, "hash": "7e538b934cfde5d78eaf36667496764f9c31efa06c905573cd9bc167c03a0cfa", "class_name": "RelatedNodeInfo"}, {"node_id": "b3a1ad44-d0df-403a-a8a6-296508bf145e", "node_type": "1", "metadata": {}, "hash": "13e353d16e9c41ad3710c208d22361d6c49f5a6787511c6cf0a575c8cd33eddb", "class_name": "RelatedNodeInfo"}, {"node_id": "1ca2d322-aa94-4004-9761-cea3350d9aa0", "node_type": "1", "metadata": {}, "hash": "269f21e66baf08f88e8d328c9980b6b72955224c62a7013e63ff9f9f7db2ca17", "class_name": "RelatedNodeInfo"}, {"node_id": "5427e50c-c0d5-47ab-843d-455abb2954c3", "node_type": "1", "metadata": {}, "hash": "ce8f059d8bc5109badb6885004452be574830beb1ab7de904d3a894f19902c65", "class_name": "RelatedNodeInfo"}]}, "text": "Consequently, knowledge of a language seems to\nconsist in knowing rules that specify what sentences belong to the language, rather\nthan memorising long lists of sentences to be produced on appropriate occasions.\nPinker considers two different formal systems for generating or recognising\nsentences in English:\n\u2018wordchain\u2019 devices, equivalent to \ufb01nite state machines. These devices\nincorporate three distinct operations: sequence ,selection anditeration .\nPhrase structure grammars, which include the additional operation of recursion .\nNote that Pinker deliberately uses the more descriptive expression \u2018wordchain\u2019 as he\nis concerned to avoid the use of forbidding technical terminology. In what follows\nwe will stick to the standard term \ufb01nite-state machine which you are more likely to\n\ufb01nd in textbooks. You may also encounter the terms \ufb01nite-state automaton or just\n\ufb01nite automaton .\n2.4.1 Operation of a \ufb01nite-state machine\nA wordchain device or \ufb01nite-state machine (FSM) can be seen as a set of lists of\nsymbols (such as words or \ufb01xed phrases) and rules for going from list to list. A\nsimple example:\nWord lists\n1. The, a, one\n2. Cat, dog, \ufb01sh\n3. Barked, slept, swam\nRules\nIt is important to keep in mind that FSMs are neutral between accepting and\ngenerating strings. That is to say, one way to operate a FSM is to read a string, one\nsymbol at a time, and determine whether the symbol is found in the list at the\ncurrent state of the machine. If it is, we advance to the next state and read the next\nsymbol. Alternatively, this FSM could be used to generate strings by picking one\nword from each list in sequence. Some possible matching strings are:\nThe dog swam\nA cat barked\nA \ufb01sh slept\n. . .\nA more complex example:\n1.John/Mary/Fred OR\n1a.the/a/one\n1b.cat/dog/\ufb01sh\n16\n\nA closer look at syntax\n2. (optional): and/or GO TO 1\n3.slept/barked/swam OR\n3a.sat/walked\n3b.on\n3c.a/the\n3d.mat/hill\n4. (optional) and/or GO TO 3\n5. (optional) and/or/but GO TO 1 .\nThis formulation involves the basic operations of sequence, selection and iteration as\nfollows:\nSEQUENCE\nMoving from list to list in numerical order: 1, 2, 3 . . .\nSELECTION\nChoosing an item from a list, for example cat,dogor\ufb01sh; choosing between lists.\nITERATION\nRepeating particular sequences, for example:\nJohn and Mary or a \ufb01sh (repeats step 1.)\nThe cat barked but Fred walked on the hill. (Repeats steps 1\u20135, omitting step 4.)\nLearning activity\n1. Find the shortest sentence generated or accepted by the above FSM.\n2. Write out four sentences between six and 20 words long which are accepted by the FSM.\n2.4.2 Representing \ufb01nite-state machines\nThere are various conventional ways of representing a non-deterministic FSM in\nterms of a number of states and the permissible transitions between states. In our\ninformal exposition above, the numbered steps represent states and each symbol or\nword in a list counts as a possible transition to the next state. Pinker adopts a\ngraphical convention where states are depicted as nodes in a graph and transitions\nare directed, labelled arcs between the nodes; see also Partee et al. (1990, p. 457\nand following). Alternatively, the states and transitions can be shown in tabular form\nas in Table 2.1 where q1is the initial state and q4the \ufb01nal state:\n17\n\nCO3354 Introduction to natural language processing\nq1 john q2\nq1 mary q2\nq1 the q1a\nq1 a q1a\nq1a cat q2\nq1a dog q2\nq2 slept q3\nq2 barked q3\nq2 swam q3\nq3 and q1\nq3 or q1\nq3 . q4\nTable 2.1: A \ufb01nite-state machine represented as a state-transition table.\n2.4.3 Declarative alternatives to \ufb01nite-state machines\nThe FSMs shown above combine a formal speci\ufb01cation of a language with a\nprocessing strategy. It is often convenient to separate the two and de\ufb01ne the\nlanguage using expressions from a declarative formalism which can be manipulated\nusing various different algorithms. This section considers two such formalisms:\nregular expressions andregular grammars .\nRegular expressions (REs) provide a simple but powerful means of identifying\npatterns in text and are widely used in various applications of computer science. REs\nare based on three fundamental concepts which as we have seen are characteristic of\n\ufb01nite-state machines:\nsequence \u2013 to do with the order in which items occur: may include a wildcard\ncharacter which is written as the period or full stop \u2018.\u2019 and may be replaced by\nany character.\nselection \u2013 specifying a choice between alternative items or sequences, indicated by\nthe \u2018j\u2019 operator\niteration \u2013 repetition of items or sequences, indicated by the \u2018*\u2019 operator, meaning\nzero or more occurrences of whatever precedes the star.\nSome simple examples:\na*matches sequences of zero or more a\u2019s:a,aaaa ,aaaaaaaaaaa and so on. A\nsequence of zero elements is known as the \u2018empty string\u2019 and conventionally\ndenoted by the Greek letter epsilon or\u000f.\naa* sequences of one or more a\u2019s\nab* sequences of one afollowed by zero or more b\u2019s:a,ab,abbbb , . . .\n(ab)* sequences of zero or more pairs ab:\u000f,ab,abab ,ababab . . .\n(ab)j(ba) ab orba\n((ab)j(ba))* possibly empty sequences of abandbapairs:\u000f,ab,abab ,baab ,\nbababa ,abba . . . Note that parentheses operate in the usual manner as in\nmathematical or logical expressions, to denote the scope of operators.\nb.*a all strings that start with band end with a:ba,bbbaaaa ,bcccccccca . . .\n18\n\nA closer look at syntax\nProgramming languages such as Java, Perl and Python implement extensions of REs\nwith operators which are mostly redundant in that they can be reduced to\ncombinations of the above operations, but can make programs much more compact\nand readable, including:\n+\u2013 one or more of the previous item\n?\u2013 the previous item is optional\n[A-Z], [0-9] \u2013 this expression matches one of a range of characters\n\u02c6abc \u2013 matches pattern abcat the start of a string\nabc$ \u2013 matches pattern abcat the end of a string.\nSee also Bird et al. (2009, Table 3.3) and the other recommended readings on this\ntopic.\nHere are some examples of our suggested ways of recognising personal names coded\nas regular expressions. These are intended to be applied to tokenised text and every\nsequence enclosed by angled brackets <:::> stands for an individual token. In\nExamples 1, 3 and 4 below, the material within parentheses represents the target\nstring and sequences outside parentheses provide the context.\n1.<Mrs?>(<.+>) matches \u2018Mr\u2019 or \u2018Mrs\u2019 followed by any string. The \ufb01rst token\nconsists of the sequence Mrfollowed optionally by the character s. The second\nconsists of a sequence of one or more characters: any character may occur in\nplace of the wildcard \u2018.\u2019.\n2.<[A-Z][a-z]+ >+ matches any sequence of one or more capitalised words.\n3. (<[A-Z][a-z]+ >+)<,><[0-9]+>matches capitalised word(s) followed by a\ncomma and a number (age).\n4. (<[A-Z][a-z]+ >+)<saidjreportedjclaimed>.\nLearning activity\n1. Write a regular expression for all strings consisting of an odd number of a\u2019s followed by an even\nnumber of b\u2019s.\n2. Write a regular expression for all sequences of a\u2019s and b\u2019s of length 3.\n3. Write a regular expression for all strings that contain abba somewhere within them.\nAs you have probably observed, the pattern-matching notation we used in section\n2.3 employed a subset of the RE syntax, and we could in principle use regular\nexpressions to encode simple grammars as presented in that section. For example:\n( (JohnjMaryjFred)j( (theja)(catjdogj\ufb01sh) )\n(barkedjsleptjswam)\n((andjor) (barkedjsleptjswam))*\nmatches sentences like:\n1. John slept\n2. The cat barked or swam\n3. Mary swam and barked or slept\n19\n\nCO3354 Introduction to natural language processing\n4. . . .\nIt can be seen that even conceptually simple REs can rapidly become almost\nunreadable.", "mimetype": "text/plain", "start_char_idx": 45422, "end_char_idx": 53071, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "82067e65-e783-43d3-bc7a-ce05b4b00d0d": {"__data__": {"id_": "82067e65-e783-43d3-bc7a-ce05b4b00d0d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cacf6547-8f7e-4073-a27c-8f29e73f193a", "node_type": "1", "metadata": {}, "hash": "56601d4d3509279d0de8be501e3c33b7c35f95ee6c1480f5bccda2aba9ca4865", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1a84b85d-b39c-4ab0-afff-3684dea944b4", "node_type": "1", "metadata": {}, "hash": "344bf28111010b20c930da446ef74d58dbabdbf1e66ac15d3c706f05ed882013", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "46c06b8b-f6e7-4470-86dc-f4c7fe815a21", "node_type": "1", "metadata": {}, "hash": "4acc9b66afa8fce868817561f2f574f602de3e07a4c0ab80015768e8aee8f930", "class_name": "RelatedNodeInfo"}, {"node_id": "83bff032-4712-45a6-8a31-ba9c65fa698b", "node_type": "1", "metadata": {}, "hash": "41d9739c35b957d659800e6de08200b62985682eed784df6424e21d306615785", "class_name": "RelatedNodeInfo"}, {"node_id": "aeced65f-b145-4940-ab80-ede84f1c5d67", "node_type": "1", "metadata": {}, "hash": "fc8f39becf40de4706395c99b6110aba5771da619b6555979a56a93912cda787", "class_name": "RelatedNodeInfo"}, {"node_id": "cddeb800-4135-4ae7-b951-9c90c2298dee", "node_type": "1", "metadata": {}, "hash": "2e0a79bc50f2be4edc289a608024caa78f87e5e3eac840fad1c804db4b74979a", "class_name": "RelatedNodeInfo"}, {"node_id": "ad41c290-bd3e-4411-8ac2-5560c265bad6", "node_type": "1", "metadata": {}, "hash": "96d5d67812676381d4fea250702a342abbbbcef24fbb274484b764c4c4c42ffe", "class_name": "RelatedNodeInfo"}]}, "text": "It can be seen that even conceptually simple REs can rapidly become almost\nunreadable. A more manageable formalism is a regular grammar , made up of\nproduction rules or rewrite rules of the kind you have seen in the previous section:\nS!JohnjMaryjFred VP\nS!theja S1\nS1!catjdogj\ufb01sh VP\nVP!barkedjsleptjswam VP1\nVP1!andjor VP\nVP1!\u000f\nA sequence of words forms a grammatical sentence according to a grammar of this\ntype if one can draw a tree diagram like Figure 2.1 such that:\n1. The root node is SorSentence .\n2. For every node that matches the left hand side (LHS) of a grammar rule, one can\ndraw a subtree with the items on the right hand side (RHS) as daughter nodes.\n3. When no more grammar rules can be applied, every leaf node of the tree\nmatches a word in the language or the empty string \u000f.\nS\ntheS1\ncatVP\nbarkedVP1\norVP\nswamVP1\n\u000f\nFigure 2.1: A right-branching tree.\nSymbols which only occur on the right-hand side of rules, and so can only appear as\nleaf-nodes in a tree, are known as terminal symbols . Regular grammars have the\nrestriction that when non-terminal symbols appear on the RHS they must either\nalways be the rightmost symbol, or always the leftmost. These classes of grammars\nare known as right-linear andleft-linear respectively. A right-linear grammar will\nalways result in a right-branching tree as in the above example.\n20\n\nA closer look at syntax\nLearning activity\nDraw tree diagrams according to the above grammar for the sentences:\n1. The dog slept.\n2. Mary swam and barked or slept.\n2.4.4 Limitations of \ufb01nite-state methods \u2013 introducing context-free grammars\nPinker (2007, p.86) gives an example of a \u2018wordchain device\u2019 or FSM which is\nintended to show the limitations of \ufb01nite-state methods for handling natural\nlanguage. The procedure is apparently designed to deal with complex sentences\nincluding constructions like If. . . then. . . andEither. . . or . . . . If we look at a few\npossible matching strings, we see clearly that some are grammatical sentences but\nothers are nonsensical. (Following a standard convention in linguistics, the\nunacceptable cases are marked with an asterisk \u2018*\u2019.)\nEither a happy girl eats ice cream or the boy eats hot dogs.\n*Either a happy girl eats ice cream then one dog eats candy.\nIf a girl eats ice cream then the boy eats candy.\n*If a girl eats ice cream or the boy eats candy.\nLearning activity\n1. Write a regular grammar that is equivalent to the FSM in Pinker (2007, p. 86).\n2. Convince yourself that it allows you to draw well-formed trees for the ungrammatical examples above.\n3. What characteristic of the grammar prevents it from ruling out the ill-formed examples?\nSee \u2018Answers to Activities\u2019 in Appendix C (p. 98) for further discussion.\nIn order to handle these kinds of sentences correctly we need to add new kinds of\nrewrite rules, going beyond the class of right- or left-linear grammars:\n1. To match pairs of words like if . . . then ,either . . . or , we need rules where a\nnon-terminal symbol on the RHS can have additional material on both sides as\nin the \ufb01rst two rules below.\n2. In order to allow for inde\ufb01nite nesting \u2013 if either John will come if Mary does, or\n. . .we need rules where the same symbol can occur on both sides of the arrow.\nThis is known as self-embedding orcentre-embedding .\nNote that centre-embedding is an instance of recursion in grammar; right-linear\ngrammars may also include recursive rules but they can always be processed\niteratively rather than recursively (Jurafsky and Martin, 2009, p. 447).\n21\n\nCO3354 Introduction to natural language processing\nS!Either S or S\nS!If S then S\nS!NP VP\nNP!Det N\nDet!ajthej\u000f\nN!girljboyjdogjcatjburgersjcandyjcreamjcake\nVP!V NP\nVP!V PP\nPP!P NP\nV!eatsjlikesjsat\nP!on\nThe above grammar handles these cases correctly as well as simple sentences like\nThe cat sat on the mat :\nS\nNP\nDet\ntheN\ncatVP\nV\nsatPP\nP\nonNP\nDet\ntheN\nmat\nFigure 2.2: Tree diagram for The cat sat on the mat.\nIt is also acceptable to represent trees using labelled bracketed strings as in the\nexample below:\n(S\n(NP (Det the ) (N cat ))\n(VP (V sat )\n(PP\n(P on )\n(NP\n(Det the ) (N mat ) )\n)\n)\n)\n22\n\nA closer look at syntax\nFigure 2.3 is an example of self-embedding.\nS\nIf S\nNP\nDet\ntheN\ncatVP\nV\nlikesNP\nDet\n\u000fN\ncreamthen S\nNP\nDet\ntheN\nboyVP\nV\neatsNP\nDet\n\u000fN\nburgers\nFigure 2.3: Tree diagram with self-embedding.\nLearning activity\n1. Trace through the grammar rules and satisfy yourself that Figure 2.3 represents the structure of the\nsentence If the cat likes cream then the boy eats burgers according to the grammar.\n2. What is the shortest sentence generated by the above grammar?\n3. Using the above grammar, draw complete tree diagrams for:\n(a) If the girl likes cake then either the boy eats burgers or the boy eats candy.\n(b) If either the boy likes cake or the girl likes burgers then the dog eats candy.\n4. Think of ways to modify the grammar to generate more natural-sounding sentences.\n2.4.5 Looking ahead: some further uses of regular expressions\nIn this chapter we have so far looked at \ufb01nite-state formalisms as techniques for\ngenerating or recognising short phrases as well as whole sentences, and found them\nto be wanting. Many current applications in language technology do not, in fact,\nrequire complete analysis of sentences but proceed by looking for patterns of interest\nwithin a text and discarding what does not match these patterns. Finite-state\nmethods are often quite adequate for these applications and you will see many uses\nfor regular expressions in later chapters of this guide. Some examples we will look at\nin more detail in later chapters are:\nstemming: extracting the \u2018base form\u2019 of a word as informally presented in\nsection 2.5 of this chapter\ntagging: automatically assigning POS or other forms of mark-up to elements in a\ntext\nchunking: grouping together a sequence of words as a phrase\ninformation extraction: identifying chunks that denote meaningful entities,\nevents or other items of interest.\n23\n\nCO3354 Introduction to natural language processing\n2.4.6 Looking ahead: grammars and parsing\nThe pseudocode and graphical representations of wordchains (FSMs) combine a\nspeci\ufb01cation of the well-formed sentences in a language fragment with a processing\nstrategy. It is important to keep in mind that formal grammars made up of a series of\nproduction rules do notencode a processing strategy. As stated above, a grammar is\na declarative speci\ufb01cation of the strings that make up a language while parsers use a\nvariety of algorithms to apply the grammar rules. We will look at some of these\nparsing strategies in Chapter 6 of this subject guide.\n2.5 Word structure\nWords combine in different orders to form sentences and phrases; they also have\ninternal structure. Nouns in English may have different endings according to\nwhether they are singular ( a box ) or plural ( some boxes ) while in some languages\nthis information may be expressed at the start of the word, for example Swahili ziwa\n(\u2018lake\u2019) vs maziwa (\u2018lakes\u2019). In English, endings of verbs can indicate person, number,\ntense and mood2, while other languages may make different dictinctions. Nouns and\nverbs are sometimes classi\ufb01ed as regular or irregular according to whether their\nin\ufb02ected forms can be derived by following simple rules. Table 2.2 shows examples\nof some common past tense forms in English.\nPresent Past\nbecome became\ncome came\nmistake mistook\nmisunderstand misunderstood\nring rang\nsell sold\nshake shook\nsing sang\nsink sank\nstand stood\ntake took\ntell told\ntravel travelled\nunderstand understood\nwithstand withstood\nTable 2.2: Past tense forms (1).\nThe sub\ufb01eld of linguistics known as morphology is concerned with the structure of\nwords and is concerned, among other things, with formulating rules for deriving\ndifferent forms of a word according to its grammatical role. Here are some rules\nwhich appear to cover the examples in the table:\n2See the Internet Grammar of English at http://www.ucl.ac.uk/internet-grammar/verbs/verbs.htm (last\nvisited 27th May 2013) for explanations of these terms.", "mimetype": "text/plain", "start_char_idx": 52985, "end_char_idx": 60996, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1a84b85d-b39c-4ab0-afff-3684dea944b4": {"__data__": {"id_": "1a84b85d-b39c-4ab0-afff-3684dea944b4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "82067e65-e783-43d3-bc7a-ce05b4b00d0d", "node_type": "1", "metadata": {}, "hash": "dc7b7a20c600cf458523ac1a4aec075d93445ee9406b5e16690cef21ad29f033", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b578b6bf-a334-46de-b8b8-f69eb8edcaba", "node_type": "1", "metadata": {}, "hash": "ede7df7436362662e345e6d8f1f1621d2ee2e5834e38ac9c9cb69083c8ab691c", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "ee009c33-67bd-4d9c-a8aa-a973b3866530", "node_type": "1", "metadata": {}, "hash": "e91fdcc120dd053bbf999c025bbe023bc3b7d11f505ae4dd0636cbc7badd4cc1", "class_name": "RelatedNodeInfo"}, {"node_id": "a55c8c92-8ade-40a1-a42f-f008eda9d766", "node_type": "1", "metadata": {}, "hash": "195ca86935123f01807b6003a4113e6ef0aeda002aadd0578ed62fd9d78db553", "class_name": "RelatedNodeInfo"}, {"node_id": "27cb265c-8a30-4a47-a431-56e87c0a3422", "node_type": "1", "metadata": {}, "hash": "1ca2f1c7264d481213e290302dceb2bbd5a432e5efd3ecede18a32d82caf51ef", "class_name": "RelatedNodeInfo"}, {"node_id": "fb053235-5ae2-4f9b-bd35-e0e6f22d0db6", "node_type": "1", "metadata": {}, "hash": "26e5eca3eeb1c0b5b89bef5b85d578bc273260ac2df965e1bf0f2dc802235239", "class_name": "RelatedNodeInfo"}, {"node_id": "b00aced5-cdc9-4bd1-ba06-97586566fc1e", "node_type": "1", "metadata": {}, "hash": "fbc212093bf77a0790d66ab228d1a3ab8e4cd0102c4d73dc944ee91b4334828b", "class_name": "RelatedNodeInfo"}]}, "text": "24\n\nA brief history of natural language processing\nSome rules for past-tense formation\n-come!-came\n-take!-took\n-ing!-ang\n-ink!-ank\n-ell!-old\n-and!-ood\n-el!-elled\nSome of these rules could be made more general: we could combine the -ingand\n-inkrules to a single rule, -in !-an. On the other hand, some rules which work for\nthese particular examples would fail if applied to a wider range of data: we have\ncome!came ,become!became but not welcome!*welcame . This is an example of\nrules over\ufb01tting the data.\nLearning activity\nModify the above rules so that they will account for the past tense forms in Table 2.3 as well as in Table 2.2.\nPresent Past\nbake baked\ncommand commanded\nbring brought\nsling slung\nsmell smelt\nthink thought\nwake woke\nTable 2.3: Past tense forms (2).\nA natural language application such as a machine translation system will typically\ninclude a database of words or lexicon along with rules for deriving word endings:\nfor example, a translation from English into Dutch might handle the word brought as\nfollows:\n1. Find the stem of brought and interpret the in\ufb02ection: bring +past\n2. Find the Dutch equivalent of bring :brengen\n3. Find the past tense of brengen :bracht\nThe process of removing af\ufb01xes from words to derive the basic form is called\nstemming . We will look at some tools for doing this in Chapter 4, and you will also\nhave the opportunity to encode your own rules as regular expressions.\n2.6 A brief history of natural language processing\nThe \ufb01eld of natural language processing or computational linguistics builds on\ntechniques and insights from a number of different disciplines, principally\n25\n\nCO3354 Introduction to natural language processing\ntheoretical linguistics and computer science but with some input from mathematical\nlogic and psychology.\nThe notions of a \ufb01nite-state machine and context-free grammar (CFG) were \ufb01rst\nintroduced to linguistics by Chomsky (1957; see Pullum (2011) for a somewhat\ncritical reappraisal). Chomsky argued that both formalisms were inadequate for\nmodelling natural language and proposed an additional operation of\ntransformations, which could essentially permute the output string of a CFG in\nvarious ways. Chomsky\u2019s work introduced a methodology which was to dominate\ntheoretical linguistics for the next couple of decades: linguists concentrated on\npostulating formal rules of grammar which were tested against their own intuitions\nor those of native speakers of other languages, rather than seeking to induce rules\nfrom large collections of data. Part of the rationale for this was that native speakers\nof a language are able to recognise whether a sequence of words makes up an\nacceptable sentence in their language, even if they have never encountered those\nwords in that particular order before. Prior to what was to become known as the\nChomskyan revolution, corpus-based approaches had been the norm in general\nlinguistics. This tradition was overshadowed for a time by so-called \u2018generative\u2019\nlinguistics, but corpus-based research continued in some quarters until its resurgence\nin the 1980s, including the development of the \ufb01rst machine-readable corpus by the\nJesuit priest Fr Robert Busa. Busa developed a 10 million-word corpus of medieval\nphilosophy on punch-cards, with the support of Thomas Watson of IBM (McEnery\nand Wilson, 2001, pp. 20\u201321).\nWork in formal grammar tended to assume a \u2018backbone\u2019 of context-free rules,\naugmented with various mechanisms to handle data that appeared to go beyond the\ncontext-free model; some important developments were Generalised Phrase\nStructure Grammar (Gazdar et al., 1985) and Head-driven Phrase Structure\nGrammar (Pollard and Sag, 1994). We will see examples of these extra mechanisms\nin Chapter 6.\nEarly work on automated language processing was essentially procedural in its\nmethodology, working with a type of \ufb01nite-state machine called transition\nnetworks which were extended as augmented transition networks to cope with\nvarious linguistic constructions (Woods, 1970). Later work based on declarative\ngrammar formalisms employed techniques including deductive parsing (Pereira and\nWarren, 1983) and uni\ufb01cation (Kay, 1984). The former adopts techniques from the\nAI \ufb01eld of automated reasoning: the core idea is that parsing a sentence can be seen\nas constructing a logical proof that a particular sequence of words forms a proper\nsentence according to a given set of grammar rules. Uni\ufb01cation grammars treat\nlinguistic objects as sets of attributes or features with a \ufb01nite range of values, and\ngrammar rules specify that particular items in a sentence must have the same or\ncompatible values for certain features. For example, the subject and main verb of a\nsentence should have the same value for the number feature. We will consider\ndetailed examples in Chapter 6.\nMeanwhile, substantial progress was made in lower-level tasks such as speech\nrecognition and morphological analysis using probabilistic techniques and\n\ufb01nite-state models. During the late 1990s these techniques were extended to cover\ntasks such as parsing, part-of-speech tagging and reference resolution (recognising\nwhether or not different expressions in a document referred to the same person or\nentity). These developments were driven by a number of factors: the continuing\nincrease in the processing speed and memory capacity of computers; the availability\nof massive amounts of spoken and written material, both in unstructured form on\nthe world wide web and with various types of annotation in corpora such as the\n26\n\nSample examination questions\nPenn Treebank3or the British National Corpus4, and events such as the Message\nUnderstanding Conferences5which were initially sponsored by the US Department\nof Defense to measure and foster progress in extracting information from\nunstructured text.\nMuch work since around the year 2000 has involved the use of machine learning\ntechniques such as Bayesian models and maximum entropy (see Chapter 5). This\nhas involved using annotated corpora to train systems to segment and annotate texts\naccording to various morphological, syntactic or semantic criteria. These techniques\nhave been systematically applied to particular tasks such as parsing, word sense\ndisambiguation, question answering and summarisation.\n2.7 Summary\n1. This chapter has characterised the subject matter of the course as being\nconcerned with various ways of using computer programs to analyse text, by\nwhich we mean words, numbers, punctuation and other meaningful symbols\nthat are printed on paper or some other \ufb02at surface, or displayed on a screen.\n2. Some fundamental operations in text analysis include tokenisation , which\ninvolves extracting these meaningful elements from a stream of electronic\ncharacters and discarding white space, line feed characters and other material\nwhich has no explicit meaning for a human reader, and using regular\nexpressions to identify patterns in a text.\n3. Regular expressions are composed of the three basic operations of sequence,\nselection and iteration, and have many applications in computational linguistics\nand computer science at large. A \ufb01nite-state machine is a process whose\noperations can be speci\ufb01ed by means of regular expressions. A regular grammar\nis a set of production rules or rewrite rules that de\ufb01nes the sentences that make\nup a language, and any language de\ufb01ned by a regular grammar can be\nprocessed by a \ufb01nite state machine or described using a regular expression.\n4. A complete syntactic analysis of natural language sentences is generally held to\nrequire the additional operation of centre-embedded recursion, which is beyond\nthe power of \ufb01nite-state methods. Recursion is formally encoded in context-free\ngrammars.\n5. Not only do words combine in various patterns and structures to form sentences;\nthey also have internal structure which can be described to an extent using rules\nfor regular and irregular forms.\n6. The current state of NLP or computational linguistics builds on research results\nand concepts from many different \ufb01elds, and we have sketched some of the\nhighlights in a very short history of the discipline.\n2.8 Sample examination questions\nYou can expect a list of RE operators to be included as an appendix in the\nexamination paper.\n3http://www.cis.upenn.edu/ \u0018treebank/; last visited 27th May 2013\n4http://www.natcorp.ox.ac.uk/; last visited 27th May 2013\n5http://www.itl.nist.gov/iaui/894.02/related projects/muc/; last visited 27th May 2013\n27\n\nCO3354 Introduction to natural language processing\n1. S!NP VP\nNP!Det N\nNP!PN\nVP!V\nVP!V NP\nVP!V NP PP\nVP!VP Adv\nPP!P NP\nDet!theja\nN!waiterjchairsjtablesjhoteljmanager\nPN!OscarjParis\nV!diedjputjsawjcalled\nAdv!suddenlyjquicklyjslowly\nP!injon\n(a) Using the grammar rules above, draw syntax trees for:\ni. Oscar died suddenly.\nii. The waiter put the chairs on the tables.\niii.", "mimetype": "text/plain", "start_char_idx": 60997, "end_char_idx": 69823, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b578b6bf-a334-46de-b8b8-f69eb8edcaba": {"__data__": {"id_": "b578b6bf-a334-46de-b8b8-f69eb8edcaba", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1a84b85d-b39c-4ab0-afff-3684dea944b4", "node_type": "1", "metadata": {}, "hash": "344bf28111010b20c930da446ef74d58dbabdbf1e66ac15d3c706f05ed882013", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a3c5fdd3-166a-4c90-b1a8-c7f4272a0965", "node_type": "1", "metadata": {}, "hash": "998501f923c5cdb2a2cb8340ea1556f92c5240bf878a257b25c2713abdcc0b4e", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "ff5a7c25-0652-411a-93ed-b2bd0f2abd38", "node_type": "1", "metadata": {}, "hash": "58de69c4a65cb26857e3225e65c301dcf37befb40d1fd58fc29b011dfd90f8fb", "class_name": "RelatedNodeInfo"}, {"node_id": "a56a6a43-464c-40ce-b47d-5c91b46df98a", "node_type": "1", "metadata": {}, "hash": "16bcbbcd36e57bd3f492f095c8baf7be01cad110f7d0f8cf0dbe9f9fc8080c8f", "class_name": "RelatedNodeInfo"}, {"node_id": "663ec1f4-8deb-46d6-9e2e-da95ecf8e48d", "node_type": "1", "metadata": {}, "hash": "2f4a4c1b19c7cb7b80557590f8b8765af7514afd39b962820539cf7ad1d59293", "class_name": "RelatedNodeInfo"}, {"node_id": "6d41249a-c560-4f19-952c-9d4aef985451", "node_type": "1", "metadata": {}, "hash": "b3b8af9972925addc775cd5c1fb009de997b2d6f7f9a1027aacaf1dc3032e71f", "class_name": "RelatedNodeInfo"}, {"node_id": "4153621b-fc78-4b98-b9b3-e372de826ce8", "node_type": "1", "metadata": {}, "hash": "27d6f3f067c0e5a0dda788a93c26faa5b206226c4ac962d25fb2c39b2d3d8677", "class_name": "RelatedNodeInfo"}]}, "text": "ii. The waiter put the chairs on the tables.\niii. Oscar called the waiter.\n(b) Modify the grammar so that it generates the unstarred sentences below as\nwell as (i\u2013iii) above but not the starred ones. Explain the reasons for your\nmodi\ufb01cations.\ni. Oscar died in Paris.\nii. Oscar died in a hotel in Paris.\niii. The waiter came to the table when Oscar called him.\niv. When Oscar called him the waiter came to the table.\nv. * Oscar put\nvi. * The waiter saw on the tables\nvii. * The waiter put in the chairs\nviii. * The waiter put the chairs\nix. * Oscar died the table\nx. * When Oscar called him when the waiter came to the table.\n2. Write a regular expression that will identify male and female names in context,\nin an English-language text. Discuss ways in which this might over- or\nunder-generate.\n3. Explain the difference between regular and context-free grammars and discuss\nthe claim that natural language grammars need at least context-free power.\n4. (a) Write a regular grammar which generates the following sentences:\ni. This is the kid that my father bought.\nii. This is the cat that killed the kid that my father bought.\niii. This is the dog that worried the cat that killed the kid that my father\nbought.\niv. This is the stick that beat the dog that worried the cat that killed the kid\nthat my father bought.\n(Brewer\u2019s Dictionary of Phrase and Fable , 1896)\n(b) Write out three more sentences generated by your grammar.\n28\n\nChapter 3\nGetting to grips with natural language data\nEssential reading\nBird et al. (2009) Natural Language Processing with Python Chapters 1 and 2\nparticularly: 1.1\u20131.3, 2.1\u20132.2, 2.5.\nRecommended reading\nMcEnery (2003) \u2018Corpus Linguistics\u2019 in Mitkov (2003) is a succinct overview of the\ntopic from one of the leading scholars in the \ufb01eld.\nAdditional reading\nMcEnery and Wilson (2001) Corpus Linguistics is an established undergraduate\ntextbook; Chapters 2 and 3 are especially relevant for this topic.\nMcEnery and Hardie (2011) Corpus Linguistics: Method, Theory and Practice . Chapter\n3 addresses the important topic of research ethics for corpus linguistics, which is\noften neglected in technical or academic presentations of the subject.\n3.1 Learning outcomes\nBy the end of this chapter, and having completed the Essential reading and activities,\nyou should be able to:\nexplain what is meant by a corpus in the context of natural language processing,\nand describe some different types, structures and uses of corpora\ndescribe the characteristics of some well-known corpora and other language\nresources such as the Brown corpus, Penn treebank, Project Gutenberg and\nWordNet\nUse online interfaces and other software tools to do some basic corpus analysis,\nincluding concordancing and \ufb01nding collocations\nlocate and format raw text documents and analyse them using corpus tools.\n3.2 Using the Natural Language Toolkit\nAs stated in Chapter 1, this subject guide is not intended as a stand-alone tutorial in\nusing the NLTK or the Python language. You are advised to read through the\nrecommended sections of Bird et al. (2009) and work through the exercises marked\n29\n\nCO3354 Introduction to natural language processing\nYour turn . You may also \ufb01nd it useful to attempt some of the exercises provided at\nthe end of each chapter.\nFrom this chapter onwards you will be running Python sessions and using the NLTK.\nYou should get into the habit of starting sessions with the following commands:\n>>> from __future__ import division\n>>> import nltk, re, pprint\nOne of the features that makes the Python language suitable for natural language\napplications is the very \ufb02exible treatment of data structures such as lists, strings and\nsequences. You should be familiar with these structures from previous programming\ncourses, but should ensure you understand the way they are handled in Python. For\nthis chapter, only lists are relevant and you should study Bird et al. (2009, section\n1.2) before trying any of the learning activities in this chapter.\n3.3 Corpora and other data resources\nAs explained in the previous chapter, much natural language processing relies on\nlarge collections of linguistic data known as corpora (plural of corpus ). A corpus can\nbe simply de\ufb01ned as no more than a collection of language data, composed of\nwritten texts, transcriptions of speech or a combination of recorded speech and\ntranscriptions.\nCorpora fall into three broad categories (McEnery, 2003, p.450):\nMonolingual corpora consist, as the name suggests, of data from a single\nlanguage.\nComparable corpora include a range of monolingual corpora in different\nlanguages, preferably with a similar level of balance and representativeness, and\ncan be used for contrastive studies of those languages.\nParallel corpora include original texts in one language with translations of those\ntexts in one or more different languages. Parallel corpora can be used to train\nstatistical translation systems.\nA corpus is generally expected to have additional characteristics: corpora are usually\nconstructed so as to be balanced andrepresentative of a particular domain (McEnery\nand Wilson, 2001, pp. 29\u201330). (Sometimes the term is used more loosely to cover\nany large collection of language data which need not have been compiled\nsystematically, as in the phrase \u2018the web as corpus\u2019.) Sampling theory is a branch of\nstatistics that deals with questions such as: how many respondents are needed in an\nopinion poll for the results to be considered to represent public opinion at large?\nSimilar considerations arise in corpus linguistics. This is particularly important if a\ncorpus is to be used for quantitative analysis of the kind described in Chapter 5: if\nthe corpus data is skewed or unrepresentative then results of the analysis may not be\nreliable. These considerations may be less important if the corpus is collected for the\nliterary or historical interest of the documents that make it up, as is the case with\nProject Gutenberg for example.\nFor example, Bird et al. (2009, pp. 407\u2013412) refer to the TIMIT corpus, an annotated\nspeech corpus developed by Texas Instruments and MIT. To ensure\nrepresentativeness, it was designed to include a wide coverage of dialect variations.\nCorpus builders need to exercise expert judgment in deciding on the sampling frame ,\n30\n\nSome uses of corpora\nor \u2018the entire population of texts from which we will take our samples\u2019 (McEnery and\nWilson, 2001, p. 78) and calculating the size of the corpus that is necessary for it to\nbe maximally representative. The sampling frame may, for example, be bibliographic ,\nbased on some comprehensive index or the holdings of a particular library, or\ndemographic , selecting informants on the basis of various social categories as is often\ndone in public opinion research.\nCorpora have tended to be of a \ufb01nite size and to remain \ufb01xed once they have been\ncompiled. There are also what is known as monitor corpora which are continually\nupdated with new material. This is particularly useful for compilers of dictionaries\nwho need to be able to track new words entering the language and the changing or\ndeclining use of old ones. An example of a monitor corpus is the COBUILD Bank of\nEnglishTM, which had around 300 million words when it was referred to by McEnery\n(2003) and has since more than doubled in size to 650 million words.\nA further distinction is between corpora consisting solely of the original or \u2018raw\u2019 text\nand those that have been marked up with various annotations. One common\ntechnique is standoff annotation where the mark-up is stored in a different \ufb01le from\nthe original text (McEnery and Wilson, 2001, p.38); (Bird et al., 2009, p.415).\nFinally, corpora can be further classifed according to their structure:\nIsolated \u2013 an unorganised collection of individual texts such as the Gutenberg\nonline collection of literary works.\nCategorised \u2013 texts are organised by categories such as genre; an example is the\nBrown corpus described below.\nOverlapping \u2013 some categories overlap. A news corpus such as Reuters may contain\nstories which cover both politics and sport, for example.\nTemporal \u2013 texts indicate language use over time. Examples are the Inaugural\ncorpus of all inaugural speeches by US Presidents, and the Helsinki Diachronic\ncorpus of about 1.6 million words of English dating from the early 9th century\nCE to 1710.\nSome examples of corpora, which will be described in more detail later in the\nchapter, are:\nBrown Developed at Brown University in the early 1960s.\nBNC British National Corpus, created and managed by BNC consortium which\nincludes Oxford and Lancaster universities, dictionary publishers OUP,\nLongmans and Chambers, and the British Library.\nCOBUILD (Bank of English) The Bank of EnglishTMforms part of the Collins\nCorpus, developed by Collins Dictionaries and the University of Birmingham,\nand contains 650 million words.", "mimetype": "text/plain", "start_char_idx": 69774, "end_char_idx": 78609, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a3c5fdd3-166a-4c90-b1a8-c7f4272a0965": {"__data__": {"id_": "a3c5fdd3-166a-4c90-b1a8-c7f4272a0965", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b578b6bf-a334-46de-b8b8-f69eb8edcaba", "node_type": "1", "metadata": {}, "hash": "ede7df7436362662e345e6d8f1f1621d2ee2e5834e38ac9c9cb69083c8ab691c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "412fa60f-8bac-447e-b1ee-d0fb7494c16c", "node_type": "1", "metadata": {}, "hash": "afebe6d95348ffdc802655920fdcc5af4ff143eec34b3e9135247742c2d09f04", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "c57a2913-0d23-4354-ad83-71e73056ffc4", "node_type": "1", "metadata": {}, "hash": "fea12ba9dc0c56ce8a3822a2f505569236b118afdef626821dfaadfaaae7de5f", "class_name": "RelatedNodeInfo"}, {"node_id": "904b603f-e9f0-40fd-afb4-49d424dc6962", "node_type": "1", "metadata": {}, "hash": "45bc6d15442a04c832e00900ff0d47dae7d175253575655e3098b0cb09dce8d4", "class_name": "RelatedNodeInfo"}, {"node_id": "09844597-bb35-462d-ad51-b956020e3374", "node_type": "1", "metadata": {}, "hash": "6254c7c7a4f0fc67f7cf196063b01894b1974e8fdaa13d2ea9d7b54508fd3a21", "class_name": "RelatedNodeInfo"}, {"node_id": "4602b0fa-2ce6-457b-b66b-b9fb64c4c3be", "node_type": "1", "metadata": {}, "hash": "272f690e9952135a1a37931aad4074c247629749eb7cd08a470e558fd61afc53", "class_name": "RelatedNodeInfo"}, {"node_id": "0d595c8c-a021-4a78-b184-9314729c5bd9", "node_type": "1", "metadata": {}, "hash": "47d313df08f35204103e7cf68be1730ee1a7e9a1c14ed70f060070f63b74f248", "class_name": "RelatedNodeInfo"}]}, "text": "Gutenberg An archive of free electronic books in various formats hosted at\nhttp://www.gutenberg.org /\nPenn Treebank A corpus of reports from the Wall Street Journal and other sources\nin various different formats.\n3.4 Some uses of corpora\nMcEnery and Wilson (2001, Chapter 4) discuss a variety of uses for corpora, some of\nwhich are brie\ufb02y discussed below.\n31\n\nCO3354 Introduction to natural language processing\n3.4.1 Lexicography\nModern dictionaries such as Chambers, Collins and Longmans now rely heavily on\ncorpus data in order to classify and inventorise the various ways words can be used\nin contemporary English as well as any ways these uses may have changed. For\nexample, a lexicographer who wishes to determine whether the words scapegoat ,\nthermostat orleverage can be used as verbs can enter the appropriate search string\nand be presented with examples such as the following (from the BNC):\nScapegoating an individual prevents the debate and delays community\nunderstanding .\nThe measuring cell is immersed in a vat of liquid, usually benzene or xylene which\ncan be thermostatted at temperatures between 273 and 400 K .\nThese one-time costs once met could be leveraged over much more business activity\naround the globe than we then enjoyed .\nMcEnery and Wilson (2001, p. 107) discuss a case where they claim that two\nwell-known dictionaries had \u2018got it wrong\u2019 by listing quake as a solely intransitive\nverb, while examples in a transitive construction can in fact be found through a\ncorpus search:\nThese sudden movements quake the Earth. (BNC)\nIt is perhaps debatable whether the dictionaries in question were \u2018wrong\u2019 to\ndisregard examples like this, or the compilers may have judged this to be an\nidiosyncratic usage which did not merit being included in a work of reference with\nthe status of standard usage.\n3.4.2 Grammar and syntax\nLarge-scale grammars for pedagogic and reference use such as the Comprehensive\nGrammar of the English Language (Quirk et al., 1985) or the Cambridge Grammar of\nthe English Language (Huddleston and Pullum, 2002) use corpora among their\nsources of information along with results of linguistic research and the compilers\u2019\nown subjective intuitions as competent speakers of the language, although this has\ntended to involve qualitative rather than quantitative analysis. Recent advances in\ncomputational power and developments in parsed corpora and tools to analyse them\nhave made it possible for researchers to carry out quantitative studies of various\nkinds of grammatical frequency, such as the relative frequency of different clause\ntypes in English. Other studies use corpora to test predictions made by formal\ngrammars that have been developed within the generative school of linguistics. The\nCOBUILD project which provided the resources for Collins English dictionaries has\nalso resulted in a series of small handbooks covering various kinds of grammatical\nconstruction, which are useful both for advanced language learners and for linguists\nin search of examples.\n3.4.3 Stylistics: variation across authors, periods, genres and channels of\ncommunication\nThe notion of style in communication is that people generally have a choice between\ndifferent ways of expressing themselves and not only do individuals tend to make\n32\n\nCorpora\nsimilar choices each time they communicate, but their particular choices may be\nmore characteristic of particular genres (romantic \ufb01ction, \ufb01nancial news, court\nreports and so on), time periods and channels of communication. By channels we\nmean distinctions such as written text compared with spoken discourse, both of\nwhich can be further subdivided: people will make different choices when\ncomposing emails, sending text messages or (rarely) writing a letter by hand. We\nprobably also adopt different styles when talking face-to-face and on the telephone.\nLiterary scholars as well as law enforcement and intelligence agencies may have an\ninterest in identifying the author of a document from internal evidence. There have\nbeen various famous and less well-known instances of controversial attribution of\nauthorship: for example, various \ufb01gures have been put forward as the authors of\nShakespeare\u2019s plays.\n3.4.4 Training and evaluation\nIn addition to the applications listed above, corpora are routinely used in linguistic\nresearch for training and testing machine-learning systems for speci\ufb01c tasks in text\nanalytics such as:\ndetecting the topic of a document\nanalysing the sentiments expressed for or against some product or policy\nidentifying individuals described in a text, relations between them and events\nthey participate in\nstatistical parsing\nstatistical machine translation.\nFor example, the Brown corpus and the WSJ corpus are typically used for evaluating\ntext segmentation among other text processing tasks (Mikheev, 2003, p. 203).\nThese topics will be covered in more detail in Chapter 5 of this subject guide, where\nyou will be introduced to various machine-learning techniques. These will all be\ntypes of supervised learning , where a system is trained on \u2018corpora containing the\ncorrect label for each input\u2019 (Bird et al., 2009, p. 222), as opposed to unsupervised\nlearning where the system is designed to detect patterns in the input without any\nfeedback. This normally means that the corpus has been marked up by human\nannotators. Standard practice is to divide a corpus into training and test sets; the\ntest set is considered a gold standard for comparing the accuracy of trained learning\nsystems with that of the annotators. Of course humans are fallible, and it is good\npractice to use multiple annotators for at least a sample of the corpus and report the\nlevel of inter-annotator agreement that was achieved. This will set an upper bound\nfor the performance that can be expected from the system, as it seems meaningless\nto say that a computer program can achieve 100 per cent accuracy on tasks where\nhuman annotators disagree (see Jurafsky and Martin, 2009, p. 189).\n3.5 Corpora\nThis section provides brief descriptions of various corpora, some of which are\ndistributed in full or in part with the NLTK and others can be accessed online.\n33\n\nCO3354 Introduction to natural language processing\n3.5.1 Brown corpus\nThis was one of the \ufb01rst \u2018large-scale\u2019 machine readable corpora, though it may seem\nrather small by today\u2019s standards, consisting of one million words. It was developed\nat Brown University from the early 1960s and took around two decades to complete.\nIt was intended as a \u2018standard corpus of present-day edited American English\u2019 and is\ncaterorised by genre under headings such as:\nNews Chicago Tribune : Society Reportage\nEditorial Christian Science Monitor : Editorials\nReviews Time Magazine : Reviews\nGovernment US Of\ufb01ce of Civil Defense: The Family Fallout Shelter\nScience Fiction Heinlein: Stranger in a Strange Land\nHumour Thurber: The future, if any, of comedy .\nThe Brown corpus is provided with the NLTK in tagged and untagged versions and\ncan be accessed using the various methods listed by Bird et al. (2009, Table 2.3,\np. 50).\n3.5.2 British National Corpus\nThe BNC is created and managed by the BNC consortium, which includes Oxford\nand Lancaster universities, dictionary publishers OUP, Longmans and Chambers, and\nthe British Library. It was developed between 1991 and 1994 and consists of 100\nmillion words: 90 per cent written and 10 per cent transcriptions of speech. This\nwas one of the \ufb01rst corpora to include spontaneous spoken English. The corpus was\nmarked up using an automated part-of-speech tagger which resulted in a signi\ufb01cant\nsaving of time and expense compared with manual annotation by competent\nspeakers of the language, but means that there is inevitably a degree of error \u2013 as\nyou may discover in the course of the exercise given later in this chapter.\nYou can access this corpus online and perform various kinds of analysis using the\nSimple Query language. Registration is required via the following link but there is\ncurrently no charge:\nhttp://bncweb.lancs.ac.uk/bncwebSignup/user/login.php (last visited 27th\nMay 2013)\n3.5.3 COBUILD Bank of English\nThe COBUILD project involved Collins Dictionaries and the University of\nBirmingham. The Collins corpus is a 2.5-billion word analytical database of English.\nIt contains written material from websites, newspapers, magazines and books\npublished around the world, and spoken material from radio, TV and everyday\nconversations. The Bank of EnglishTMforms part of the Collins Corpus and contains\n650 million words. It was used as a basis for the Collins Advanced Learner\u2019s\nDictionary, grammars and various tutorial materials for learners of English. It is not\nincluded in the NLTK but there is limited online access via\nhttp://www.collinslanguage.com/wordbanks .\n34\n\nCorpora\n3.5.4 Penn Treebank\nThe Penn Treebank with its various offshoots is one of the widely used linguistic\nresources among empirical researchers.\nIt includes a collection of texts in four different formats:\nRaw text (original).\nTagged with POS using a tagset which was developed as part of the project.\n\u2018Parsed\u2019; that is, marked up with constituent structure.\nCombined, including both POS tags and constituent structure.\nThe Penn Treebank project . . .", "mimetype": "text/plain", "start_char_idx": 78610, "end_char_idx": 87829, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "412fa60f-8bac-447e-b1ee-d0fb7494c16c": {"__data__": {"id_": "412fa60f-8bac-447e-b1ee-d0fb7494c16c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a3c5fdd3-166a-4c90-b1a8-c7f4272a0965", "node_type": "1", "metadata": {}, "hash": "998501f923c5cdb2a2cb8340ea1556f92c5240bf878a257b25c2713abdcc0b4e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "894c1340-d0f6-454a-831c-28d42489f639", "node_type": "1", "metadata": {}, "hash": "53988cd050ed1668acdf68fbec4c88739f887cbd7a800b89c6c9caae40856066", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "4673f362-5d18-4d2d-8dae-10a7c46aaa4b", "node_type": "1", "metadata": {}, "hash": "586015c82e8ad169028e1d10631160646c1600d2197d5b423401791da23ebc6b", "class_name": "RelatedNodeInfo"}, {"node_id": "ec3c6d6f-16ea-4410-8ce9-2095469f1087", "node_type": "1", "metadata": {}, "hash": "92c514bb3485b55d66ccb53cc40fda37ee8bca63115fd3d73ed14f485a562b95", "class_name": "RelatedNodeInfo"}, {"node_id": "c853d148-7048-4b17-a508-9043e42101ce", "node_type": "1", "metadata": {}, "hash": "b34d4428acc597246c8b804cc231e2d1f3d01ef268caf55ecb429d6c241d64bf", "class_name": "RelatedNodeInfo"}, {"node_id": "6fa6ed9a-547b-4f00-8761-032f734588ab", "node_type": "1", "metadata": {}, "hash": "e41696f06b75e861834d7334242c73a810758c2e5d233b89c6ebe7e6c2a7aca9", "class_name": "RelatedNodeInfo"}, {"node_id": "eedf7998-053c-4daa-ab05-742ed7045c8a", "node_type": "1", "metadata": {}, "hash": "b2018b5b3793c8eff8c4bbe9258d41541cfcb80b10d4b0c32deca963c823c2cc", "class_name": "RelatedNodeInfo"}]}, "text": "The Penn Treebank project . . . has produced treebanks from the Brown, Switchboard, ATIS and Wall Street\nJournal corpora of English, as well as treebanks in Arabic and Chinese.\nJurafsky and Martin (2009, p. 438)\nThe project began at the University of Pennsylvania in the 1990s and the results\nhave been used as a basis for further annotation efforts involving semantics and\nrhetorical structure. The NLTK includes a selection from the Wall Street Journal\n(WSJ) component of the Treebank, which can be accessed in each of the above\nformats and additionally with a simpli\ufb01ed POS tagset (Bird et al., 2009, Table 5-1,\np. 183). Here is an excerpt showing the four different formats:\nRaw text\nPierre Vinken, 61 years old, will join the board as a\nnonexecutive director Nov. 29.\nTagged\n[ Pierre/NNP Vinken/NNP ]\n,/,\n[ 61/CD years/NNS ]\nold/JJ ,/, will/MD join/VB\n[ the/DT board/NN ]\nas/IN\n[ a/DT nonexecutive/JJ director/NN Nov./NNP 29/CD ]\n./.\nParsed\n( (S (NP-SBJ (NP Pierre Vinken)\n,\n(ADJP (NP 61 years) old)\n35\n\nCO3354 Introduction to natural language processing\n,)\n(VP will\n(VP join\n(NP the board)\n(PP-CLR as\n(NP a nonexecutive director))\n(NP-TMP Nov. 29)))\n.))\nCombined\n( (S\n(NP-SBJ\n(NP (NNP Pierre) (NNP Vinken) )\n(, ,)\n(ADJP\n(NP (CD 61) (NNS years) )\n(JJ old) )\n(, ,) )\n(VP (MD will)\n(VP (VB join)\n(NP (DT the) (NN board) )\n(PP-CLR (IN as)\n(NP (DT a) (JJ nonexecutive) (NN director) ))\n(NP-TMP (NNP Nov.) (CD 29) )))\n(. .) ))\n3.5.5 Gutenberg archive\nThe NLTK includes a small selection of out-of-copyright literary texts from Project\nGutenberg, an archive of free electronic books hosted at http://www.gutenberg.org/\nSome of the texts included are:\nJane Austen: Emma ,Persuasion\nGK Chesterton: Father Brown stories ,The Man Who Was Thursday\nWilliam Blake: Poems\nMilton: Paradise Lost\nShakespeare: Julius Caesar ,Macbeth ,Hamlet\n3.5.6 Other corpora\nSome further corpora included with the NLTK are:\nThe Reuters corpus distributed with the NLTK contains 10,788 news documents\ntotalling 1.3m words, partitioned into \u2018training\u2019 and \u2018test\u2019 sets. This split is for\ntraining and testing machine learning algorithms: we return to this topic in\nChapter 5 of this subject guide.\n36\n\nCorpora\nUS Presidents\u2019 inaugural and State of the Union addresses, organised as separate\n\ufb01les.\nUN Declaration of Human Rights in 300+ languages. Here are a few excerpts:\n\u000fAll human beings are born free and equal in dignity and rights.\n\u000fAbantu bonke bazalwa bekhululekile njalo belingana kumalungelo abo .\n\u000fTodos os seres humanos nascem livres e iguais em dignidade e em direitos .\nOther corpora with online query interfaces include:\n1. The Corpus of Contemporary American English, hosted at Brigham Young\nUniversity, is claimed to be \u2018the only large and balanced corpus of American\nEnglish\u2019. http://corpus.byu.edu/coca/ (last visited 27th May 2013)\n2. The Intellitext project at the University of Leeds \u2018aims to facilitate corpus use for\nacademics working in various areas of the humanities\u2019 and currently provides\naccess to monolingual and parallel corpora in several European and Asian\nlanguages. http://corpus.leeds.ac.uk/it/ (last visited 27th May 2013)\nLearning activity\n1. Pick two or three of the corpora mentioned above and research them online, focusing on questions\nsuch as:\nhow large is the corpus?\nwhat language(s) and genre(s) does it represent?\nwhen was it constructed and what is its intended use?\nwhat is the sampling frame?\nwhat level of interannotator agreement was achieved, if reported?\n2. Logon to the BNC Web (free registration needed) or another online corpus. Study the documentation\nprovided and search for data to answer the following questions:\nWhat syntactic categories can the following words have? total,pancake ,requisition ,acquisition .\nThe guide to Simple Query Syntax provided with the BNC warns that \u2018part-of-speech tags have\nbeen assigned by an automatic software tool and are not always correct\u2019. Have your answers to\nthe previous question shown up any examples of incorrect classi\ufb01cation, in your view?\nWhat prepositions can follow the verb talk? Give an example in each case.\n3.5.7 WordNet\nThe NLTK also includes English WordNet, with 155,287 words and 117,659\nsynonym sets or synsets . A synset consists of a set of synonymous words paired with\na de\ufb01nition and linked to words with more general or more speci\ufb01c meanings. For\nexample, table has various meanings:\ntable.n.01 ['table', 'tabular\\_array'], \"a set of data arranged in\nrows and columns\"\ntable.n.02 ['table'], \"a piece of furniture having a smooth flat top\n37\n\nCO3354 Introduction to natural language processing\nthat is usually supported by one or more vertical legs\"\ntable.n.02 hyponyms: drop-leaf\\_table, coffee\\_table, pool\\_table, altar,\ntable.n.02 hypernyms: furniture\n3.6 Some basic corpus analysis\nThis chapter describes some relatively simple techniques, extracting various kinds of\ndata in suitable formats for human interpretation of the results. Chapters 4 and 5 of\nthe subject guide will look at ways the analysis and interpretation itself can be\nautomated to varying degrees.\nConcordancing involves locating every instance of a word or phrase within a text or\ncorpus and presenting it in context, usually a \ufb01xed number of words before and\nafter each occurrence.\nCollocations are pairs of sequences of words that occur together in a text more\nfrequently than would be expected by chance, and so provide a rough indication\nof the content or style of a document.\nConditional frequency distributions support an elementary form of statistical\nanalysis. A frequency distribution counts observable events and a conditional\nfrequency distribution pairs each event with a condition. Some sample\napplications are:\nComparing the use of particular words in different genres.\nComparing word lengths in different languages.\n3.6.1 Frequency distributions\nThe following worked example displays some rudimentary stylistic analysis by\nranking the POS tags in a corpus according to frequency.\nCalculating tag frequency\n1. Import the Brown corpus.\n2. List the different categories within the corpus.\n3. Count the number of sentences in the science \ufb01ction category.\n4. Extract all the word tokens from the science \ufb01ction category, paired with their\ntags, and store them in the variable bsf. Note that the simpli\ufb01ed tagset is\nselected.\n5. Calculate a frequency distribution of the tags: this gives an ordered list of the\ntags paired with their frequency in the variable sftagfd. (Only the 12 most\nfrequent are shown.)\n>>> from nltk.corpus import brown\n>>> brown.categories()\n['adventure', 'belles_lettres', 'editorial', 'fiction',\n'government', 'hobbies', 'humor', 'learned', 'lore',\n38\n\nSome basic corpus analysis\n'mystery', 'news', 'religion', 'reviews', 'romance', 'science_fiction']\n>>> sf_sents = brown.sents(categories = 'science_fiction')\n>>> len(sf_sents)\n948\n>>> bsf = brown.tagged_words(categories = 'science_fiction',\nsimplify_tags=True)\n>>> sf_tag_fd = nltk.FreqDist(tag for (word,tag) in bsf)\n>>> sf_tag_fd.keys()\n['N', 'V', 'DET', 'PRO', 'P', '.', 'ADJ', ',', 'CNJ', 'ADV', 'VD', 'NP', ]\n>>> sf_tag_fd.tabulate()\nN V DET PRO P . ADJ , CNJ ADV VD NP\n2232 1473 1345 1268 1182 1078 793 791 685 644 531 467\nLearning activity\n1. Repeat the above process for other categories such as romance, news and religion. How do the\nfrequency distributions and sentence counts enable you to compare the literary styles of these\ngenres? Explain any assumptions you make.\n2. Having read through Bird et al. (2009, section 2.1), with particular attention to Table 2-3 on page 50,\nanswer the following questions:\n(a) Summarise the README \ufb01le from the Reuters corpus.\n(b) Create a variable soysents containing all sentences from reports concerning soy products.\n(c) Display the \ufb01rst ten sentences in soysents .", "mimetype": "text/plain", "start_char_idx": 87798, "end_char_idx": 95565, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "894c1340-d0f6-454a-831c-28d42489f639": {"__data__": {"id_": "894c1340-d0f6-454a-831c-28d42489f639", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "412fa60f-8bac-447e-b1ee-d0fb7494c16c", "node_type": "1", "metadata": {}, "hash": "afebe6d95348ffdc802655920fdcc5af4ff143eec34b3e9135247742c2d09f04", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6524832a-950a-4bb3-abd9-acbe57ba2406", "node_type": "1", "metadata": {}, "hash": "679e099a6cf523a8ad791698c5c6ef3eaefabc0ad74f1da8627b7424dcf0cc38", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "60fee7ad-cef8-4586-a350-1acd16bd2450", "node_type": "1", "metadata": {}, "hash": "c20aeafce45fb196a6af0dcde11323023bc97dc46757dd7370f82d8b8a6be74d", "class_name": "RelatedNodeInfo"}, {"node_id": "2931e386-4f81-41fb-91ee-171dee4def7d", "node_type": "1", "metadata": {}, "hash": "9a8c0456d3b3624a69e33a2232b87c7120620c96639eb2d13b68fba1aa3d71e2", "class_name": "RelatedNodeInfo"}, {"node_id": "e415415a-706a-43a6-a9fe-ce2113ff0e6b", "node_type": "1", "metadata": {}, "hash": "7747126a1130e798b89737f576afe01f0f30d56072bbdfe011064081dbcdc04b", "class_name": "RelatedNodeInfo"}, {"node_id": "13d4710c-a3b5-4ad4-9568-3ea329cf181d", "node_type": "1", "metadata": {}, "hash": "002867e7573102046aed83aace87a8e80895fff1d4a2f68ae88418c323d42405", "class_name": "RelatedNodeInfo"}, {"node_id": "4b7cbe1b-3050-473f-846e-610ca9efa68b", "node_type": "1", "metadata": {}, "hash": "8655a2ef1ff63db11e3626208b9dc4d858e3d04aa6ea7eabdf6a0d2b388e37bd", "class_name": "RelatedNodeInfo"}]}, "text": "(c) Display the \ufb01rst ten sentences in soysents .\n(d) Create a variable metalwords containing all words from reports concerning metals.\n(e) What are the most frequently mentioned metals in this collection? Caution: why might this result\nbe less than 100 per cent reliable?\n3.6.2 DIY corpus: some worked examples\nNLTK\u2019s plain text corpus reader can be used to build a \u2018corpus\u2019 from a collection of\ntext \ufb01les. The resulting corpus will be formatted for access as raw text, lists of words\nor lists of sentences and can be re-formatted for other functions such as\nconcordancing and \ufb01nding collocations.\nThe \ufb01rst example involves a one-text \u2018corpus\u2019 of the recent report from the UK\nEquality and Human Rights Commission: How fair is Britain ?\nStep 1 Download the report as a PDF from http://www.equalityhumanrights.com\nStep 2 Manually extract text using Adobe Acrobat or another PDF reader and save\nas a .txt \ufb01le\nStep 3 Point the corpus reader to the directory where you have saved the text \ufb01le.\n>>> import nltk\n>>> from nltk.corpus import PlaintextCorpusReader\n>>> corpus_root = 'C:\\NLP-stuff\\Corpora'\n>>> mycorpus = PlaintextCorpusReader(corpus_root,'.*')\n39\n\nCO3354 Introduction to natural language processing\nWe can now use the raw,words andsents methods to display the content in\ndifferent formats:\n>>> mycorpus.fileids()\n['howfair.txt']\n>>> mycorpus.words('howfair.txt')\n['Equality', 'and', 'Human', 'Rights', 'Commission', ]\n>>> hf_raw = mycorpus.raw('howfair.txt')\n>>> hf_raw[:100]\n'Equality and Human Rights Commission\\r\\nTriennial\nReview 2010\\r\\nExecutive Summary\\r\\nHow fair\\r\\nis Britain'\n>>> mycorpus.sents('howfair.txt')\n[['Equality', 'and', 'Human', 'Rights', 'Commission', 'Triennial',\n'Review', '2010', 'Executive', 'Summary', 'How', 'fair', 'is',\n'Britain', '?'], ...\nConcordancing and collocations\nTheText method formats the content in a way which can be accessed by the\nconcordance andcollocation methods. Note that concordancing will always\nreturn \ufb01xed-length strings which include your target text as a substring, and so may\nbe cut off in the middle of a word.\n>>> fair=nltk.Text(mycorpus.words('howfair.txt'))\n>>> fair.concordance('equal')\nBuilding index...\nDisplaying 3 of 3 matches:\nhas narrowed considerably since the equal Pay Act 1970 came into force in 1975\nsonal circumstances , should have an equal opportunity to have a say in decisio\nthat every individual should have an equal chance to make the most of their tal\n>>> fair.collocations()\nBuilding collocations list\nHuman Rights; Rights Commission; Significant findings; Headline data;\nExecutive Summary; less likely; ethnic minority; life expectancy;\n0845 604; domestic violence; hate crime; labour market; disabled people;\nmental health; Black Caribbean; different groups; religiously motivated;\nsexual assault; minority groups; formal childcare\nConditional frequency distribution\nRecall that a frequency distribution is a set of ordered pairs <event; count>\nwhere count is the number of times event occurs. In our context event is a word-type\nandcount is the number of tokens of that type in a text. A conditional frequency\ndistribution is a collection of frequency distributions, each one for a different\ncondition.\nFor this example we add a second document to the corpus, extracted from a PDF\n\u2018Guide to data protection\u2019.\nStep 1 Create a single variable text word consisting of pairs of each word-token\nwith the \ufb01leid of the document it occurs in.\n40\n\nSummary\nStep 2 Create a conditional frequency distribution, which will tell you the frequency\nof each word in both texts.\nStep 3 Pick a sample of words which are likely to occur in both documents, and\ntabulate their comparative frequency.\n>>> text_word = [(text,word) for text in ['howfair.txt','guide.txt']\nfor word in mycorpus.words(text)]\n>>> text_word[:10]\n[('howfair.txt', 'Equality'), ('howfair.txt', 'and'),\n('howfair.txt', 'Human'),('howfair.txt', 'Rights'),\n('howfair.txt', 'Commission'), ('howfair.txt', 'Triennial'),\n('howfair.txt', 'Review'), ('howfair.txt', '2010'),\n('howfair.txt', 'Executive'),\n('howfair.txt', 'Summary')]\n>>> cfd = nltk.ConditionalFreqDist(text_word)\n>>> cfd\n<ConditionalFreqDist with 2 conditions>\n>>> cfd.conditions()\n['guide.txt', 'howfair.txt']\n>>> cfd['howfair.txt']\n<FreqDist with 16391 outcomes>\n>>> cfd['guide.txt']\n<FreqDist with 47064 outcomes>\nTesting the CFD\n>>> cfd['guide.txt']['fair']\n31\n>>> cfd['howfair.txt']['fair']\n30\n>>> keywords = ['fair','police','crime','office','equal','privacy']\n>>>>cfd.tabulate(conditions=['howfair.txt','guide.txt'],\nsamples=keywords)\nfair police crime office equal privacy\nhowfair.txt 30 15 29 4 2 0\nguide.txt 31 16 17 2 0 26\nLearning activity\nFind some suitable electronic documents and follow the above techniques to construct a \u2018mini-corpus\u2019. The\ndocuments in these examples were sourced from UK government websites: you may \ufb01nd similar\ndocuments on the website of your own country\u2019s government, or of transnational organisations like the\nEuropean Union or the United Nations. Think of some terms which are likely to occur in several of these\ndocuments and compare them using a conditional frequency distribution. If you can \ufb01nd a lengthy report\nwhich is issued along with a shorter summary, it is an interesting exercise to pick some key terms and see if\ntheir comparative frequency is the same or similar in the original document and the summary.\n3.7 Summary\n1. A corpus is a collection of linguistic data which was not originally produced for\nthe purposes of linguistic analysis. Properly speaking it should be constructed so\nas to be balanced and representative. If a corpus includes any kind of\n41\n\nCO3354 Introduction to natural language processing\nannotation, it is good practice to use multiple annotators for at least a sample of\nthe corpus and report the level of inter-annotator agreement that was\nachieved.\n2. Some uses of corpora include:\nLexicography (compiling dictionaries).\nCompiling grammars for education and reference purposes.\nStylistics: developing techniques to identify the author or genre of a\ndocument; investigating the effect on language use of different channels\nsuch as email, chat, face-to-face conversation, telephone calls and\nhand-written letters.\nTraining and evaluation in linguistic research, using machine learning\ntechniques.\n3. This chapter includes brief descriptions of several well-known and widely-used\ncorpora such as the Brown corpus, the BNC and the Penn Treebank.\n4. Students on this course can access a variety of corpora through online interfaces\nor by using corpus tools provided with the NLTK.\n5. Some simple techniques for analysing corpora include concordancing,\ncollocations and (conditional) frequency distributions. None of these techniques\ninvolve automated linguistic analysis: the interpretation of the outputs is down\nto the analyst.\n3.8 Sample examination question\na) Explain what is meant by the following types of corpus, and describe an example\nin each category that you have encountered during this course:\nisolated\ncategorised\noverlapping\ntemporal.\nb) What applications would a tagged andparsed corpus be suitable for? What are\nsome advantages and disadvantages of using an automated tagger to build such a\ncorpus?\nc) Suppose the following lists show the number of sentences and the most commonly\noccurring part-of-speech tags in three different categories of text in a corpus, with\ntheir frequency of occurrence in brackets. What can you say about the styles of these\ndocuments from studying these results? Discuss any assumptions you make.\nCategory A (4623 sentences) N (22236) P (10845) DET (10648) NP (8336) V\n(7346) ADJ (5435) \u2018,\u2019 (5188) \u2018.\u2019 (4472) CNJ (4227) PRO (3408) ADV (2770) VD\n(2531) . . .\nCategory B (948 sentences) N (2232) V (1473) DET (1345) PRO (1268) P (1182)\n\u2018.\u2019 (1078) ADJ (793) \u2018,\u2019 (791) CNJ (685) ADV (644) VD (531) NP (467) . . .\nCategory C (1716 sentences) N (7304) P (4364) DET (4239) V (3863) ADJ (2620)\nCNJ (2324) PRO (2243) \u2018,\u2019 (1913) \u2018.\u2019 (1892) ADV (1485) NP (1224) VN (952)\n. . .\n42\n\nAppendix C\nAnswers to selected activities\nThis section includes model solutions to some of the exercises and activities where\nappropriate. In other cases there is no \u2018correct\u2019 answer and the point of the activity is\nto stimulate you to engage in independent self-directed learning.", "mimetype": "text/plain", "start_char_idx": 95517, "end_char_idx": 103794, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6524832a-950a-4bb3-abd9-acbe57ba2406": {"__data__": {"id_": "6524832a-950a-4bb3-abd9-acbe57ba2406", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "894c1340-d0f6-454a-831c-28d42489f639", "node_type": "1", "metadata": {}, "hash": "53988cd050ed1668acdf68fbec4c88739f887cbd7a800b89c6c9caae40856066", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "0a61637e-320a-4481-bfdd-042145a23dd3", "node_type": "1", "metadata": {}, "hash": "1e2443c1ed5466c2086c9796725b6e0b5c48145cbe91787fc69d271176f420e1", "class_name": "RelatedNodeInfo"}, {"node_id": "e0d641ad-f162-4be8-97fe-7e6e671ec6d9", "node_type": "1", "metadata": {}, "hash": "7fc3b20ccd58d10e00fdb313950d0c30a7afb8c6e12b6127459d4c2074d97971", "class_name": "RelatedNodeInfo"}, {"node_id": "0c5ca7cb-de13-4d4d-add2-c603d231e3e6", "node_type": "1", "metadata": {}, "hash": "481a59a064478bd2dca3c7a64b4b79327d371adc942fe1db80167209f8d3cd37", "class_name": "RelatedNodeInfo"}, {"node_id": "f5bfda18-f49e-4d83-b4de-20046679630a", "node_type": "1", "metadata": {}, "hash": "0d496061e4d07cb93c622b6b1dd850b98f464abad3747c325a2c6f164ad2520f", "class_name": "RelatedNodeInfo"}]}, "text": "Chapter 2: Introducing NLP: patterns and structure in natural\nlanguage\nIdentify parts of speech, page 14\nJack (Proper Noun) and(conjunction) Jill(Proper Noun) went (verb) up\n(preposition) the(determiner) hill(noun) .\nThe(determiner) owl(noun) and(conjunction) the(determiner) pussycat (noun)\nwent (verb) to(preposition) sea(noun) .\nOperation of a \ufb01nite-state machine, page 17\n1. John swam.\n2. (a) John and Mary walked on the hill.\n(b) The cat sat on the mat and slept.\n(c) John or a \ufb01sh walked on a hill and barked.\n(d) . . .\nCoding regular expressions, page 19\n1. a(aa)*(bb)*\n2. (aaa)j(aab)j(abb)j(bbb)j(bba)j(baa)j(aba)j(bab)\n97\n\nCO3354 Introduction to natural language processing\nRegular grammars, page 21\nS!eitherjif S1\nS!thejajone S2\nS2!happy S2\nS2!(boyjgirljdog) eats (\u2018ice cream\u2019 j\u2018hot dogs\u2019jcandy) S3\nS3!orjthen S2\nS3!\u000f\nThis is a slightly idealised rendering of Pinker\u2019s state diagram which appears to have\nno halting state.\nThe problem with this grammar can be clearly seen: the rule S3!orjthen S2 has\nno connection with the rule that introduces either orifand so there is no way to\nensure that the appropriate conjunction is used.\nPast tense forms, page 25\nThe general idea is that rules need to be conditional in order to handle\nnon-standard cases before applying general regularities: so a reasonable rule based\non this data set might be:\nwelcome!welcomed else\n-come!-came\nChapter 3: Getting to grips with natural language data\nOnline corpus queries, page 37\nExamples of incorrect tagging: search on to total/V gives examples like:\n. . . a ticket to total oblivion.\n. . . to describe it to total strangers.\nas well as \u2018correct\u2019 examples like\n. . . thought to total about 1,500 families . . .\n. . . a great opportunity to total and celebrate all the small wins made over the\nyear\n98\n\nAPPENDIX C. ANSWERS TO SELECTED ACTIVITIES\nUsing NLTK tools, page 39\n1. \u2018Stylistic\u2019 analysis\nScience Fiction (948 sentences) N (2232) V (1473) DET (1345) PRO (1268) P\n(1182) \u2018.\u2019 (1078) ADJ (793) \u2018,\u2019 (791) CNJ (685) ADV (644) VD (531) NP (467)\n. . .\nNews (4623 sentences) N (22236) P (10845) DET (10648) NP (8336) V (7346)\nADJ (5435) \u2018,\u2019 (5188) \u2018.\u2019 (4472) CNJ (4227) PRO (3408) ADV (2770) VD (2531)\n. . .\nReligion (1716 sentences) N (7304) P (4364) DET (4239) V (3863) ADJ (2620)\nCNJ (2324) PRO (2243) \u2018,\u2019 (1913) \u2018.\u2019 (1892) ADV (1485) NP (1224) VN (952)\n. . .\nSome counts:\nSF: N 2232, PRO 1268, NP 467 ADJ 793\nNE: N 22236, NP 8336, PRO 3408 ADJ 5435\nRE: N 7304, PRO 2243 NP 1224 ADJ 2620\nSF: S 948, COMMA 791, CNJ 685\nNE: COM 5188 S 4623 CNJ 4227\nRE: CNJ 2324 COM 1913 S 1716\nSome tentative conclusions:\n1. Reference and description: both SF and RE use pronouns more than proper\nnames; News has more proper names. Hard to interpret without further\nanalysis: if an SF work includes a lot of dialogue for example, it might be more\nnatural for characters to refer to each other as I, we, you and so on rather than\nby name. And news stories tend to be about named individuals.\n2. Syntactic complexity: we cannot be very precise with this data but it looks as if\nthe SF genre has the least syntactic complexity and the RE genre the highest,\njudging from the numbers of commas and conjunctions per sentence. Of course\nwe cannot tell whether these tokens are connecting clauses or other types of\nphrases.\nIn an examination or coursework question, you would get credit for discussing these\nand other characteristics in the light of your impressionistic understanding of the\ntypical styles for these genres.\n2. Reuters\nDisplay the README \ufb01le from the Reuters corpus.\nfrom nltk.corpus import reuters\ndesc = reuters.readme()\nprint desc\n99\n\nCO3354 Introduction to natural language processing\nCreate a variable soysents containing all sentences from reports concerning soy\nproducts.\nreuters.categories()\nPick out categories relating to soy:\nsoysents = reuters.sents(categories=['soy-meal', ...])\nDisplay the \ufb01rst ten sentences in soysents .\nprint soysents[:10]\nCreate a variable metalwords containing all words from reports concerning\nmetals.\nmetalwords = reuters.words(categories = ['alum','copper','gold', ...])\n(Note that inspection of texts in the alum category con\ufb01rms that they are about\naluminium.)\nWhat are the most frequently mentioned metals in this collection? Caution: why\nmight this result be less than 100 per cent reliable?\nfrom nltk.book import *\nfreqmetal = FreqDist(metalwords)\nfreqmetalkeys = freqmetal.keys()\nfreqmetal[:100]\nRemember that the contents of a frequency distribution are listed in the order of\ntheir frequency of occurrence. By scanning the output you should see that the\n\ufb01rst three metals listed are gold, copper and steel. However caution is in order\nas Reuters is an overlapping corpus, so we may be double-counting some\noccurrences. These metals may also be mentioned under the category\nstrategic-metal , or some reports may mention more than one kind of metal\nand so come under multiple categories.\nChapter 4: Computational tools for text analysis\nComparing stemmers, page 48\nLancaster rules Remove ist/s/e/ing/en/th/ity/ate/al/a/ed/ment/ation .\nReplace -ieswith -y.\nSome motivations: reduce verbs to stem form, remove plural af\ufb01x and\nreturn stem in irregular cases ( study ), remove ordinal af\ufb01x -th, remove\naf\ufb01xes that form nominalisations or adjectives: - ment ,-al.\nPorter rules Remove s/ing/ity/e/ate/ed/ment/ational .\nReplace -ywith -i.\nMotivations: similar to Lancaster rules but applied more sparingly.\nErrors Lancaster removes -thfrom south as if it were an ordinal and -efrom are\nthough aris not a stem here; not clear why -aremoved from area. Lancaster and\nPorter both treat some proper names as common nouns; for example, by\nremoving the last letter from Lyons andStanhope (both) or by postulating an -i\nstem for names ending in -y(Porter).\n100", "mimetype": "text/plain", "start_char_idx": 103795, "end_char_idx": 109570, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "74b8c932-c6b7-41f5-91e0-c6a20d3ef13a": {"__data__": {"id_": "74b8c932-c6b7-41f5-91e0-c6a20d3ef13a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ba8c4dd2-ced9-43db-a5e8-29d7d8155828", "node_type": "1", "metadata": {}, "hash": "a8a4a6f2804b7e72904527f36a30fbcbb5316da2ac8d57689ec978a8bd8458c3", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "64b393fc-fc47-4ba5-9e54-86cd37dc4bf1", "node_type": "1", "metadata": {}, "hash": "30f39f61101653da00f7723589900bcde6f6b58ec61ab409c972eb3dbb950da7", "class_name": "RelatedNodeInfo"}, {"node_id": "b3124ff6-651e-47cf-9d2c-c654b988282b", "node_type": "1", "metadata": {}, "hash": "d1c4179b81ea6bde08dc86473508957cc8534077cde969d8173fe09fa15a1559", "class_name": "RelatedNodeInfo"}, {"node_id": "52686205-a159-4572-b140-d1cb8540d486", "node_type": "1", "metadata": {}, "hash": "19431263179382aa55228a80eeb94c2eb01b3c25fb1e76b849f30b2e36004c1d", "class_name": "RelatedNodeInfo"}, {"node_id": "94af2a57-93e1-4ce8-9ce0-dbf9b8b32749", "node_type": "1", "metadata": {}, "hash": "74d98f53bc2c01293b65517ff378afdd87a4a30301e4dd86f5c706cfdc4293fd", "class_name": "RelatedNodeInfo"}, {"node_id": "09b63a4d-ccb2-4e21-9a27-da05e3108553", "node_type": "1", "metadata": {}, "hash": "c695af8ca7a10b2290886b88928709dcaebeb3903e5d80f4b94bdb24f22c8803", "class_name": "RelatedNodeInfo"}]}, "text": "Introduction to natural\nlanguage processing\nR. Kibble\nCO3354\n2013\nUndergraduate study in \nComputing and related programmes\nThis is an extract from a subject guide for an undergraduate course offered as part of the \nUniversity of London International Programmes in Computing. Materials for these programmes are developed by academics at Goldsmiths.\nFor more information, see: www.londoninternational.ac.uk\n\nThis guide was prepared for the University of London International Programmes by:\nR. KibbleThis is one of a series of subject guides published by the University. We regret that due to pressure of work the author is \nunable to enter into any correspondence relating to, or arising from, the guide. If you have any comments on this subject guide, favourable or unfavourable, please use the form at the back of this guide.\nUniversity of London International Programmes \nPublications Office 32 Russell Square London WC1B 5DN United Kingdom \nwww.londoninternational.ac.uk\nPublished by: University of London \nCopyright \u00a9 Department of Computing, Goldsmiths 2013\nThe University of London and Goldsmiths assert copyright over all material in this subject guide except where otherwise \nindicated. All rights reserved. No part of this work may be reproduced in any form, or by any means, without permission in writing from the publisher. We make every effort to respect copyright. If you think we have inadvertently used your copyright material, please let us know.\n\nContents\nPreface 1\nAbout this half unit . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 1\nAssessment . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 1\nThe subject guide and other learning resources . . . . . . . . . . . . . . . . 2\nSuggested study time . . . .", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1763, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b9071b6d-a92e-47b0-a73d-a116beafbbe1": {"__data__": {"id_": "b9071b6d-a92e-47b0-a73d-a116beafbbe1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "74b8c932-c6b7-41f5-91e0-c6a20d3ef13a", "node_type": "1", "metadata": {}, "hash": "86d33656952aac8d71d62b37b0a595fba516c3cbbf50c65325d6a4d879aba673", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ba8c4dd2-ced9-43db-a5e8-29d7d8155828", "node_type": "1", "metadata": {}, "hash": "a8a4a6f2804b7e72904527f36a30fbcbb5316da2ac8d57689ec978a8bd8458c3", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "3f775351-a3f2-4c33-b08f-9aaa193b9df2", "node_type": "1", "metadata": {}, "hash": "9aa38495f68059753f3a61d93f4e574c9e790591fa71765f01a0429ff16755c3", "class_name": "RelatedNodeInfo"}, {"node_id": "de12f8c0-636d-4128-b0bc-a8d6d7cb1750", "node_type": "1", "metadata": {}, "hash": "3853dda6d2790e5f344425984c9819c2519ab61533faa8449097e711685c1a39", "class_name": "RelatedNodeInfo"}, {"node_id": "06e2c2e2-40e8-4468-bba1-aa66a97c8aef", "node_type": "1", "metadata": {}, "hash": "374bb96f8a233b9ac712b74fef3f653fc13e48681233c0afa5f9077a3c90170e", "class_name": "RelatedNodeInfo"}, {"node_id": "3c046325-e860-415f-98ab-681be9fa9159", "node_type": "1", "metadata": {}, "hash": "8f01cf6bbcabb08e4d06a2a7454954946833b0c892428d1ee31ae9a66bd52cac", "class_name": "RelatedNodeInfo"}, {"node_id": "769aacc9-d946-4337-8f03-c728a0d8a8d6", "node_type": "1", "metadata": {}, "hash": "d2ae3fff96073c4f74880f33c6514bf3d0cc397a8cc2fb458b951d2bda2acdfc", "class_name": "RelatedNodeInfo"}]}, "text": ". . . 2\nSuggested study time . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2\nAcknowledgement . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 3\n1 Introduction: how to use this subject guide 5\n1.1 Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5\n1.2 Aims of the course . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5\n1.3 Learning outcomes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 6\n1.4 Reading list and other learning resources . . . . . . . . . . . . . . . . . 6\n1.5 Software requirements . . . . . . . . . . . . . . . . . . . . . . . . . . . 8\n1.6 How to use the guide/structure of the course . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 1727, "end_char_idx": 2440, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a0ac8be7-2343-4739-b1bf-b639d7a83627": {"__data__": {"id_": "a0ac8be7-2343-4739-b1bf-b639d7a83627", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b9071b6d-a92e-47b0-a73d-a116beafbbe1", "node_type": "1", "metadata": {}, "hash": "903f9e1ed863e828bf9a168651fb86a45698b74a8dc53b3658f223f27c767226", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ba8c4dd2-ced9-43db-a5e8-29d7d8155828", "node_type": "1", "metadata": {}, "hash": "a8a4a6f2804b7e72904527f36a30fbcbb5316da2ac8d57689ec978a8bd8458c3", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "b3859fe6-8e7b-4d29-a6c7-49c8b81b6d96", "node_type": "1", "metadata": {}, "hash": "deb19662c06b24bbf630a936d84702d96582c3cfbedf0248f4710ba5d5872b68", "class_name": "RelatedNodeInfo"}, {"node_id": "5eeaa7e6-8d18-45fe-a9cd-1a6bc944491a", "node_type": "1", "metadata": {}, "hash": "aff1b9a41d5f4bb8979d628f457e224be93f6f9af5ba34c64d6fd26da2c6d3cf", "class_name": "RelatedNodeInfo"}, {"node_id": "0ba589de-48d4-4c7e-9760-fd1b34ef0f48", "node_type": "1", "metadata": {}, "hash": "2eda22b090662e90fe486712148999ffed82a6ab7dcfe884286681de181c9a5a", "class_name": "RelatedNodeInfo"}, {"node_id": "88906bf3-c206-4b3c-8df5-959bd316db29", "node_type": "1", "metadata": {}, "hash": "2816dace15a56d2abc0b9bf32fbd0377de441c23465ef0b82e8fc242a96fa5d9", "class_name": "RelatedNodeInfo"}, {"node_id": "6629f93d-e1ec-4a70-a6c3-ad0916631bfb", "node_type": "1", "metadata": {}, "hash": "cddf23c1927ad33d9b5e5183d95089586e0e1cc0e2288bfb90a815a67fb3e988", "class_name": "RelatedNodeInfo"}]}, "text": ". . . . . . . . . . 8\n1.6.1 Chapter 2: Introducing NLP: patterns and structures in language 8\n1.6.2 Chapter 3: Getting to grips with natural language data . . . . . 8\n1.6.3 Chapter 4: Computational tools for text analysis . . . . . . . . . 9\n1.6.4 Chapter 5: Statistically-based techniques for text analysis . . . 9\n1.6.5 Chapter 6: Analysing sentences: syntax and parsing . . . . . . 9\n1.6.6 Appendices . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 9\n1.7 What the course does not cover . . . . . . . . . . . . . . . . . . . . . . 9\n2 Introducing NLP: patterns and structure in language 11\nEssential reading . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 11\nRecommended reading . . . . . . . . . . . . . . . . . . . . . . . . . . . 11\nAdditional reading . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 11\n2.1 Learning outcomes . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 2421, "end_char_idx": 3306, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7548a93b-2042-402d-9663-c9cf58f7af05": {"__data__": {"id_": "7548a93b-2042-402d-9663-c9cf58f7af05", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a0ac8be7-2343-4739-b1bf-b639d7a83627", "node_type": "1", "metadata": {}, "hash": "c2cf040724b60d5cbd179ba4455bc631338d5c61832b499d1352f41f119b0737", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ba8c4dd2-ced9-43db-a5e8-29d7d8155828", "node_type": "1", "metadata": {}, "hash": "a8a4a6f2804b7e72904527f36a30fbcbb5316da2ac8d57689ec978a8bd8458c3", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "a8e8b03b-687d-44d0-9ac4-e4626dca0505", "node_type": "1", "metadata": {}, "hash": "7560509e70509f6e4863cc50d5a368c243b1c04b3c1142b9334e0e8e795dc567", "class_name": "RelatedNodeInfo"}, {"node_id": "d6efc806-1f57-40e6-8e6f-f74f92e83b10", "node_type": "1", "metadata": {}, "hash": "9e0bbd261a73fd0688255fccb00a8d973aad74f960365f9d16ef4401417016a7", "class_name": "RelatedNodeInfo"}, {"node_id": "0d0b9e35-5b60-4ae3-923a-046802078e1e", "node_type": "1", "metadata": {}, "hash": "cc17fbeda0b1ece1f94395d562d3fb5b9328a421deaec9f90e3429c4f84aed20", "class_name": "RelatedNodeInfo"}, {"node_id": "bd8537f2-34b0-4ade-b16d-20ed78f12df2", "node_type": "1", "metadata": {}, "hash": "47780ce253788d94bdb154782c308b59db654faf46a460e4c75444a19f34eb86", "class_name": "RelatedNodeInfo"}, {"node_id": "3b8ce35e-b417-4af1-82e5-fed0affc7e06", "node_type": "1", "metadata": {}, "hash": "3c10fbe86b666dbf77d7acabaf7a64bf2bb16de61e4817ff76039484fd99b42a", "class_name": "RelatedNodeInfo"}]}, "text": ". . . . . . . . . . . . . . . . . . . . . . . . . . . 11\n2.2 Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 12\n2.3 Basic concepts . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 12\n2.3.1 Tokenised text and pattern matching . . . . . . . . . . . . . . . 12\nActivity: Recognising names . . . . . . . . . . . . . . . . . . . . . . . . 13\n2.3.2 Parts of speech . . . . . . . . . . . . . . . . . . . . . . . . . . . 13\nActivity: identify parts of speech . . . . . . . . . . . . . . . . . . . . . 14\n2.3.3 Constituent structure . . . . . . . . . . . . . . . . . . . . . . . . 14\nActivity: Writing production rules . . . . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 3287, "end_char_idx": 3980, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8b80bc92-fa6a-4fc1-a38d-15ae1f43f48e": {"__data__": {"id_": "8b80bc92-fa6a-4fc1-a38d-15ae1f43f48e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7548a93b-2042-402d-9663-c9cf58f7af05", "node_type": "1", "metadata": {}, "hash": "a8355e5dbfe2b0ffe2fc7d03db126a8cebd7a0cf0fe0e01bf690243634403529", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ba8c4dd2-ced9-43db-a5e8-29d7d8155828", "node_type": "1", "metadata": {}, "hash": "a8a4a6f2804b7e72904527f36a30fbcbb5316da2ac8d57689ec978a8bd8458c3", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "a116afc0-b278-4c2a-af13-1d87a75f254c", "node_type": "1", "metadata": {}, "hash": "3fd24ba2effda542452c4a1b688d6221ad6b4f3a2cfd71fcce3abe82276d1ec6", "class_name": "RelatedNodeInfo"}]}, "text": ". . . . . . . . . . . . 15\n2.4 A closer look at syntax . . . . . . . . . . . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 3961, "end_char_idx": 4067, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dbfd4b04-0039-4fa3-9ced-4978c625aca3": {"__data__": {"id_": "dbfd4b04-0039-4fa3-9ced-4978c625aca3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0129a81e-c476-4369-b096-1bfc7132d5b6", "node_type": "1", "metadata": {}, "hash": "f071dd5d2e514a9b59212b478d620d742c281caa064e269689d6c1d59d34e665", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "5e7447c6-088e-46d7-aaa4-dcc336d40fa7", "node_type": "1", "metadata": {}, "hash": "aef96238b9c585f941aeca885698ae0fa403538f33ccc6946d54c6b00f3fb7f7", "class_name": "RelatedNodeInfo"}, {"node_id": "4a5c46e1-5405-42ea-99ba-1476d7cd2f41", "node_type": "1", "metadata": {}, "hash": "82f1ebefd9ad5bb9ca207b5cc5ebd1d309629af7b556499a4a33cf73e580ab9c", "class_name": "RelatedNodeInfo"}, {"node_id": "acd0198c-4d91-419b-82a9-7993b67e277d", "node_type": "1", "metadata": {}, "hash": "743d702dfbfbc4d58f1084415d478a4b500921b3cf524dc36cd5c74d2cb1c1d2", "class_name": "RelatedNodeInfo"}, {"node_id": "5733258d-aae4-4beb-b60f-05be5a0c6246", "node_type": "1", "metadata": {}, "hash": "cb1363741254e3e25bb8c31c88799875e1a358f1909909a501ab910665934abf", "class_name": "RelatedNodeInfo"}, {"node_id": "b400211c-cf17-41a2-a26e-b67fbfb6a6f0", "node_type": "1", "metadata": {}, "hash": "4283fe5eab48dc0d3b552ae57261ebba27a9c29fbe6e37f2d195371b73fd55f4", "class_name": "RelatedNodeInfo"}]}, "text": ". . . . . . . . . . . 15\n2.4.1 Operation of a \ufb01nite-state machine . . . . . . . . . . . . . . . . 16\nActivity: Finite-state machines . . . . . . . . . . . . . . . . . . . . . . . 17\n2.4.2 Representing \ufb01nite-state machines . . . . . . . . . . . . . . . . 17\n2.4.3 Declarative alternatives to \ufb01nite-state machines . . . . . . . . . 18\nActivity: Coding regular expressions . . . . . . . . . . . . . . . . . . . 19\nActivity: tree diagrams for a regular language . . . . . . . . . . . . . . 21\n2.4.4 Limitations of \ufb01nite-state methods \u2013 introducing context-free\ngrammars . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 21\nActivity: Regular grammars . . . . . . . . . . . . . . . . . . . . . . . . 21\nActivity: Context-free grammar . . . . . . . . . . . . . . . . . . . . . . 23\n2.4.5 Looking ahead: some further uses of regular expressions . . . .", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 854, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "157392c9-14b3-4239-abe6-c0e6b2afa370": {"__data__": {"id_": "157392c9-14b3-4239-abe6-c0e6b2afa370", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dbfd4b04-0039-4fa3-9ced-4978c625aca3", "node_type": "1", "metadata": {}, "hash": "1de4ba250958cf47bd682c400428e98acaa8197f57ce7a3adf0999da8c8a901b", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0129a81e-c476-4369-b096-1bfc7132d5b6", "node_type": "1", "metadata": {}, "hash": "f071dd5d2e514a9b59212b478d620d742c281caa064e269689d6c1d59d34e665", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "558f27a6-a184-4775-a361-1e91054eb1f6", "node_type": "1", "metadata": {}, "hash": "c52b2deb9f27577cc5869e7e920ebc0717d048112532379eef566cc281899857", "class_name": "RelatedNodeInfo"}, {"node_id": "b89bec4d-3970-4d98-903a-46c76677a95f", "node_type": "1", "metadata": {}, "hash": "2d1b5bc69dc029a96a33d63c859068f132441e31256376f2c8db27d2874ae441", "class_name": "RelatedNodeInfo"}, {"node_id": "53596b48-6085-445e-b3fe-caa0bc0719cb", "node_type": "1", "metadata": {}, "hash": "11938024335bdbec5476b9c59d36faeb1dd61bb946c5b4e3e4322e5d3eeb3540", "class_name": "RelatedNodeInfo"}, {"node_id": "24a10c4a-6e63-47e1-9d47-83ffb276d0a6", "node_type": "1", "metadata": {}, "hash": "618760627c727c4bbd121290f68bfd558e4f13692aedf5df0ac260dcfda7d9dd", "class_name": "RelatedNodeInfo"}, {"node_id": "e88a8c60-eece-4ec1-afc2-d9fe8cab4678", "node_type": "1", "metadata": {}, "hash": "f6ae79dccb05eb35ae25618b30f1726760823eac1c7ed297f3103a5fa798d046", "class_name": "RelatedNodeInfo"}]}, "text": ". . . 23\ni\n\nCO3354 Introduction to natural language processing\n2.4.6 Looking ahead: grammars and parsing . . . . . . . . . . . . . . 24\n2.5 Word structure . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24\nActivity: Past tense formation . . . . . . . . . . . . . . . . . . . . . . . 25\n2.6 A brief history of natural language processing . . . . . . . . . . . . . . 25\n2.7 Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 27\n2.8 Sample examination questions . . . . . . . . . . . . . . . . . . . . . . 27\n3 Getting to grips with natural language data 29\nEssential reading . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 29\nRecommended reading . . . . . . . . . . . . . . . . . . . . . . . . . . . 29\nAdditional reading . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 849, "end_char_idx": 1645, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3e466a67-6571-4e0e-ada3-07c55a9a2a69": {"__data__": {"id_": "3e466a67-6571-4e0e-ada3-07c55a9a2a69", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "157392c9-14b3-4239-abe6-c0e6b2afa370", "node_type": "1", "metadata": {}, "hash": "43e2df41ce641c558868cefa34dedf2d7e16fecb13a8229ef91a3a785ad167b2", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0129a81e-c476-4369-b096-1bfc7132d5b6", "node_type": "1", "metadata": {}, "hash": "f071dd5d2e514a9b59212b478d620d742c281caa064e269689d6c1d59d34e665", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "655775a1-af8c-4b7d-b33c-646e1d73f94c", "node_type": "1", "metadata": {}, "hash": "720865afa90008f4d8c7f3a15d620d06b7f7f780b6d9d4911074d2bb74c2229e", "class_name": "RelatedNodeInfo"}, {"node_id": "a4f016a8-fadb-4331-ab74-78b85907137e", "node_type": "1", "metadata": {}, "hash": "ea4f01eb6759a3d8b09bd8425ba86fdc854a82737f6cd4bab8910d836fc77be3", "class_name": "RelatedNodeInfo"}, {"node_id": "c4671bd9-a69c-4fd6-b414-fa647a70ddb7", "node_type": "1", "metadata": {}, "hash": "fa528b1142d33fc785634172e6d9897d1962e79d625f72a091340d5442a89b33", "class_name": "RelatedNodeInfo"}, {"node_id": "9e12f918-327a-46c1-8e4a-464e4e7330a9", "node_type": "1", "metadata": {}, "hash": "3575144995092b51c041599f0a65738cac5c8bf79c6cf5ebf0913b4091379307", "class_name": "RelatedNodeInfo"}, {"node_id": "da2cec8f-4938-4c5d-b437-9193ce3ae2b4", "node_type": "1", "metadata": {}, "hash": "83a84b253a610e86d80b0775e8aeb997adbd1e5a33249fedd89d3e7cba4c968d", "class_name": "RelatedNodeInfo"}]}, "text": ". . . . . . . . . . . . . . . . . . . . . . . . . . 29\n3.1 Learning outcomes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 29\n3.2 Using the Natural Language Toolkit . . . . . . . . . . . . . . . . . . . . 29\n3.3 Corpora and other data resources . . . . . . . . . . . . . . . . . . . . . 30\n3.4 Some uses of corpora . . . . . . . . . . . . . . . . . . . . . . . . . . . . 31\n3.4.1 Lexicography . . . . . . . . . . . . . . . . . . . . . . . . . . . . 32\n3.4.2 Grammar and syntax . . . . . . . . . . . . . . . . . . . . . . . . 32\n3.4.3 Stylistics: variation across authors, periods, genres and chan-\nnels of communication . . . . . . . . . . . . . . . . . . . . . . . 32\n3.4.4 Training and evaluation . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 1626, "end_char_idx": 2358, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "23c3f2b8-b98f-4f91-bfad-eb7a245bad97": {"__data__": {"id_": "23c3f2b8-b98f-4f91-bfad-eb7a245bad97", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3e466a67-6571-4e0e-ada3-07c55a9a2a69", "node_type": "1", "metadata": {}, "hash": "83abb2b4b0840d63176b5e9889865fe375230d0635690ba4aa5c23557d3dd6d9", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0129a81e-c476-4369-b096-1bfc7132d5b6", "node_type": "1", "metadata": {}, "hash": "f071dd5d2e514a9b59212b478d620d742c281caa064e269689d6c1d59d34e665", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "fd129550-b226-4f27-891e-6449af3b0425", "node_type": "1", "metadata": {}, "hash": "15325cc6aca3cbfb4906b3bf3ac142d9b134c7c76df401c69669232fe75351c5", "class_name": "RelatedNodeInfo"}, {"node_id": "389170f8-d253-45aa-b010-d041dd158029", "node_type": "1", "metadata": {}, "hash": "8cba46c40e99e31171b00a8280823f5f7fba252f70fa0ec6c111d2228ed5641f", "class_name": "RelatedNodeInfo"}, {"node_id": "82f15931-ce85-4895-a5f4-044f1fa04213", "node_type": "1", "metadata": {}, "hash": "57c17e1d4e0d088fbc14fe7d89dd6d988e38da98d0bfa7b450a3d5d788026eb0", "class_name": "RelatedNodeInfo"}, {"node_id": "7890cc53-e5a0-4234-83b3-d2aa4f9bf941", "node_type": "1", "metadata": {}, "hash": "00bcc454d561deb3722f3e123361758fc2befce54cb7ea21d5116e7760ea8efc", "class_name": "RelatedNodeInfo"}, {"node_id": "ba8f7981-bb0a-41d0-b47a-bdce70b2cf65", "node_type": "1", "metadata": {}, "hash": "788a6c94fec0f067fc9810fc1562c19b04f052bbefab7c006ba12f0805cd9fce", "class_name": "RelatedNodeInfo"}]}, "text": ". . . . . . . . . . . . . . . . . . . . . 33\n3.5 Corpora . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 33\n3.5.1 Brown corpus . . . . . . . . . . . . . . . . . . . . . . . . . . . . 34\n3.5.2 British National Corpus . . . . . . . . . . . . . . . . . . . . . . 34\n3.5.3 COBUILD Bank of English . . . . . . . . . . . . . . . . . . . . . 34\n3.5.4 Penn Treebank . . . . . . . . . . . . . . . . . . . . . . . . . . . 35\n3.5.5 Gutenberg archive . . . . . . . . . . . . . . . . . . . . . . . . . 36\n3.5.6 Other corpora . . . . . . . . . . . . . . . . . . . . . . . . . . . . 36\nActivity: Online corpus queries . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 2339, "end_char_idx": 2987, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c1517d4c-3d41-4412-a7a4-1e3b2a3bb783": {"__data__": {"id_": "c1517d4c-3d41-4412-a7a4-1e3b2a3bb783", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "23c3f2b8-b98f-4f91-bfad-eb7a245bad97", "node_type": "1", "metadata": {}, "hash": "be91b01445676fe4530c31a88d22b884b3dc2407420b4df52e5d6f46f1e9dcdb", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0129a81e-c476-4369-b096-1bfc7132d5b6", "node_type": "1", "metadata": {}, "hash": "f071dd5d2e514a9b59212b478d620d742c281caa064e269689d6c1d59d34e665", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "11426f68-fbdb-4bf1-af98-0a437bb2c145", "node_type": "1", "metadata": {}, "hash": "b486f45ccda84ef13bdecb8da06326afc939cb5b2574948603389e6f83d9657a", "class_name": "RelatedNodeInfo"}]}, "text": ". . . . . . . . . . . . . . . . . . . . 37\n3.5.7 WordNet . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 2968, "end_char_idx": 3056, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "09e1c915-353b-4835-a613-f85f9720452a": {"__data__": {"id_": "09e1c915-353b-4835-a613-f85f9720452a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ec93a1fd-8a9f-492d-90ec-ec72cc2166f6", "node_type": "1", "metadata": {}, "hash": "2fc023692fd1007fa3108db61c2533e7d248ea367bd52cc4389821e96b6ce22b", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "13d13ce1-35ef-42e9-85dc-4bb3bc5e8397", "node_type": "1", "metadata": {}, "hash": "c25294a9fefa7a3517532a0518f371b188322598267e8994d547588649caddbc", "class_name": "RelatedNodeInfo"}, {"node_id": "d81617f1-917d-41cd-982e-0f2f959d610a", "node_type": "1", "metadata": {}, "hash": "72710eb60c6d362750034bc59a6a813286a87f81027f1e6d2709411b6eee5dae", "class_name": "RelatedNodeInfo"}, {"node_id": "d51ceb86-2093-425b-971c-1804fd98dcc0", "node_type": "1", "metadata": {}, "hash": "55e4cf319e41af443531d273100e04b8685b5030fd402d54a6397f261e5b79f2", "class_name": "RelatedNodeInfo"}, {"node_id": "138c94d4-0b76-4a7c-8302-5eeba39be8ac", "node_type": "1", "metadata": {}, "hash": "a5dae8c07fd87025d66f3547940f45760285c7f7b33b6b66d64ef50cdc48567d", "class_name": "RelatedNodeInfo"}, {"node_id": "54fe4db7-2f16-4bcc-91fd-5bf471d11628", "node_type": "1", "metadata": {}, "hash": "10756d2962fca17a33e664de9a293804cb3c3b2d1475e821291d60894376aa72", "class_name": "RelatedNodeInfo"}]}, "text": ". . . . . . . . . . . . . . . . . . . . . . . . . 37\n3.6 Some basic corpus analysis . . . . . . . . . . . . . . . . . . . . . . . . 38\n3.6.1 Frequency distributions . . . . . . . . . . . . . . . . . . . . . . 38\nActivity: Using NLTK tools . . . . . . . . . . . . . . . . . . . . . . . . . 39\n3.6.2 DIY corpus: some worked examples . . . . . . . . . . . . . . . 39\nActivity: building and analysing a DIY corpus . . . . . . . . . . . . . . 41\n3.7 Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 41\n3.8 Sample examination question . . . . . . . . . . . . . . . . . . . . . . . 42\n4 Computational tools for text analysis 43\nEssential reading . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 43\nRecommended reading . . .", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 754, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c2721a5a-8852-4e29-8d5f-62a65709c385": {"__data__": {"id_": "c2721a5a-8852-4e29-8d5f-62a65709c385", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "09e1c915-353b-4835-a613-f85f9720452a", "node_type": "1", "metadata": {}, "hash": "9b78ade23b18d3c95670b2b93f75d9cb6b7ace0d0c46a071b262f7ae4259cc75", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ec93a1fd-8a9f-492d-90ec-ec72cc2166f6", "node_type": "1", "metadata": {}, "hash": "2fc023692fd1007fa3108db61c2533e7d248ea367bd52cc4389821e96b6ce22b", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "9d6dd1e2-de16-4122-8f1f-37b2fbd19650", "node_type": "1", "metadata": {}, "hash": "7a4e65918aba85f1ea0b759f51336c820533ee99bd981baac4ef5f2c9007c973", "class_name": "RelatedNodeInfo"}, {"node_id": "732ede0b-c7f4-4353-9810-002a775e1d8a", "node_type": "1", "metadata": {}, "hash": "d5794df01712b51d3aa3e446eab2d1f0ac868090591b1b936ec3210032f07b78", "class_name": "RelatedNodeInfo"}, {"node_id": "83b6ef6e-252c-45e8-b87f-25b0d46cc231", "node_type": "1", "metadata": {}, "hash": "3a67a2f631c936de0cb68bb26ebe88d0a5b7d15eae58cac9599df2d5e2868517", "class_name": "RelatedNodeInfo"}, {"node_id": "a47d0acf-1417-4ad6-9226-f207ea3c8501", "node_type": "1", "metadata": {}, "hash": "d4384b9fca6c0d0467aa8bce98f5682b00057f2f134d60badc34b46f0201ce33", "class_name": "RelatedNodeInfo"}, {"node_id": "f89d57b2-0802-451e-9df5-747343b44248", "node_type": "1", "metadata": {}, "hash": "916aed2fe6881422b467e99664dc8a1dd5dff84829b5c1534a966744d32bda59", "class_name": "RelatedNodeInfo"}]}, "text": ". . . . . 43\nRecommended reading . . . . . . . . . . . . . . . . . . . . . . . . . . . 43\nAdditional reading . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 43\n4.1 Introduction and learning outcomes . . . . . . . . . . . . . . . . . . . 43\n4.1.1 Learning outcomes . . . . . . . . . . . . . . . . . . . . . . . . . 43\n4.2 Data structures . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 44\nActivity: strings and sequences . . . . . . . . . . . . . . . . . . . . . . 44\n4.3 Tokenisation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 44\n4.3.1 Some issues with tokenisation . . . . . . . . . . . . . . . . . . . 45\n4.3.2 Tokenisation in the NLTK . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 716, "end_char_idx": 1420, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e12349db-35f7-465b-9a2f-fefa4446054a": {"__data__": {"id_": "e12349db-35f7-465b-9a2f-fefa4446054a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c2721a5a-8852-4e29-8d5f-62a65709c385", "node_type": "1", "metadata": {}, "hash": "47c0ac8d929e29b2eee369f07ddca67ad42626ea2b0480d02bd39b809ddc40f9", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ec93a1fd-8a9f-492d-90ec-ec72cc2166f6", "node_type": "1", "metadata": {}, "hash": "2fc023692fd1007fa3108db61c2533e7d248ea367bd52cc4389821e96b6ce22b", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "1c72995a-37d2-4b41-acdd-3c0ea046ea0d", "node_type": "1", "metadata": {}, "hash": "d64fd92ea44ea4e4f52fefc4e8ecaa5502d031e57cc5478f100624a0195d5ec2", "class_name": "RelatedNodeInfo"}, {"node_id": "e4f6928d-29ad-4a0e-b339-19a733962726", "node_type": "1", "metadata": {}, "hash": "2f67f63b62589ad9d5ae718425b6ea64aee862893ce24767d4160882c9bafe98", "class_name": "RelatedNodeInfo"}, {"node_id": "1252d39d-c4d6-41f6-86da-3d019ddb1b5b", "node_type": "1", "metadata": {}, "hash": "9a773fefaabf6669b74a2705efea65ae236e74bf1889a70d84ff8a30da0a1513", "class_name": "RelatedNodeInfo"}, {"node_id": "53f4bdb1-f6df-4dbd-af07-0ba70e7bc384", "node_type": "1", "metadata": {}, "hash": "fe51358c3cfa066c74fecdbd89efbda97757c73a150f34391b26f6d99f4fd108", "class_name": "RelatedNodeInfo"}, {"node_id": "12c2b752-7d4e-4398-bde3-27ecc1b42a57", "node_type": "1", "metadata": {}, "hash": "4b45561d50754ea39417da7c6b459048b71f1cbe29d1270e5d6639648d0276c9", "class_name": "RelatedNodeInfo"}]}, "text": ". . . . . . . . . . . . . . . . . . . . 46\nActivity: Tokenising text . . . . . . . . . . . . . . . . . . . . . . . . . . 46\n4.4 Stemming . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 46\nActivity: Comparing stemmers . . . . . . . . . . . . . . . . . . . . . . . 48\n4.5 Tagging . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 48\n4.5.1 RE tagging . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 49\nActivity: Tagging with REs . . . . . . . . . . . . . . . . . . . . . . . . . 51\n4.5.2 Trained taggers and backoff . . . . . . . . . . . . . . . . . . . . 51\nii\n\n4.5.3 Transformation-based tagging . . . . . . .", "mimetype": "text/plain", "start_char_idx": 1403, "end_char_idx": 2061, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2f0134f0-97f4-4add-bf9d-8f93c7a723f5": {"__data__": {"id_": "2f0134f0-97f4-4add-bf9d-8f93c7a723f5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e12349db-35f7-465b-9a2f-fefa4446054a", "node_type": "1", "metadata": {}, "hash": "93f7510aac7ae0c64e02d42b7ca81ef0e0d2c0089ccf12bcaf1376ba16799549", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ec93a1fd-8a9f-492d-90ec-ec72cc2166f6", "node_type": "1", "metadata": {}, "hash": "2fc023692fd1007fa3108db61c2533e7d248ea367bd52cc4389821e96b6ce22b", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "ff7c5fec-c554-4c9e-b6e4-20cb497138cf", "node_type": "1", "metadata": {}, "hash": "61b02d30ec5b8b03470d91f3cf317e01344d34387c93af59b632390a51e66ad4", "class_name": "RelatedNodeInfo"}, {"node_id": "3e030e8e-e8ab-4402-8a6d-593ae4e361ed", "node_type": "1", "metadata": {}, "hash": "286009f414a76ddc4fb60fc135c3d611944116abc951f31849cc55d9f0d83279", "class_name": "RelatedNodeInfo"}, {"node_id": "2984b406-27ce-4e64-b48c-bcfb6f8e51af", "node_type": "1", "metadata": {}, "hash": "309e46a12dd03387005880475c73c73ae65a0aaf3204c9164f499e356138805c", "class_name": "RelatedNodeInfo"}, {"node_id": "9c9aaa41-6e2a-42e3-a15e-478694e5ae94", "node_type": "1", "metadata": {}, "hash": "1675ecf8ffee539fb298ca436bc8443e3e87104ebffbb943257f89668b81c66e", "class_name": "RelatedNodeInfo"}, {"node_id": "560218bd-4a6f-469a-b570-969eaee48eb4", "node_type": "1", "metadata": {}, "hash": "7786f48ccd5dbfc1be61c29e400419fb734e0bea24339cf4a6e4b1c415826098", "class_name": "RelatedNodeInfo"}]}, "text": ". . . . . . . . . . . . . . . . . . 53\n4.5.4 Evaluation and performance . . . . . . . . . . . . . . . . . . . . 53\nActivity: Trained taggers . . . . . . . . . . . . . . . . . . . . . . . . . . 53\n4.6 Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 53\n4.7 Sample examination question . . . . . . . . . . . . . . . . . . . . . . . 54\n5 Statistically-based techniques for text analysis 57\nEssential reading . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 57\nRecommended reading . . . . . . . . . . . . . . . . . . . . . . . . . . . 57\nAdditional reading . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 57\n5.1 Learning outcomes . . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 2050, "end_char_idx": 2757, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d43edd0d-285e-4d1d-9f48-510ba80a26b2": {"__data__": {"id_": "d43edd0d-285e-4d1d-9f48-510ba80a26b2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2f0134f0-97f4-4add-bf9d-8f93c7a723f5", "node_type": "1", "metadata": {}, "hash": "79eee0d2074bf953923828d9e1ddc2cda16a0acfd771d0e3f2f2c3700a76996f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ec93a1fd-8a9f-492d-90ec-ec72cc2166f6", "node_type": "1", "metadata": {}, "hash": "2fc023692fd1007fa3108db61c2533e7d248ea367bd52cc4389821e96b6ce22b", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "5871c2f5-3dda-4d51-a698-bc10d3b29e7f", "node_type": "1", "metadata": {}, "hash": "faad69882e5b9030eb7806200c07ff676d53716f30c6a3a56ea37c9292f9d577", "class_name": "RelatedNodeInfo"}]}, "text": ". . . . . . . . . . . . . . . . . . . . . . 57\n5.2 Introduction . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 2738, "end_char_idx": 2823, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d05612d5-1fc2-4b4e-8b23-b654fac5eb54": {"__data__": {"id_": "d05612d5-1fc2-4b4e-8b23-b654fac5eb54", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5b37f427-5b47-40d0-bf79-a020b02747ac", "node_type": "1", "metadata": {}, "hash": "8cbc1cf337b1b009f219f6637bb022eed06259725866a7289740d08b1ac02e35", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "de6b7fe5-6c58-4dd7-84e9-cbfbda6c9fc3", "node_type": "1", "metadata": {}, "hash": "c7108554f7d7ab1638a55d7b90df0499cece48f3c90663f5a29455c202003639", "class_name": "RelatedNodeInfo"}, {"node_id": "9f9ccbdd-b443-4a1e-a064-d00ed892e2c2", "node_type": "1", "metadata": {}, "hash": "7dc3826f5eaf1630d614f83b8881d239b1b3d652e6afe330b11705ed09c7d0de", "class_name": "RelatedNodeInfo"}, {"node_id": "e4fa705e-1106-45fc-9489-340890dcfaba", "node_type": "1", "metadata": {}, "hash": "170b2ed43090e9a6fb7d66c71719d4bbfe3e5b5f5bc4cb32598f951e61609a7a", "class_name": "RelatedNodeInfo"}, {"node_id": "0463259c-3c6d-4f6a-8b88-f293e8d9c284", "node_type": "1", "metadata": {}, "hash": "bd3850efb750f92f5ecdfdf31bed0b7569e26f662c125fa27333e9ba5d847b95", "class_name": "RelatedNodeInfo"}, {"node_id": "2dadce34-d2c0-4f3b-8820-3abe9728c4ff", "node_type": "1", "metadata": {}, "hash": "8ec50f2c46fce117ca28bfd4708de36a603dd0904bbe166311e9a497b2f06a67", "class_name": "RelatedNodeInfo"}]}, "text": ". . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 58\n5.3 Some fundamentals of machine learning . . . . . . . . . . . . . . . . . 58\n5.3.1 Naive Bayes classi\ufb01ers . . . . . . . . . . . . . . . . . . . . . . . 58\nActivity: Bayes\u2019 rule . . . . . . . . . . . . . . . . . . . . . . . . . . . . 59\n5.3.2 Hidden Markov models . . . . . . . . . . . . . . . . . . . . . . 60\n5.3.3 Information and entropy . . . . . . . . . . . . . . . . . . . . . . 61\n5.3.4 Decision trees and maximum entropy classi\ufb01ers . . . . . . . . . 62\nActivity: further reading . . . . . . . . . . . . . . . . . . . . . . . . . . 63\n5.3.5 Evaluation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 686, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "12c6529e-5bfc-4cdb-ba1d-b346b537ddbd": {"__data__": {"id_": "12c6529e-5bfc-4cdb-ba1d-b346b537ddbd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d05612d5-1fc2-4b4e-8b23-b654fac5eb54", "node_type": "1", "metadata": {}, "hash": "9d2f1c6e95fa9ed74a3ef6798aa9e8524de38ae4f859f2879eeb50b43ce3b5ad", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5b37f427-5b47-40d0-bf79-a020b02747ac", "node_type": "1", "metadata": {}, "hash": "8cbc1cf337b1b009f219f6637bb022eed06259725866a7289740d08b1ac02e35", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "918d4750-1e38-418c-b4eb-7d0354d5a8ee", "node_type": "1", "metadata": {}, "hash": "4676593295156fe832a24f43d907df75a2f02bf00414c9c8413fa6a932706a9f", "class_name": "RelatedNodeInfo"}, {"node_id": "abf9f6b0-2e3e-49a7-bf7d-50dd1ccb1516", "node_type": "1", "metadata": {}, "hash": "96b34ddebc862fa8933f12ac92a1825d2a94a534ca7a6f47dc7297366247dc5e", "class_name": "RelatedNodeInfo"}, {"node_id": "0d8e16d3-3d05-4e62-87b0-fe9f42b6d973", "node_type": "1", "metadata": {}, "hash": "3786777868424c30d503ac8a2c3fee6906614215d492db9d09e4635aac45d1b4", "class_name": "RelatedNodeInfo"}, {"node_id": "6060b617-9ae3-4a0c-a3d5-390ea3cc3217", "node_type": "1", "metadata": {}, "hash": "252c065819552034494b6e304eb1853f82933e1b062f7216774249bdd2108b4e", "class_name": "RelatedNodeInfo"}, {"node_id": "120d0e91-35df-4138-a074-ec81c23092f1", "node_type": "1", "metadata": {}, "hash": "0968cbdc873f325f6e2089360473f91d1cef4b0b888957cd2e2aa96ca38ae213", "class_name": "RelatedNodeInfo"}]}, "text": ". . . . . . . . . . 63\n5.4 Machine learning in action: document classi\ufb01cation . . . . . . . . . . . 64\n5.4.1 Summary: document classi\ufb01cation . . . . . . . . . . . . . . . . 65\nActivity: document classi\ufb01cation . . . . . . . . . . . . . . . . . . . . . 66\n5.5 Machine learning in action: information extraction . . . . . . . . . . . 66\n5.5.1 Types of information extraction . . . . . . . . . . . . . . . . . . 67\n5.5.2 Regular expressions for personal names . . . . . . . . . . . . . 67\nActivity: coding regular expressions for proper names . . . . . . . . . . 69\n5.5.3 Information extraction as sequential classi\ufb01cation: chunking\nand NE recognition . . . . . . . . . . . . . . . . . . . . . . . . . 69\nActivity: chunking and NE recognition . . . . . . . . . . . . . . . . . . 71\n5.6 Limitations of statistical methods . . . . . . . . . . . . . . . . . . . . . 71\n5.7 Summary . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 667, "end_char_idx": 1570, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5f9803e1-c78b-4516-9676-7c3d59f5e3c6": {"__data__": {"id_": "5f9803e1-c78b-4516-9676-7c3d59f5e3c6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "12c6529e-5bfc-4cdb-ba1d-b346b537ddbd", "node_type": "1", "metadata": {}, "hash": "3cfe6a7eb28525e16afbbdb10d741e180e23b8795391c455f57008df81a7106e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5b37f427-5b47-40d0-bf79-a020b02747ac", "node_type": "1", "metadata": {}, "hash": "8cbc1cf337b1b009f219f6637bb022eed06259725866a7289740d08b1ac02e35", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "2fe89b2f-7919-4170-87f1-8299c2cb2d56", "node_type": "1", "metadata": {}, "hash": "fd873d06f75a17892865f9967a56e5fd43599c7b702619bfdb67944d07af412b", "class_name": "RelatedNodeInfo"}, {"node_id": "9978d525-dba9-4008-b071-6c35d78df33f", "node_type": "1", "metadata": {}, "hash": "fc49f1252e60dbafd8e497e3d608dac51f6e2301e83f064eea2c9d306e3685c3", "class_name": "RelatedNodeInfo"}, {"node_id": "fbd9b7db-b1a9-43a8-a451-08fb6d643d60", "node_type": "1", "metadata": {}, "hash": "7c7de17e4831ce61d72f7e015b1f8b377877733ca829c091f830b4eaadd12a9b", "class_name": "RelatedNodeInfo"}, {"node_id": "e1ed24ba-4878-4707-995a-2a2db33e9f4b", "node_type": "1", "metadata": {}, "hash": "0c98e2c70d1bc491d02fde82351683082d14667d06e2f5707ea7b099b2651481", "class_name": "RelatedNodeInfo"}, {"node_id": "e7f5d47e-6f68-4fd3-9821-11d09d605a97", "node_type": "1", "metadata": {}, "hash": "5607833bcf2b3cab30a347edb615f4db895f9aba629a57d1cefedda1e12194e1", "class_name": "RelatedNodeInfo"}]}, "text": ". . . . . . . . . . . . . . . . . . . . . . . . . . . . . 72\n5.8 Sample examination question . . . . . . . . . . . . . . . . . . . . . . . 72\n6 Analysing sentences: syntax and parsing 75\nEssential reading . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 75\nRecommended reading . . . . . . . . . . . . . . . . . . . . . . . . . . . 75\nAdditional reading . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 75\n6.1 Learning outcomes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 75\n6.2 Grammars and parsing . . . . . . . . . . . . . . . . . . . . . . . . . . . 75\n6.3 Complicating CFGs . . . . . . . . . . . . . . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 1551, "end_char_idx": 2220, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d5e7803c-fe7e-4397-9d57-b4d233d2940e": {"__data__": {"id_": "d5e7803c-fe7e-4397-9d57-b4d233d2940e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5f9803e1-c78b-4516-9676-7c3d59f5e3c6", "node_type": "1", "metadata": {}, "hash": "f9edb7a28da6d820827977a86976aeec8ae917a1f663345ca26d7f8ab9416d80", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5b37f427-5b47-40d0-bf79-a020b02747ac", "node_type": "1", "metadata": {}, "hash": "8cbc1cf337b1b009f219f6637bb022eed06259725866a7289740d08b1ac02e35", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "2b37df9e-ebb8-46f7-a4fe-7d8202fe6bf4", "node_type": "1", "metadata": {}, "hash": "6e9bce2d44eeb92049c0443c933a2327d6130a9779aaadb6bc4364c44acf788c", "class_name": "RelatedNodeInfo"}, {"node_id": "6855f5bc-64b0-4b6b-ab34-e53788bf8f35", "node_type": "1", "metadata": {}, "hash": "368e73e5c10727974472024d2b4001219a4896da65d6472a7c3b50d146ad251f", "class_name": "RelatedNodeInfo"}, {"node_id": "8256fc98-9a3b-421b-b3da-95000240ef7c", "node_type": "1", "metadata": {}, "hash": "5fa89b0902b98975ed650734e0cee793a34faa1afbcff3e65ae2f5c66afeb083", "class_name": "RelatedNodeInfo"}, {"node_id": "c87f47d9-d453-4bfe-b661-4fd3e2cbd006", "node_type": "1", "metadata": {}, "hash": "480011eff8eccd039f5198156bf073a384bd53d2e222120411905ea9b15ce818", "class_name": "RelatedNodeInfo"}, {"node_id": "4a56225c-2b25-4147-b844-ef6abd62a017", "node_type": "1", "metadata": {}, "hash": "8ca83ea73f462560b9a43a753afaf4b9fbc52195a64f171c80e844c39abdc72a", "class_name": "RelatedNodeInfo"}]}, "text": ". . . . . . . . . . 76\n6.3.1 Verb categories . . . . . . . . . . . . . . . . . . . . . . . . . . . 76\nActivity: Verb categories . . . . . . . . . . . . . . . . . . . . . . . . . . 78\n6.3.2 Agreement . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 78\nActivity: feature-based grammar . . . . . . . . . . . . . . . . . . . . . 80\n6.3.3 Unbounded dependencies . . . . . . . . . . . . . . . . . . . . . 80\n6.3.4 Ambiguity and probabilistic grammars . . . . . . . . . . . . . . 82\nActivity: probabilistic grammar . . . . . . . . . . . . . . . . . . . . . . 85\n6.4 Parsing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 85\n6.4.1 Recursive descent parsing . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 2201, "end_char_idx": 2905, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a86fa115-9666-4413-803a-f9bdc2b3c705": {"__data__": {"id_": "a86fa115-9666-4413-803a-f9bdc2b3c705", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d5e7803c-fe7e-4397-9d57-b4d233d2940e", "node_type": "1", "metadata": {}, "hash": "8ef01e3092c28c9de37d43b5d2d2c860b5a3e19664aedd42b676c74989f81dd3", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5b37f427-5b47-40d0-bf79-a020b02747ac", "node_type": "1", "metadata": {}, "hash": "8cbc1cf337b1b009f219f6637bb022eed06259725866a7289740d08b1ac02e35", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "faf247df-7443-4d8f-a985-71ebc163312d", "node_type": "1", "metadata": {}, "hash": "15af1985d1c780c7b9bad6385dd4bb41f9c91cd230587884202a69412169ef91", "class_name": "RelatedNodeInfo"}]}, "text": ". . . . . . . . . . . . . . . . . . . . 86\n6.4.2 Shift-reduce parsing . . . . . . . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 2886, "end_char_idx": 2999, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "64248c25-68be-4d86-9036-2bc5ebf5087f": {"__data__": {"id_": "64248c25-68be-4d86-9036-2bc5ebf5087f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "9820bd76-52ad-4d76-a299-ce6aaad2d619", "node_type": "1", "metadata": {}, "hash": "60d4d94ca581554a9ba78c0d25e45f852c5807c0ce78929565b911e97cbe8cef", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "5398bc70-9a11-4af4-903b-f987868ba4fa", "node_type": "1", "metadata": {}, "hash": "e69990783b5918889bab8da9cb4814c041587d4a14eaa1ea85076e54ba2f52cc", "class_name": "RelatedNodeInfo"}, {"node_id": "bd399c66-11dd-4b30-be36-f1e2f6b27af1", "node_type": "1", "metadata": {}, "hash": "4ef19f7c92c26491975f03d1e164e7b872507f480889ae90fdd7d4e70002fe40", "class_name": "RelatedNodeInfo"}, {"node_id": "dfce174b-daee-43c6-a72c-512302fc000a", "node_type": "1", "metadata": {}, "hash": "f249231994b22174d9d324e920bd7971cca833878aad469140e23be8d4c3d54c", "class_name": "RelatedNodeInfo"}, {"node_id": "2ad1e2ea-cf46-4abd-9551-a0f66bbbfae9", "node_type": "1", "metadata": {}, "hash": "5e36eacfd1b1b2df0592b4a965f38dbb5e8c9c2656f578e767c350a23d776bf2", "class_name": "RelatedNodeInfo"}, {"node_id": "c5ce600f-9ea6-473b-a6fd-4d9476db96a2", "node_type": "1", "metadata": {}, "hash": "54c3c4f4c315150b5df9b1e8dd528b7809dfcc5e21a7911a491378312cde4a96", "class_name": "RelatedNodeInfo"}]}, "text": ". . . . . . . . . . . . 87\n6.4.3 Parsing with a well-formed substring table . . . . . . . . . . . . 87\n6.4.4 Finite-state machines and context-free parsing . . . . . . . . . . 89\nActivity: Parsing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 90\n6.5 Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 90\niii\n\nCO3354 Introduction to natural language processing\n6.6 Sample examination question . . . . . . . . . . . . . . . . . . . . . . . 91\nA Bibliography 93\nB Glossary 95\nC Answers to selected activities 97\nChapter 2: Introducing NLP: patterns and structure in natural language . . . 97\nIdentify parts of speech, page 14 . . . . . . . . . . . . . . . . . . . . . 97\nOperation of a \ufb01nite-state machine, page 17 . . . . . . . . . . . . . . . 97\nCoding regular expressions, page 19 . . . . . . . . . . . . . . . . . . . 97\nRegular grammars, page 21 . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 902, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3ef22783-da6f-428d-bb12-7e6c2273dd61": {"__data__": {"id_": "3ef22783-da6f-428d-bb12-7e6c2273dd61", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "64248c25-68be-4d86-9036-2bc5ebf5087f", "node_type": "1", "metadata": {}, "hash": "fa837a258fe5a5ab220e1684ce17d1a346b6d55f51409633f50889e950769f2b", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "9820bd76-52ad-4d76-a299-ce6aaad2d619", "node_type": "1", "metadata": {}, "hash": "60d4d94ca581554a9ba78c0d25e45f852c5807c0ce78929565b911e97cbe8cef", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "c39b45bd-812f-4b22-aa30-6a2745260e8e", "node_type": "1", "metadata": {}, "hash": "c270fd2629d5586ce525f4d1b33b226a17a163b258e29d7315f9a2a4800064c3", "class_name": "RelatedNodeInfo"}, {"node_id": "b9b89874-b531-48fd-b901-b17ba4a6b4a7", "node_type": "1", "metadata": {}, "hash": "d76719e14ca104b582df0ec1c0a392a2ddf071aeac4eeb1c7b5bf0b51b6bbb18", "class_name": "RelatedNodeInfo"}, {"node_id": "0d4e1258-834f-4fbc-864a-69bb958f0250", "node_type": "1", "metadata": {}, "hash": "3c500ed1765ec9c38a642af87623cd3927a7a11580085259760b61dd70c30a48", "class_name": "RelatedNodeInfo"}, {"node_id": "e9e87a31-e521-4f26-add5-1fa5cc83b2b1", "node_type": "1", "metadata": {}, "hash": "bd7e20f74cb4a4f531cda9afee6b27aef4ffe945c0ee03476c5c76af7655d94c", "class_name": "RelatedNodeInfo"}, {"node_id": "71dd5542-5b9c-446e-93bc-c61f1a8f5111", "node_type": "1", "metadata": {}, "hash": "e3f54d8ad9dc942ee2fc47896ea0cfce718ae251ed452a4b2e9a0df2c589dd0d", "class_name": "RelatedNodeInfo"}]}, "text": ". . . . . . . . . . . . . . . . . . . . . . . 98\nPast tense forms, page 25 . . . . . . . . . . . . . . . . . . . . . . . . . 98\nChapter 3: Getting to grips with natural language data . . . . . . . . . . . . 98\nOnline corpus queries, page 37 . . . . . . . . . . . . . . . . . . . . . . 98\nUsing NLTK tools, page 39 . . . . . . . . . . . . . . . . . . . . . . . . . 99\nChapter 4: Computational tools for text analysis . . . . . . . . . . . . . . . . 100\nComparing stemmers, page 48 . . . . . . . . . . . . . . . . . . . . . . . 100\nTagging with REs, page 51 . . . . . . . . . . . . . . . . . . . . . . . . . 101\nChapter 5: Statistically-based techniques for text analysis . . . . . . . . . . . 101\nActivity: Bayes\u2019 Rule, page 59 . . . . . . . . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 889, "end_char_idx": 1661, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5f4ecab5-ad1b-47e9-822c-0f54cdd8ccdd": {"__data__": {"id_": "5f4ecab5-ad1b-47e9-822c-0f54cdd8ccdd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3ef22783-da6f-428d-bb12-7e6c2273dd61", "node_type": "1", "metadata": {}, "hash": "c3fed5b0cc4a4680b72a2e2203a2cb8512d67d80011a3bc7653f7fb2c58b7d49", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "9820bd76-52ad-4d76-a299-ce6aaad2d619", "node_type": "1", "metadata": {}, "hash": "60d4d94ca581554a9ba78c0d25e45f852c5807c0ce78929565b911e97cbe8cef", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "9244f949-3dae-4948-b254-8f330087c636", "node_type": "1", "metadata": {}, "hash": "be13b7bb7dbc6999a3dff46a8629f284c27596648f2fcf4596a43130e4a06e4e", "class_name": "RelatedNodeInfo"}, {"node_id": "2a33f8c6-0e04-45a3-bb0b-86c970d3818d", "node_type": "1", "metadata": {}, "hash": "5c1211785ba3413f3a59246bf87856302895642334d49357e510b440f0adf2d4", "class_name": "RelatedNodeInfo"}, {"node_id": "f40885d9-9854-4777-8807-233cea9865a7", "node_type": "1", "metadata": {}, "hash": "31c25c7f6cb64ef22a009e4eaab8c799ffc6439e7b9dc54c893c29d2edbd7f91", "class_name": "RelatedNodeInfo"}, {"node_id": "cea7d83e-ca48-4300-b6b5-ae05af4f579a", "node_type": "1", "metadata": {}, "hash": "5ff1eccda033dea6b71d64979be105f03e56c8fe5f8138b4fadd59056f48e529", "class_name": "RelatedNodeInfo"}, {"node_id": "0a490115-33d4-46ff-85cc-d13f0cffeb5d", "node_type": "1", "metadata": {}, "hash": "1dadb32f36c3ce21ddaf277351b193999d36e7ecf5a69166f6ad6d8d7c3cc2a8", "class_name": "RelatedNodeInfo"}]}, "text": ". . . . . . . . . . 101\nChapter 6: Analysing sentences: syntax and parsing . . . . . . . . . . . . . . 102\nActivity: Verb categories, page 78 . . . . . . . . . . . . . . . . . . . . . 102\nActivity: Feature-based grammar, page 80 . . . . . . . . . . . . . . . . 102\nD Trace of recursive descent parse 105\nE Sample examination paper with answering guidelines 107\nE.1 Sample examination questions . . . . . . . . . . . . . . . . . . . . . . 108\nE.2 Answering guidelines for sample examination questions . . . . . . . . 113\niv\n\nPreface\nAbout this half unit\nThis half unit course combines a critical introduction to key topics in theoretical and\ncomputational linguistics with hands-on practical experience of using existing\nsoftware tools and developing applications to process texts and access linguistic\nresources. The aims of the course and learning outcomes are listed in Chapter 1.\nThis course has no speci\ufb01c prerequisites. There will be some programming involved\nand you will need to acquire some familiarity with the Python language, but you will\nnot be expected to develop substantial original code or to encode specialised\nalgorithms. The course involves some statistical techniques, but the only\nmathematical knowledge assumed is an understanding of elementary probability\nand familiarity with the concept of logarithms.\nBefore the advent of the world wide web, most machine-readable information was\nstored in structured databases and accessed via specialised query languages such as\nStructured Query Language (SQL). Nowadays the situation is reversed: most\ninformation is found in unstructured or semi-structured natural language documents\nand there is increasing demand for techniques to \u2018unlock\u2019 this data.", "mimetype": "text/plain", "start_char_idx": 1642, "end_char_idx": 3357, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9ff3ce2c-0379-406c-a8eb-1ab0013304fc": {"__data__": {"id_": "9ff3ce2c-0379-406c-a8eb-1ab0013304fc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5f4ecab5-ad1b-47e9-822c-0f54cdd8ccdd", "node_type": "1", "metadata": {}, "hash": "4537fbe0fc02fa713a70e270b3c52354b6c29cc126d249ed98e9364ee99bc7ab", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "9820bd76-52ad-4d76-a299-ce6aaad2d619", "node_type": "1", "metadata": {}, "hash": "60d4d94ca581554a9ba78c0d25e45f852c5807c0ce78929565b911e97cbe8cef", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "97565d28-5833-425b-a97f-2ad351d486a4", "node_type": "1", "metadata": {}, "hash": "9327f9dc0d4b91530847332e7feb27f0eb67595219c61d033f66a3613e9a639e", "class_name": "RelatedNodeInfo"}, {"node_id": "554d8454-664e-4d02-99a8-dc445b231738", "node_type": "1", "metadata": {}, "hash": "093df1345f3344e3b566b34bcfc3cac4196976f37fe6a29b0ae89ba5e65ec936", "class_name": "RelatedNodeInfo"}, {"node_id": "90dfb582-199b-4336-8561-af7f3d222930", "node_type": "1", "metadata": {}, "hash": "a5cc5218088ef568f0393bd3a6c12eecb245f326286c73fab6074ae74125e8f8", "class_name": "RelatedNodeInfo"}, {"node_id": "bed6bc18-235d-4127-8e52-08f2ded50876", "node_type": "1", "metadata": {}, "hash": "8c654d0b4d2d7feb0513c341ecbf1b0f8f06e7e4538f7008e58003b991f1330c", "class_name": "RelatedNodeInfo"}, {"node_id": "01541a09-2aee-4102-bffa-e8171960cb7c", "node_type": "1", "metadata": {}, "hash": "2de8b8a8c21d7f9456b899e46685dbfd08ada627b9adfcf45725472590c8f384", "class_name": "RelatedNodeInfo"}]}, "text": "Computing\ngraduates with knowledge of natural language processing techniques are \ufb01nding\nemployment in areas such as text analytics, sentiment analysis, topic detection and\ninformation extraction.\nAssessment\nThe course is assessed via an unseen written examination. A sample examination\npaper is provided in the Appendix at the end of this subject guide, with some\nguidelines on how to answer the questions. You will be required to attempt three\nquestions out of a choice of \ufb01ve. The questions will cover \u2018book knowledge\u2019, problem\nsolving and short essays on more theoretical topics. The examination is not a\nmemory test but will be designed to assess your understanding of the course\ncontent. There will also be coursework which will include a similar mix of questions,\nbut with a stronger focus on practical problem-solving.\nYou will be expected to provide electronic copies of your coursework for plagiarism\nchecking purposes. It is very important that any material that is not original to you\nshould be properly attributed and placed in quotation marks, with a full list of\nreferences at the end of your submission. You should follow the style used in this\nsubject guide for citing references, for example:\nSegaran (2007, pp.117\u2013118) discusses some problems with rule-based spam \ufb01lters.\nAnswers which consist entirely or mostly of quoted material are unlikely to get many\nmarks even if properly attributed, as simply reproducing an answer in someone\nelse\u2019s words does not demonstrate that you have fully understood the material.\nIn order to give you some practice in problem-solving and writing short essays, there\n1\n\nCO3354 Introduction to natural language processing\nare a number of Activities throughout this subject guide. The Appendix includes a\nsection \u2018Answers to selected activities\u2019, although these will not always provide\ncomplete answers to the questions but are intended to indicate how particular types\nof questions should be approached. Sample examination questions are provided at\nthe end of each chapter. Some, but not all, of these are included in the sample\nexamination paper with suggested answers at the end of the guide.\nThe subject guide and other learning resources\nThis subject guide is not intended as a self-contained textbook but sets out speci\ufb01c\ntopics for study in the CO3354 half unit. There is a recommended textbook and a\nnumber of other readings are listed at appropriate places.", "mimetype": "text/plain", "start_char_idx": 3358, "end_char_idx": 5773, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bd41e00a-7043-4f68-bb92-5ffc9c4dc1ec": {"__data__": {"id_": "bd41e00a-7043-4f68-bb92-5ffc9c4dc1ec", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9ff3ce2c-0379-406c-a8eb-1ab0013304fc", "node_type": "1", "metadata": {}, "hash": "0de2d960139de5c49efc6193d9fe47968bd392d9e594b465437d305dccc8a328", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "9820bd76-52ad-4d76-a299-ce6aaad2d619", "node_type": "1", "metadata": {}, "hash": "60d4d94ca581554a9ba78c0d25e45f852c5807c0ce78929565b911e97cbe8cef", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "5fef8831-14d6-4bc7-8579-8d2ac35bce09", "node_type": "1", "metadata": {}, "hash": "30c796154cf6a6acd40d3d356d68b7503ecb1a6a333b3d102bedb324418ab51c", "class_name": "RelatedNodeInfo"}]}, "text": "There is a recommended textbook and a\nnumber of other readings are listed at appropriate places. There are also links to\nwebsites providing useful resources such as software tools and access to online\nlinguistic data. The learning outcomes listed in the next chapter assume that you are\nworking through the recommended readings, activities and sample examination\nquestions. It will not be possible to pass this half unit by reading only the subject\nguide.", "mimetype": "text/plain", "start_char_idx": 5677, "end_char_idx": 6132, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "73d1e212-4483-441d-bac3-f8be01007682": {"__data__": {"id_": "73d1e212-4483-441d-bac3-f8be01007682", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0e3d4afd-db7e-4a20-85fc-3433bed3f402", "node_type": "1", "metadata": {}, "hash": "427b345b53ed8c3b7294bedbfb80591f769256b835da0cd99d330f7a9657d61a", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "167676cb-c620-4532-959f-b490a6cec2a4", "node_type": "1", "metadata": {}, "hash": "497ef461c0dfc54f5fb4ad9ce9a092029aa4523a1a74bbb30063ebbd04613391", "class_name": "RelatedNodeInfo"}, {"node_id": "3ca598c6-14e2-4e21-bc64-9086965962e3", "node_type": "1", "metadata": {}, "hash": "9585eb2653a7399ae3d777ab10cb2ecef4798c03342ca0e6052153bb7ec9d91a", "class_name": "RelatedNodeInfo"}, {"node_id": "2c4e9599-0dc3-422c-b512-819573a121f4", "node_type": "1", "metadata": {}, "hash": "a13bbb926635577fb2a455c27e5ca2aea0a3903263ef64553018f75c1b7ba45c", "class_name": "RelatedNodeInfo"}, {"node_id": "a2792d4a-2701-44a1-af5f-1ab791bfc156", "node_type": "1", "metadata": {}, "hash": "90ae58eacd3637315f7705056d897146e3e3af1db6c3396112d9e9118aa3f14b", "class_name": "RelatedNodeInfo"}, {"node_id": "9d6866a2-a9ab-4dc8-a062-3ffc0769bb09", "node_type": "1", "metadata": {}, "hash": "133a527e5f2e143e836df7fcbc0bb56ebdac00f3bccd30148653400fdb7645cb", "class_name": "RelatedNodeInfo"}]}, "text": "It will not be possible to pass this half unit by reading only the subject\nguide. Please refer to the Computing VLE for other resources, which should be used\nas an aid to your learning.\nSuggested study time\nThe Student Handbook states that \u2018To be able to gain the most bene\ufb01t from the\nprogramme, it is likely that you will have to spend at least 300 hours studying for\neach full unit, though you are likely to bene\ufb01t from spending up to twice this time\u2019.\nNote that this subject is a half unit.\nThe course is designed to be delivered over a ten-week term as one of four\nconcurrent modules, and this guide has six chapters. Chapter 1 goes into more detail\nabout the structure of the guide and the course, while Chapters 2 to 6 are each\ndedicated to a particular topic. It is suggested that you spend about two weeks on\nChapters 1 and 2 together and each of Chapters 3 to 6, including the associated\nreading and web-based material, and work through the activities and sample\nexamination questions during this time.\n2\n\nContents\nAcknowledgement\nThis subject guide draws closely on:\nBird, S., E. Klein and E. Loper, Natural Language Processing with Python . (O\u2019Reilly\nMedia 2009) [ISBN 9780596516499; http://nltk.org/book].\nYou will be expected to draw on it in your studies and to use the accompanying\nsoftware package, the Natural Language Toolkit, which requires the Python\nlanguage. Natural language processing with Python has been made available under\nthe terms of the Creative Commons Attribution Noncommercial No-Derivative-Works\n3.0 US License: http://creativecommons.org/licenses/by-nc-nd.3.0/us/legalcode (last\nvisited 13th April 2013).\n3\n\nCO3354 Introduction to natural language processing\n4\n\nChapter 1\nIntroduction: how to use this subject guide\n1.1 Introduction\nThe idea of computers being able to understand ordinary languages and hold\nconversations with human beings has been a staple of science \ufb01ction since the \ufb01rst\nhalf of the twentieth century and was envisaged in a classic paper by Alan Turing\n(1950) as a hallmark of computational intelligence.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2060, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "17985ccc-408f-4d6e-a15e-a1062fce4a0c": {"__data__": {"id_": "17985ccc-408f-4d6e-a15e-a1062fce4a0c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "73d1e212-4483-441d-bac3-f8be01007682", "node_type": "1", "metadata": {}, "hash": "91a2eb3fc8e8bab9c3c512f1de6728ef628ab8f34a6e4bc16921de2a7f382d53", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0e3d4afd-db7e-4a20-85fc-3433bed3f402", "node_type": "1", "metadata": {}, "hash": "427b345b53ed8c3b7294bedbfb80591f769256b835da0cd99d330f7a9657d61a", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "d2fabb62-79ba-4704-9f1a-bbbac7b4eb55", "node_type": "1", "metadata": {}, "hash": "a7aca842a5984ec286c52374a9434396d8563b29010f08a7b7bd6867c75bb735", "class_name": "RelatedNodeInfo"}, {"node_id": "8330253a-e2eb-4418-86cb-ff01133b90a7", "node_type": "1", "metadata": {}, "hash": "40c8051e8950d005bc1a4e487ae3c0d60b20314e1c73000a8a9e155f2bea6e5a", "class_name": "RelatedNodeInfo"}, {"node_id": "980359f5-2bd7-4682-aec2-4d17b6a17be2", "node_type": "1", "metadata": {}, "hash": "df160b04b9fb830ddc607f6509bbe6c141e1d49c9599b9178840afc9b13e401e", "class_name": "RelatedNodeInfo"}, {"node_id": "06c2a17b-c2c1-46c5-a542-eedc4da933ff", "node_type": "1", "metadata": {}, "hash": "8b8b9a60fc4160fc47a78150200137a3c9312569864d75225e9856b98cabe84a", "class_name": "RelatedNodeInfo"}]}, "text": "Since the start of the\ntwenty-\ufb01rst century this vision has been starting to look more plausible: arti\ufb01cial\nintelligence techniques allied with the scienti\ufb01c study of language have emerged\nfrom universities and research laboratories to inform a variety of industrial and\ncommercial applications. Many websites now offer automatic translation; mobile\nphones can appear to understand spoken questions and commands; search engines\nlike Google use basic linguistic techniques for automatically completing or\n\u2018correcting\u2019 your queries and for \ufb01nding relevant results that are closely matched to\nyour search terms. We are still some way from full machine understanding of natural\nlanguage, however. Automated translations still need to be reviewed and edited by\nskilled human translators while no computer system has yet come close to passing\nthe \u2018Turing Test\u2019 of convincingly simulating human conversation. Indeed it has been\nargued that the Turing Test is a blind alley and that research should focus on\nproducing effective applications for speci\ufb01c requirements without seeking to\ngenerate an illusion that users are interacting with a human rather than a machine\n(Hayes and Ford, 1995). Hopefully, by the time you \ufb01nish this course you will have\ncome to appreciate some of the challenges posed by full understanding of natural\nlanguage as well as the very real achievements that have resulted from focusing on a\nrange of speci\ufb01c, well-de\ufb01ned tasks.\n1.2 Aims of the course\nThis course combines a critical introduction to key topics in theoretical linguistics\nwith hands-on practical experience of developing applications to process texts and\naccess linguistic resources. The main topics covered are:\naccessing text corpora and lexical resources\nprocessing raw text\ncategorising and tagging\nextracting information from text\nanalysing sentence structure.", "mimetype": "text/plain", "start_char_idx": 2061, "end_char_idx": 3908, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5408125b-8b32-4b98-b9cd-05fc3aaa7fbd": {"__data__": {"id_": "5408125b-8b32-4b98-b9cd-05fc3aaa7fbd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "17985ccc-408f-4d6e-a15e-a1062fce4a0c", "node_type": "1", "metadata": {}, "hash": "703ea9cbae100392fee7a4a770d5b53423c594dba37ee9f44b50a34d0098e4ed", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0e3d4afd-db7e-4a20-85fc-3433bed3f402", "node_type": "1", "metadata": {}, "hash": "427b345b53ed8c3b7294bedbfb80591f769256b835da0cd99d330f7a9657d61a", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "407d5142-618f-4e0d-b085-f2bc1e42f049", "node_type": "1", "metadata": {}, "hash": "eee24890d8b46a518365bbfad267397c0d17b2c94dbf6baa0e31ae3556302191", "class_name": "RelatedNodeInfo"}, {"node_id": "5f38e1cc-7ed0-40de-bcac-e0ee086e6eb9", "node_type": "1", "metadata": {}, "hash": "c2de031cfd3b334e8890a99253767a4c688c729102b46e75964c2e701748de5c", "class_name": "RelatedNodeInfo"}, {"node_id": "970789e4-2146-4bbe-a23e-0f66749b44ef", "node_type": "1", "metadata": {}, "hash": "f6b2774725da8079366ff0980d977615daa3d034087db0d44946050a020f749e", "class_name": "RelatedNodeInfo"}, {"node_id": "1b2bcf9b-d898-4068-a91c-8ceebe18ba17", "node_type": "1", "metadata": {}, "hash": "643d5df793288289b5f71546bada064bd50830728a3099821a34d93745dfa8d6", "class_name": "RelatedNodeInfo"}, {"node_id": "d64513af-c80b-4871-a8cd-6a12bb499b55", "node_type": "1", "metadata": {}, "hash": "723360a34a54a9fd7ee46f43b0beb4d292035329e965f4e26429e26b176dc66e", "class_name": "RelatedNodeInfo"}]}, "text": "5\n\nCO3354 Introduction to natural language processing\n1.3 Learning outcomes\nOn successful completion of this course, including recommended readings, exercises\nand activities, you should be able to:\n1. utilise and explain the function of software tools such as corpus readers,\nstemmers, taggers and parsers\n2. explain the difference between regular and context-free grammars and de\ufb01ne\nformal grammars for fragments of a natural language\n3. critically appraise existing Natural Language Processing (NLP) applications such\nas chatbots and translation systems\n4. describe some applications of statistical techniques to natural language analysis,\nsuch as classi\ufb01cation and probabilistic parsing.\nEach main chapter contains a list of learning outcomes speci\ufb01c to that chapter at the\nbeginning, as well as a summary at the end of the chapter.\n1.4 Reading list and other learning resources\nThis is a list of textbooks and other resources which will be useful for all or most\nparts of the course. Additional readings will be given at the start of each chapter. See\nthe bibliography for a full list of books and articles referred to, including all ISBNs.\nIn some cases several different books will be listed: you are not expected to read all\nof them, rather the intention is to give you some alternatives in case particular texts\nare hard to obtain.\nEssential reading\nBird, Klein, and Loper (2009): Natural Language Processing with Python . The full\ntext including diagrams is freely available online at http://nltk.org/book (last\nvisited 13th April 2013). The main textbook for this course, Natural Language\nProcessing with Python is the outcome of a project extending over several years\nto develop the Natural Language Toolkit (NLTK), which is a set of tools and\nresources for teaching computational linguistics. The NLTK comprises a suite of\nsoftware modules written in Python and a collection of corpora and other\nresources. See section 1.5 below for advice on installing the NLTK and other\nsoftware packages.\nIn the course of working through this text you will gain some experience and\nfamiliarity with the Python language, though you will not be expected to\nproduce substantial original code as part of the learning outcomes of the course.\nRecommended reading\nPinker (2007). The Language Instinct . This book is aimed at non-specialists and\ndeals with many psychological and cultural aspects of language.", "mimetype": "text/plain", "start_char_idx": 3909, "end_char_idx": 6309, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e686929c-2133-4304-86df-a8dd0e707731": {"__data__": {"id_": "e686929c-2133-4304-86df-a8dd0e707731", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5408125b-8b32-4b98-b9cd-05fc3aaa7fbd", "node_type": "1", "metadata": {}, "hash": "47ca26199ec87dac70556888b2494d416460fc4e184d6f6d41eb193b6b00fb55", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0e3d4afd-db7e-4a20-85fc-3433bed3f402", "node_type": "1", "metadata": {}, "hash": "427b345b53ed8c3b7294bedbfb80591f769256b835da0cd99d330f7a9657d61a", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "3c7f1760-8315-4a5d-9021-0409b727c3f8", "node_type": "1", "metadata": {}, "hash": "58cf950a50a7bff54f16d05c30419af9b2ac6784a6bd33be98fd7499c0a93181", "class_name": "RelatedNodeInfo"}, {"node_id": "aec98491-a6aa-4682-8156-5d56d2ed8ff8", "node_type": "1", "metadata": {}, "hash": "01120960ebe159bf6aedb57c7ab5685c047c4ba4500b84b6484c0d2af28cfd44", "class_name": "RelatedNodeInfo"}, {"node_id": "5e1191cb-b28a-4fd5-a978-4e2dbe1b2759", "node_type": "1", "metadata": {}, "hash": "f7accca1dff5404e268dacc797cc094679c34d6c80c0550708ac8e093a8d03a2", "class_name": "RelatedNodeInfo"}, {"node_id": "f9427b1e-ad15-4d30-9936-105fba22f021", "node_type": "1", "metadata": {}, "hash": "31641413684648a77c163a066a091d5f411daf89766f0d7a548ac55d410d7ff1", "class_name": "RelatedNodeInfo"}, {"node_id": "0bdeb975-a17d-4f48-83cc-118021032748", "node_type": "1", "metadata": {}, "hash": "95d8d206ce3a81c68a1c57251c033b1f3121f2a07b09e2d004335c18423c4d0e", "class_name": "RelatedNodeInfo"}]}, "text": "Chapter 4 is\nparticularly relevant to this course as it provides a clear and accessible\npresentation of two standard techniques for modelling linguistic structure:\n\ufb01nite-state machines and context-free grammars (though Pinker does not in fact\nuse these terms, as we will see in Chapter 2 of the subject guide).\n6\n\nReading list and other learning resources\nJurafsky and Martin (2009): Speech and Language Processing , second edition.\nCurrently the de\ufb01nitive introductory textbook in this \ufb01eld, covering the major\ntopics in a way which combines theoretical issues with presentations of key\ntechnologies, formalisms and mathematical techniques. Much of this book goes\nbeyond what you will need to pass this course, but it is always worth turning to\nif you\u2019re looking for a more in-depth discussion of any particular topics.\nPerkins (2010): Python Text Processing with NLTK 2.0 Cookbook . This book will be\nsuitable for students who want to get more practice in applying Python\nprogramming to natural language processing. Perkins explains several\ntechniques and algorithms in more technical detail than Bird et al. (2009) and\nprovides a variety of worked examples and code snippets.\nSegaran (2007) Programming Collective Intelligence . This highly readable and\ninformative text includes tutorial material on machine learning techniques using\nthe Python language.\nAdditional reading\nRussell and Norvig (2010) Arti\ufb01cial Intelligence: a modern approach , third edition.\nThis book is currently regarded as the de\ufb01nitive textbook in Arti\ufb01cial\nIntelligence, and includes useful material on natural language processing as well\nas on machine learning, which has many applications in NLP.\nMitkov (2003) The Oxford Handbook of Computational Linguistics . Edited by Ruslan\nMitkov. A collection of short articles on major topics in the \ufb01eld, contributed by\nacknowledged experts in their respective disciplines.\nPartee et al. (1990) Mathematical Methods in Linguistics . A classic text, whose\ncontents indicate how much the \ufb01eld has changed since its publication. A book\nwith such a title nowadays would be expected to include substantial coverage of\nstatistics, probability and information theory, but this text is devoted exclusively\nto discrete mathematics including set theory, formal logic, algebra and automata.\nThese topics are particularly applicable to the content of Chapters 2 and 6.", "mimetype": "text/plain", "start_char_idx": 6310, "end_char_idx": 8687, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a47fea3a-8340-432c-ae40-5a848af88020": {"__data__": {"id_": "a47fea3a-8340-432c-ae40-5a848af88020", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e686929c-2133-4304-86df-a8dd0e707731", "node_type": "1", "metadata": {}, "hash": "dd161576442b509e696fb450d2f53954335722303c8c11039df93097c821bf5c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0e3d4afd-db7e-4a20-85fc-3433bed3f402", "node_type": "1", "metadata": {}, "hash": "427b345b53ed8c3b7294bedbfb80591f769256b835da0cd99d330f7a9657d61a", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "95e8f49f-3498-45ef-ab1e-b6b84862fc33", "node_type": "1", "metadata": {}, "hash": "52be2707b86c6341e2f8855567ebe8857fd9496d26032d3206aa5a4929007648", "class_name": "RelatedNodeInfo"}, {"node_id": "4e0742d5-a291-464e-bae1-6e36b6257a69", "node_type": "1", "metadata": {}, "hash": "64e23c6caa4a21a74dcc4eb7e76cd15a65375b7157a43e1dcf45bd1b7525f2d0", "class_name": "RelatedNodeInfo"}]}, "text": "These topics are particularly applicable to the content of Chapters 2 and 6.\nWebsites\nIntroductory/Reference The Internet Grammar of English is a clear and informative\nintroductory guide to English grammar which also serves as a tutorial in\ngrammatical terminology and concepts. The site is hosted by the Survey of\nEnglish Usage at University College London\n(http://www.ucl.ac.uk/internet-grammar/home.htm, last visited 27th May\n2013).\nHands-on corpus analysis\nBNCWeb is a web-based interface to the British National Corpus hosted at Lancaster\nUniversity which supports a variety of online queries for corpus analysis\n(http://bncweb.info/; last visited 27th May 2013).\nThe Bank of English forms part of the Collins Corpus, developed by Collins\nDictionaries and the University of Birmingham.", "mimetype": "text/plain", "start_char_idx": 8611, "end_char_idx": 9401, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "73aa9fd4-cd64-4cb7-bc2f-382239d749a9": {"__data__": {"id_": "73aa9fd4-cd64-4cb7-bc2f-382239d749a9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6d05c069-f995-4871-a6a5-1996a4a9d8d5", "node_type": "1", "metadata": {}, "hash": "1f8d51e30f7e51c5fcc4bf38d6c24435d70fc304d8dda4100a6e59f82410867b", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "82045510-e880-4e6f-9687-1b57f30c03f2", "node_type": "1", "metadata": {}, "hash": "3542e6c20064a7b04e484eceea0803513b710ce05e46d9043b170fe6f56ee277", "class_name": "RelatedNodeInfo"}, {"node_id": "c2ace729-61f6-4231-8048-6b2c1942e13d", "node_type": "1", "metadata": {}, "hash": "d952e0ba03a2a028f171effc0dccf4179ab6f87f8644b26b93f19c202e545849", "class_name": "RelatedNodeInfo"}, {"node_id": "740360e6-b35f-4722-ad2a-18a58664e540", "node_type": "1", "metadata": {}, "hash": "a7a19157c4c1f988fcd0266370d6d294fbdbed2b4122ec644ae1805d26906240", "class_name": "RelatedNodeInfo"}, {"node_id": "1f5d39fe-327c-40d2-9f66-b14f3c9dd024", "node_type": "1", "metadata": {}, "hash": "1a2c1858a7627e3a8104e8a070613717bcbdaa708cafeaabc8f1923aa762d80c", "class_name": "RelatedNodeInfo"}]}, "text": "Used as a basis for Collins\nAdvanced Learner\u2019s Dictionary, grammars and various tutorial materials for\nlearners of English. Limited online access at\nhttp://www.collinslanguage.com/wordbanks; (last visited 27th May 2013).\nJournals and conferences\nComputational Linguistics is the leading journal in this \ufb01eld and is freely available at\nhttp://www.mitpressjournals.org/loi/coli (last visited 27th May 2013).\nConference Proceedings are often freely downloadable and many of these are\nhosted by the ACL Anthology at http://aclweb.org/anthology-new/ (last visited\n27th May 2013).\n7\n\nCO3354 Introduction to natural language processing\n1.5 Software requirements\nThis course assumes you have access to the Natural Language Toolkit (NLTK) either\non your own computer or at your institution. The NLTK can be freely downloaded\nand it is strongly recommended that you install it on your own machine: Windows,\nMac OSX and Linux distributions are available from http://nltk.org (last visited\nApril 10th 2013) and some distributions of Linux have it in their package/software\nmanagers. Full instructions are available at the cited website along with details of\nassociated packages which should also be installed, including Python itself which is\nalso freely available. Once you have installed the software you should also download\nthe required datasets as explained in the textbook (Bird et al., 2009, p. 3).\nYou should check the NLTK website to determine what versions of Python are\nsupported. Current stable releases of NLTK are compatible with Python 2.6 and 2.7.\nA version supporting Python 3 is under development and may be available for\ntesting by the time you read this guide (as of April 2013).\n1.6 How to use the guide/structure of the course\nThis section gives a brief summary of each chapter. These learning outcomes are\nlisted at the beginning of each main chapter and assume that you have worked\nthrough the recommended readings and activities for that chapter.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1959, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c12f4d5f-a272-44f4-b3e0-9523ae6c5611": {"__data__": {"id_": "c12f4d5f-a272-44f4-b3e0-9523ae6c5611", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "73aa9fd4-cd64-4cb7-bc2f-382239d749a9", "node_type": "1", "metadata": {}, "hash": "e83b76f4d16e7656448d9a8c9d6bbfead4924e82dbc687d7ed3ca16406d46c7b", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6d05c069-f995-4871-a6a5-1996a4a9d8d5", "node_type": "1", "metadata": {}, "hash": "1f8d51e30f7e51c5fcc4bf38d6c24435d70fc304d8dda4100a6e59f82410867b", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "4b9cc138-7e25-4618-a514-96ab2282041e", "node_type": "1", "metadata": {}, "hash": "c14cb4f7c44d91f319d2e0da25ec26713244911b0b4d17fe9dd3b6361278d82d", "class_name": "RelatedNodeInfo"}, {"node_id": "95dd6837-438b-4c0d-9bfc-258350d215ca", "node_type": "1", "metadata": {}, "hash": "c93a9067786248681a79f56ebe9f30860726717fc9ce4795ca5533a1e98079d8", "class_name": "RelatedNodeInfo"}, {"node_id": "256eb066-8499-4edf-ab79-41fc5deb103f", "node_type": "1", "metadata": {}, "hash": "7e50716400427ad1f45bbf4279e93908374282301419dbba8e2685ede1e049b5", "class_name": "RelatedNodeInfo"}, {"node_id": "92df3f81-936b-4e93-a147-3f14704be827", "node_type": "1", "metadata": {}, "hash": "2346e1b4da0bb5c037bbbfe379adbd060cf57490f21f6ec10593ad309c2b6aed", "class_name": "RelatedNodeInfo"}]}, "text": "1.6.1 Chapter 2: Introducing NLP: patterns and structures in language\nThis chapter looks at different approaches to analysing texts, ranging from \u2018shallow\u2019\ntechniques that focus on individual words and phrases to \u2018deeper\u2019 methods that\nproduce a full representation of the grammatical structure of a sentence as a\nhierarchical tree diagram. The chapter introduces two important formalisms:\nregular expressions , which will play an important part throughout the course, and\ncontext-free grammars which we return to in Chapter 6 of the subject guide.\n1.6.2 Chapter 3: Getting to grips with natural language data\nThis chapter looks at the different kinds of data resources that can be used for\ndeveloping tools to harvest information that has been published as machine-readable\ndocuments. In particular, we introduce the notion of a \u2018corpus\u2019 (plural corpora ) \u2013 for\nthe purposes of this course, a computer-readable collection of text or speech. The\nNLTK includes a selection of excerpts from several well-known corpora and we\nprovide brief descriptions of the most important of these and of the different formats\nin which corpora are stored.\n8\n\nWhat the course does not cover\n1.6.3 Chapter 4: Computational tools for text analysis\nThe previous chapter introduced some relatively super\ufb01cial techniques for language\nanalysis such as concordancing and collocations. This chapter covers some\nfundamental operations in text analysis:\ntokenisation: breaking up a character string into words, punctuation marks and\nother meaningful expressions;\nstemming: removing af\ufb01xes from words, e.g. mean+ing ,distribut+ion ;\ntagging: associating each word in a text with a grammatical category or part of\nspeech.\n1.6.4 Chapter 5: Statistically-based techniques for text analysis\nStatistical and probabilistic methods are pervasive in modern computational\nlinguistics. These methods generally do not aim at complete understanding or\nanalysis of a text, but at producing reliable answers to well-de\ufb01ned problems such as\nsentiment analysis, topic detection or recognising named entities and relations\nbetween them in a text.", "mimetype": "text/plain", "start_char_idx": 1960, "end_char_idx": 4059, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "41954dcf-ce49-439a-bc62-a757a53c772d": {"__data__": {"id_": "41954dcf-ce49-439a-bc62-a757a53c772d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c12f4d5f-a272-44f4-b3e0-9523ae6c5611", "node_type": "1", "metadata": {}, "hash": "66f8d9c6d5676141b54b9695bf1c54588ae3fb2cc12cb01c16ac02768116c130", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6d05c069-f995-4871-a6a5-1996a4a9d8d5", "node_type": "1", "metadata": {}, "hash": "1f8d51e30f7e51c5fcc4bf38d6c24435d70fc304d8dda4100a6e59f82410867b", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "6a2652a2-f5e5-4a3b-81a8-89aacf398731", "node_type": "1", "metadata": {}, "hash": "07994db5ee9132d3d8a64f587c6e6e55d3800cc2c3551b6424a8265d92f59c66", "class_name": "RelatedNodeInfo"}, {"node_id": "7ee67fdb-fcd5-4ece-b603-8742cf3619a2", "node_type": "1", "metadata": {}, "hash": "3f2e85962308851455e8e1458cf08a338dc35f784e807a2ff0f7de623cbaee5e", "class_name": "RelatedNodeInfo"}, {"node_id": "8c281032-c249-42de-b36c-d8ee871b3803", "node_type": "1", "metadata": {}, "hash": "2f7acf75a70f89948840f5b900a03583b51d48089afbfaf5700a18e1765e7ba8", "class_name": "RelatedNodeInfo"}, {"node_id": "0b969fd4-c137-4acd-b272-208d00f7d49a", "node_type": "1", "metadata": {}, "hash": "5870fbf2ff23bd814cb71cbb7c0abdb3940f6d163ef3a334f30a60576755cb65", "class_name": "RelatedNodeInfo"}, {"node_id": "4930c93a-230d-403c-9675-1eb74ea812f5", "node_type": "1", "metadata": {}, "hash": "cfd1eee23e6c5f2b1ed86f7cafcb8279e97d076a32d9b8af3c69c4311a66adbf", "class_name": "RelatedNodeInfo"}]}, "text": "1.6.5 Chapter 6: Analysing sentences: syntax and parsing\nThis chapter resumes the discussion of natural language syntax that was introduced\nin Chapter 2, concentrating on context-free grammar formalisms and various ways\nthey need to be modi\ufb01ed and extended beyond the model that was presented in that\nchapter. Formal grammars do not encode any kind of processing strategy but simply\nprovide a declarative speci\ufb01cation of the well-formed sentences in a language.\nParsers are computer programs that use grammar rules to analyse sentences, and\nthis chapter introduces some fundamental approaches to syntactic parsing.\n1.6.6 Appendices\nThe Appendices include:\nA. A bibliography listing all works referenced in the subject guide, including\npublication details and ISBNs.\nB. A glossary of technical terms used in this subject guide.\nC. Answers to selected activities.\nD. A trace of a recursive descent parse as described in Chapter 6 of the subject guide.\nE. A sample examination paper with guidelines on how to answer questions.\n1.7 What the course does not cover\nThe \ufb01eld of natural language processing or computational linguistics is a large and\ndiverse one, and includes many topics we will not be able to address in this course.\nSome of these are listed below:\n9\n\nCO3354 Introduction to natural language processing\nspeech recognition and synthesis\ndialogue and question answering\nmachine translation\nsemantic analysis, including word meanings and logical structure\ngenerating text or speech from non-linguistic inputs.\nHowever, the course should provide you with a basis for investigating some of these\nareas for your \ufb01nal year project. Some of these topics are dealt with in the later\nchapters of Bird et al. (2009) and most of them are touched on by Jurafsky and\nMartin (2009).\n10\n\nChapter 2\nIntroducing NLP: patterns and structure in\nlanguage\nEssential reading\nSteven Pinker (2007), The Language Instinct , Chapter 4.\nRecommended reading\nJurafsky and Martin (2009), Speech and Language Processing second edition,\nChapters/Sections 2 \u2018Regular Expressions and Automata\u2019, 5.1 \u2018(Mostly) English Word\nClasses\u2019, 12.1 \u2018Constituency\u2019, 12.2 \u2018Context-Free Grammars\u2019, 12.3 \u2018Some Grammar\nRules for English\u2019.", "mimetype": "text/plain", "start_char_idx": 4060, "end_char_idx": 6257, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a7e422d7-7aa7-4dfc-b049-68e45ff08ab2": {"__data__": {"id_": "a7e422d7-7aa7-4dfc-b049-68e45ff08ab2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "41954dcf-ce49-439a-bc62-a757a53c772d", "node_type": "1", "metadata": {}, "hash": "0c5a2da3fef54b73b79b1b3e4ec425d5d2b0dd493c6a88ca740888cec2709b0b", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6d05c069-f995-4871-a6a5-1996a4a9d8d5", "node_type": "1", "metadata": {}, "hash": "1f8d51e30f7e51c5fcc4bf38d6c24435d70fc304d8dda4100a6e59f82410867b", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "46791f14-864d-4812-b012-f1984b15435a", "node_type": "1", "metadata": {}, "hash": "aa44c3b0b1901c40faed347fc9b1902bdfd94c7e902a20ca553093d8e0ae306b", "class_name": "RelatedNodeInfo"}, {"node_id": "4cfeb977-af54-41b0-b681-681f662dfb8c", "node_type": "1", "metadata": {}, "hash": "82376a6b7e4bba639ecdc56fc9d2f48422f62dcc17d53c36540a9f6207b9aa76", "class_name": "RelatedNodeInfo"}, {"node_id": "815b3681-02eb-4dd1-9194-de2466b9b063", "node_type": "1", "metadata": {}, "hash": "42f383a9de43867f9dbbd91a8641263cfa373b93fa80a51de44578f62b31d060", "class_name": "RelatedNodeInfo"}, {"node_id": "e370a1da-7e9f-4f52-af87-ee2e34a1a22b", "node_type": "1", "metadata": {}, "hash": "039b77e9dadb397516149b9894e50b7ff4eb9f7440c5812ef7710d7b59ed4692", "class_name": "RelatedNodeInfo"}, {"node_id": "e449ba67-6b3f-467c-9c37-aa87fb81e168", "node_type": "1", "metadata": {}, "hash": "8ba3ca0e4e68f5010ce54df4e7b6dafca202bf0a9239578e14f9f679600f99fb", "class_name": "RelatedNodeInfo"}]}, "text": "Additional reading\nThe Internet Grammar of English;\nhttp://www.ucl.ac.uk/internet-grammar/home.htm especially sections \u2018Word\nClasses\u2019 and \u2018Introducing Phrases\u2019.\nPartee, ter Meulen and Wall, (1990), Mathematical Methods in Linguistics ,\nChapters/Sections 16.1\u20134, 17.1\u20133 (omitting 17.1.2\u20135, 17.2.1), 18.2, 18.6.\n2.1 Learning outcomes\nBy the end of this chapter, and having completed the Essential reading and activities,\nyou should be able to:\nexplain the concept of \ufb01nite state machines (FSMs) and their connections with\nregular expressions; work through simple FSMs\nwrite regular expressions for well-de\ufb01ned patterns of symbols\nanalyse sentences in terms of parts of speech (POS) and constituent structure,\nincluding the use of tree diagrams\nwrite regular and context-free grammars for small fragments of natural language\nexplain the concept of stemming and specify word-formation rules for given\nexamples.\n11\n\nCO3354 Introduction to natural language processing\n2.2 Introduction\nPeople communicate in many different ways: through speaking and listening,\nmaking gestures, using specialised hand signals (such as when driving or directing\ntraf\ufb01c), using sign languages for the deaf, or through various forms of text.\nBy text we mean words that are written or printed on a \ufb02at surface (paper, card,\nstreet signs and so on) or displayed on a screen or electronic device in order to be\nread by their intended recipient (or by whoever happens to be passing by).\nThis course will focus only on the last of these: we will be concerned with various\nways in which computer systems can analyse and interpret texts, and we will assume\nfor convenience that these texts are presented in an electronic format. This is of\ncourse quite a reasonable assumption, given the huge amount of text we can access\nvia the World Wide Web and the increasing availability of electronic versions of\nnewspapers, novels, textbooks and indeed subject guides. This chapter introduces\nsome essential concepts, techniques and terminology that will be applied in the rest\nof the course. Some material in this chapter is a little technical but no programming\nis involved at this stage.", "mimetype": "text/plain", "start_char_idx": 6258, "end_char_idx": 8405, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8cafad7a-b7ee-486a-96f3-35f93d97a364": {"__data__": {"id_": "8cafad7a-b7ee-486a-96f3-35f93d97a364", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a7e422d7-7aa7-4dfc-b049-68e45ff08ab2", "node_type": "1", "metadata": {}, "hash": "1d4c3756b4c390d4ccff607265ae24c12c9fda9f9cfb93b0ceaf7751df9ae0b2", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6d05c069-f995-4871-a6a5-1996a4a9d8d5", "node_type": "1", "metadata": {}, "hash": "1f8d51e30f7e51c5fcc4bf38d6c24435d70fc304d8dda4100a6e59f82410867b", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "b224ec18-c917-4558-8912-0c340d682004", "node_type": "1", "metadata": {}, "hash": "b57ed09626e56b0a8023442884d74247cf41f90739dbf3300d74fe184ce5fa29", "class_name": "RelatedNodeInfo"}, {"node_id": "718b7258-497f-4a7b-9fd3-c897e2b71787", "node_type": "1", "metadata": {}, "hash": "5f1ac3629beac34211c523ce1f1760d5782936e0196f04a668087c1c6c1b27f9", "class_name": "RelatedNodeInfo"}]}, "text": "Some material in this chapter is a little technical but no programming\nis involved at this stage.\nWe will begin in section 2.3 by considering texts as strings of characters which can\nbe broken up into sub-strings, and introduce some techniques for informally\ndescribing patterns of various kinds that occur in texts. Subsequently in section 2.4\nwe will begin to motivate the analysis of texts in terms of hierarchical structures in\nwhich elements of various kinds can be embedded within each other, in a\ncomparable way to the elements that make up an HTML web document. This section\nintroduces some technical machinery such as: \ufb01nite-state machines (FSMs), regular\nexpressions, regular grammars and context-free grammars.", "mimetype": "text/plain", "start_char_idx": 8308, "end_char_idx": 9029, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d2fc6b8a-3b33-42b3-820d-a7b3ad8d0304": {"__data__": {"id_": "d2fc6b8a-3b33-42b3-820d-a7b3ad8d0304", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "bbffa6d0-1837-4113-b1d6-88c66a801060", "node_type": "1", "metadata": {}, "hash": "f03342bd61794a1ccb4b2c79b84c86066c39273594a19a3d1aebe420c9ce4cf1", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "9e177f37-6ba2-4e79-9c7a-d1e9127c901d", "node_type": "1", "metadata": {}, "hash": "f7a18439f19eeeacaad28d4adcd16af5a194b8698028000696d26c5f7514808e", "class_name": "RelatedNodeInfo"}, {"node_id": "6336db00-0236-439c-91c2-48c301597882", "node_type": "1", "metadata": {}, "hash": "7b0b5c6d9f8c8135fc87676bad0f1168e7216228f57454fee03f81f418389555", "class_name": "RelatedNodeInfo"}, {"node_id": "aab24697-8302-44fa-a871-ded25764baa4", "node_type": "1", "metadata": {}, "hash": "acf84e38930a85fd92d5186a9c4e5f24120b3aa8569e1f29c58abac28ff3fb85", "class_name": "RelatedNodeInfo"}, {"node_id": "f0b77da9-5853-468f-b7f6-98c97632501e", "node_type": "1", "metadata": {}, "hash": "dc8f15d04c800d19469cb23b738b5c7cc8a96a4e2aa96bcf5fd4357ba57eb3c9", "class_name": "RelatedNodeInfo"}, {"node_id": "cf0bf3b5-c0ba-4867-b730-a052a5a9a319", "node_type": "1", "metadata": {}, "hash": "1ff606f3a22f0ceb0a4606ef9af56da196f42c09262ef2000d4db261d90aafcd", "class_name": "RelatedNodeInfo"}]}, "text": "2.3 Basic concepts\n2.3.1 Tokenised text and pattern matching\nOne of the more basic operations that can be applied to a text is tokenising :\nbreaking up a stream of characters into words, punctuation marks, numbers and\nother discrete items. So for example the character string\n\u201cDr. Watson, Mr. Sherlock Holmes\u201d, said Stamford, introducing us.\ncan be tokenised as in the following example, where each token is enclosed in single\nquotation marks:\n`\"' `Dr.' `Watson' `,' `Mr.' `Sherlock' `Holmes' `\"' `,'\n`said' `Stamford' `,' `introducing' `us' `.'\nAt this level, words have not been classi\ufb01ed into grammatical categories and we\nhave very little indication of syntactic structure. Still, a fair amount of information\nmay be obtained from relatively shallow analysis of tokenised text. For example,\nsuppose we want to develop a procedure for \ufb01nding all personal names in a given\ntext. We know that personal names always start with capital letters, but that is not\nenough to distinguish them from names of countries, cities, companies, racehorses\n12\n\nBasic concepts\nand so on, or from capitalisation at the start of a sentence. Some additional ways to\nidentify personal names include:\nUse of a title Dr.,Mr.,Mrs.,Miss,Professor and so on.\nA capitalised word or words followed by a comma and a number, usually below\n100: this is a common way of referring to people in news reports, where the\nnumber stands for their age \u2013 for example Pierre Vinken, 61, . . .\nA capitalised word followed by a verb that usually applies to humans: said,\nreported ,claimed ,thought ,argued . . . This can over-generate in the case of\ncountry or organisation names as in the Crown argues orBritain claimed .\nWe can express these more concisely as follows, where jis the disjunction symbol,\nWord stands for a capitalised word and Intis an integer:\n(Dr.jProfessorjMr.jMrs.jMissjMs)Word\nWord Word ,Int\nWord (saidjthoughtjbelievedjclaimedjarguedj...)\nLearning activity\n1. Write down your own examples of names that match each of the above patterns.\n2.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2020, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f97a944c-98e7-45e4-b396-0b516221ce32": {"__data__": {"id_": "f97a944c-98e7-45e4-b396-0b516221ce32", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d2fc6b8a-3b33-42b3-820d-a7b3ad8d0304", "node_type": "1", "metadata": {}, "hash": "5fe440ce89fd78f5ef25ab4ac66b6d3edd50705f2475fcf8f6a872e76af119bd", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "bbffa6d0-1837-4113-b1d6-88c66a801060", "node_type": "1", "metadata": {}, "hash": "f03342bd61794a1ccb4b2c79b84c86066c39273594a19a3d1aebe420c9ce4cf1", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "6941ba64-e39a-4bb1-a9c2-816bce61d0b5", "node_type": "1", "metadata": {}, "hash": "c340eea4b0533db0d056b8fc0cc8849fa97babd441be38475d2d68e640b776a9", "class_name": "RelatedNodeInfo"}, {"node_id": "14ffb241-7518-4acf-9a91-daf76ad4bacf", "node_type": "1", "metadata": {}, "hash": "a9dc9c9c3968364946da03eccea6d4223b05ab92be83b70e68ae26791c72638c", "class_name": "RelatedNodeInfo"}, {"node_id": "4c3bc92f-712b-4f5b-9e3c-5c6ca73ea05b", "node_type": "1", "metadata": {}, "hash": "a2a55b188589b9e11d31f90b0e948e244a4f7ba8d1cbf1a020dd63c0554897c8", "class_name": "RelatedNodeInfo"}, {"node_id": "2a4374e1-c0a7-415d-9b59-162d89743850", "node_type": "1", "metadata": {}, "hash": "924886e042cd0e8715e9ab36115cb08894238aecca3bbb0126dfe3b234cadaf9", "class_name": "RelatedNodeInfo"}, {"node_id": "b8187973-a78d-47b2-aa0f-20ffac8499ea", "node_type": "1", "metadata": {}, "hash": "9a1dbe6515adf4562957c19299b720d53100a9a67d9c6babb2a351a8b42f103e", "class_name": "RelatedNodeInfo"}]}, "text": "Write down your own examples of names that match each of the above patterns.\n2. Pick a newspaper article or webpage that provides a variety of examples of people\u2019s names. Do they\nmatch the patterns we have encoded above? If not, see if you can devise additional rules for\nrecognising names and write them out in a similar format.\n2.3.2 Parts of speech\nA further stage in analysing text is to associate every token with a grammatical\ncategory or part of speech (POS). A number of different POS classi\ufb01cations have\nbeen developed within computational linguistics and we will see some examples in\nsubsequent chapters. The following is a list of categories that are often encountered\nin general linguistics: you will be familiar with many of them already from learning\nthe grammar of English or other languages, though some terms such as Determiner\norConjunction may be new to you.\nNoun \ufb01sh, book, house, pen, procrastination, language\nProper noun John, France, Barack, Goldsmiths, Python\nVerb loves, hates, studies, sleeps, thinks, is, has\nAdjective grumpy, sleepy, happy, bashful\nAdverb slowly, quickly, now, here, there\nPronoun I, you, he, she, we, us, it, they\nPreposition in, on, at, by, around, with, without\nConjunction and, but, or, unless\nDeterminer the, a, an, some, many, few, 100\n13\n\nCO3354 Introduction to natural language processing\nBird et al. (2009, pp. 184\u20135) make the standard distinction that nouns \u2018generally\nrefer to people, places, things or concepts\u2019 while verbs \u2018describe events or actions\u2019.\nThis may be helpful when one is starting to learn grammatical terminology but is\nsomething of an over-simpli\ufb01cation. One can easily \ufb01nd or construct examples\nwhere the same concept can be expressed by a noun or a verb, or by an adjective or\nan adverb. And on the other hand, there are many words that can take different\nparts of speech depending on what they do in a sentence:\n1. Rome fell swiftly .\n2. The fallof Rome was swift.\n3. The enemy completely destroyed the city.\n4.", "mimetype": "text/plain", "start_char_idx": 1941, "end_char_idx": 3929, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "471f0d14-6eb0-42cf-9816-a59b40804092": {"__data__": {"id_": "471f0d14-6eb0-42cf-9816-a59b40804092", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f97a944c-98e7-45e4-b396-0b516221ce32", "node_type": "1", "metadata": {}, "hash": "4e221cd2495ad8b3ff6c75af95cff601afabfc21e12b084770049bdb77f2d15a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "bbffa6d0-1837-4113-b1d6-88c66a801060", "node_type": "1", "metadata": {}, "hash": "f03342bd61794a1ccb4b2c79b84c86066c39273594a19a3d1aebe420c9ce4cf1", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "da0bb457-8323-4e05-a99a-e584ff4d81e3", "node_type": "1", "metadata": {}, "hash": "a399bc5380abca8ea4147cb22a2fe004797bd369dd6080d1a440bfdd359fabe1", "class_name": "RelatedNodeInfo"}, {"node_id": "b38f1308-86a3-4ce3-bc01-f4d1d22f5787", "node_type": "1", "metadata": {}, "hash": "dbdab219169fbce4797e681f684617c07c2acf3f4f1bcada98af667c7181a8fc", "class_name": "RelatedNodeInfo"}, {"node_id": "23f7d6e1-b956-406a-a334-555ffa2f7847", "node_type": "1", "metadata": {}, "hash": "a860275924f5434643784ae1dd50202f04a147bbd56bac2c4cef702709291b00", "class_name": "RelatedNodeInfo"}, {"node_id": "dc70475a-13f2-473c-a551-7e10b5cd8562", "node_type": "1", "metadata": {}, "hash": "6c384560f8f6e93eaec78f530571a5c63d39900e3b3139485328073757b65a64", "class_name": "RelatedNodeInfo"}, {"node_id": "bb8df131-75d7-4feb-a496-b145e1c25cc6", "node_type": "1", "metadata": {}, "hash": "32abe25118a3baaceed550191a6aa290daffcef02d0835493b949063d9694a5e", "class_name": "RelatedNodeInfo"}]}, "text": "3. The enemy completely destroyed the city.\n4. The enemy\u2019s destruction of the city was complete .\n5. John likes to \ufb01shon the river bank.\n6. John caught a \ufb01sh.\nAdditionally, some types of verbs do not correspond to any particular action but\nserve a purely grammatical function: these include the auxiliary verbs such as did,\nshall and so on. So in summary, we can often only assign a part of speech to a word\ndepending on its function in context rather than how it relates to real things or\nevents in the world.\nLearning activity\nIdentify parts of speech in these examples:\n1. The cat sat on the mat.\n2. John sat on the chair.\n3. The dog saw the rabbit.\n4. Jack and Jill went up the hill.\n5. The owl and the pussycat went to sea.\n6. The train travelled slowly.\n2.3.3 Constituent structure\nYou will have noticed several recurring patterns in the above examples: Det Noun ,\nPrep Det Noun and so on. You may also have noticed that some types of phrase can\noccur in similar contexts: (Johnjthe cat) sat , aProper Noun or a sequence Det Noun\ncan come before a Verb. Some of these possibilities can be captured using the\npattern-matching notation introduced above, for example:\n(((theja)(catjdog))(JohnjJackjSusan))(barkedjslept)\nThis will match any sequence which ends in a verb barked orslept preceded by\neither a Determiner aorthefollowed by a Noun catordogora proper name John,\nJack orSusan .\nPatterns that have similar distributions (meaning that they can occur in similar\ncontexts) are standardly identi\ufb01ed by phrasal categories such as Noun Phrase orVerb\n14\n\nA closer look at syntax\nPhrase . A common way to represent information about constituent structure is by\nmeans of production rules of the form X!A;B;C::: .", "mimetype": "text/plain", "start_char_idx": 3883, "end_char_idx": 5597, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1e840b1d-d004-4bef-b8d7-b3e8c18e24a5": {"__data__": {"id_": "1e840b1d-d004-4bef-b8d7-b3e8c18e24a5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "471f0d14-6eb0-42cf-9816-a59b40804092", "node_type": "1", "metadata": {}, "hash": "3b9a2b848a54594d712243bebe6cab2ea5cc1645610b0d9f0ada1a9f9eaec44c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "bbffa6d0-1837-4113-b1d6-88c66a801060", "node_type": "1", "metadata": {}, "hash": "f03342bd61794a1ccb4b2c79b84c86066c39273594a19a3d1aebe420c9ce4cf1", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "5259bdf5-5c8a-4d53-8091-f40757bccae3", "node_type": "1", "metadata": {}, "hash": "8e027b7238d66c7812ddacf0ca120c1bb2cfbd80c93911842b866e8e15368775", "class_name": "RelatedNodeInfo"}, {"node_id": "8b015bda-90e9-41c3-ab02-c938c58fb6ff", "node_type": "1", "metadata": {}, "hash": "ec68bbc5375abd77a9c3265c92a6d6dab59432746759550b020bff19e199b309", "class_name": "RelatedNodeInfo"}, {"node_id": "86e24653-2bc6-4c23-9e68-cac4d9860fc5", "node_type": "1", "metadata": {}, "hash": "8c1aa6fc3c1c8add70b503fb107d330353db77872d6e942cf923a2d74b99f2b4", "class_name": "RelatedNodeInfo"}, {"node_id": "f19bc2b5-0c7e-4ae6-937a-2ee3992c4c44", "node_type": "1", "metadata": {}, "hash": "b1706244cd1c798c1cb0c97ec6f6460cfc82d77d0a8a68bc861ab38748ba4ada", "class_name": "RelatedNodeInfo"}, {"node_id": "403368a7-2415-49ec-994d-76585cfb4e8f", "node_type": "1", "metadata": {}, "hash": "4564d78df917ea21df5efd409c6353dea509631f49ac8685ce6824f17dc5d98f", "class_name": "RelatedNodeInfo"}]}, "text": "Using rules of this form,\ngrammatical sentences can be broken down into constituent phrases consisting of\nvarious combinations of POS:\nSentence!Noun Phrase, Verb Phrase\nNoun Phrase!Determiner, Noun ( Example: the, dog)\nNoun Phrase!Proper Noun ( Example: Jack)\nNoun Phrase!Noun Phrase, Conj, Noun Phrase ( Examples: Jack and Jill, the owl and the pussycat)\nVerb Phrase!Verb, Noun Phrase ( Example: saw the rabbit)\nVerb Phrase!Verb, Preposition, Noun Phrase ( Examples: went up the hill, sat on the mat)\nLearning activity\nRead through the recommended sections of the UCL \u2018Internet Grammar of English\u2019. Write production rules\nthat cover some of the examples in these sections.\n2.4 A closer look at syntax\nThis section aims to motivate the idea that texts can be analysed as hierarchical\nstructures rather than \u2018\ufb02at\u2019 sequences whose elements are organised in various\npatterns. The Essential reading for this chapter by Steven Pinker gives a concise and\naccessible introduction to some fundamental distinctions we will make in this\nsection, from the point of view of Chomskyan linguistics (compare Chomsky,\n1957/2002). Chomsky and his followers argue that some components of our\nknowledge of language are innate, and Pinker (2007, chapter 4) sketches some\narguments in support of this claim. This position is considered to be contentious by\nmany linguists and we will not address it in this course. However, Pinker\u2019s chapter\nprovides a useful introduction to syntactic analysis and clearly distinguishes between\ntwo formal techniques for modelling grammatical knowledge, which underlie\nregular andcontext-free grammars respectively (these terms will be explained as\nwe go along).\nLearning activity\nIf you have access to it, read through the recommended chapter by Pinker and make notes, and have it to\nhand while working through the remainder of this section.\nPinker notes that language makes \u2018in\ufb01nite use of \ufb01nite means\u2019, in Humboldt\u2019s\nphrase1. That is, there is no principled upper limit to the length of a grammatical\nsentence: we can always add another phrase, even if it\u2019s a banal one like \u2018one could\nsay that\u2019, \u2018and that\u2019s a fact\u2019 or \u2018and you can tell that to the Marines\u2019.", "mimetype": "text/plain", "start_char_idx": 5598, "end_char_idx": 7772, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e483f6e7-c8cd-4cc5-88fd-128fac2f4344": {"__data__": {"id_": "e483f6e7-c8cd-4cc5-88fd-128fac2f4344", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1e840b1d-d004-4bef-b8d7-b3e8c18e24a5", "node_type": "1", "metadata": {}, "hash": "1bc29fe514ee289d8322444be9cebc694f50d2660962fab127cf23f604bd8221", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "bbffa6d0-1837-4113-b1d6-88c66a801060", "node_type": "1", "metadata": {}, "hash": "f03342bd61794a1ccb4b2c79b84c86066c39273594a19a3d1aebe420c9ce4cf1", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "6e49e5fa-9a4e-48ca-823d-7d8cc9f1d32d", "node_type": "1", "metadata": {}, "hash": "9e355dcd99cf72a9ca3457b0571ac39ec8201b386973ab0021c21b9c977a96b6", "class_name": "RelatedNodeInfo"}]}, "text": "A large\n1\u2018Sie [die Sprache] muss daher von endlichen Mitteln einen unendlichen Gebrauch machen\u2019 (von Hum-\nboldt, 1836, p. 122).\n15\n\nCO3354 Introduction to natural language processing\nproportion, perhaps most of the sentences we read, hear or speak every day may be\nentirely novel, at least to us.", "mimetype": "text/plain", "start_char_idx": 7773, "end_char_idx": 8069, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4735e27b-8cdd-4d13-999a-53a4a9b63e9b": {"__data__": {"id_": "4735e27b-8cdd-4d13-999a-53a4a9b63e9b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "cacf6547-8f7e-4073-a27c-8f29e73f193a", "node_type": "1", "metadata": {}, "hash": "56601d4d3509279d0de8be501e3c33b7c35f95ee6c1480f5bccda2aba9ca4865", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "86247504-f35f-4815-b90d-15724fdf2818", "node_type": "1", "metadata": {}, "hash": "a6834073e8eaf4f32de200c0475eb9e252a1d1b73d80d8b3f760f36a4e0b00ea", "class_name": "RelatedNodeInfo"}, {"node_id": "6c32c346-1a71-4aae-aa9b-5e79d4a44bbe", "node_type": "1", "metadata": {}, "hash": "2e247eee8b91c715482978afce220ac2547161a7fce440c0b2a3898986a505ed", "class_name": "RelatedNodeInfo"}, {"node_id": "1bc3c084-6786-4408-bc4a-707a37147411", "node_type": "1", "metadata": {}, "hash": "79af4c5199dc78df731a9757ca60ae20278f507caa39544130505db6c14a92a8", "class_name": "RelatedNodeInfo"}, {"node_id": "a4d224a7-8779-4f00-92f3-67fab5c0f57d", "node_type": "1", "metadata": {}, "hash": "2d3b5846b539eb49b71a2c64f5e6c78d9eaa0f9facb2a88c42bcf308b9a8d74c", "class_name": "RelatedNodeInfo"}, {"node_id": "1ffe2f44-9a64-45d7-94d1-e5e35f2aa788", "node_type": "1", "metadata": {}, "hash": "7993720092f4c861f01d072b12563427d2d84c1b10a20ccd4f4c6101bbfdf3d3", "class_name": "RelatedNodeInfo"}]}, "text": "Consequently, knowledge of a language seems to\nconsist in knowing rules that specify what sentences belong to the language, rather\nthan memorising long lists of sentences to be produced on appropriate occasions.\nPinker considers two different formal systems for generating or recognising\nsentences in English:\n\u2018wordchain\u2019 devices, equivalent to \ufb01nite state machines. These devices\nincorporate three distinct operations: sequence ,selection anditeration .\nPhrase structure grammars, which include the additional operation of recursion .\nNote that Pinker deliberately uses the more descriptive expression \u2018wordchain\u2019 as he\nis concerned to avoid the use of forbidding technical terminology. In what follows\nwe will stick to the standard term \ufb01nite-state machine which you are more likely to\n\ufb01nd in textbooks. You may also encounter the terms \ufb01nite-state automaton or just\n\ufb01nite automaton .\n2.4.1 Operation of a \ufb01nite-state machine\nA wordchain device or \ufb01nite-state machine (FSM) can be seen as a set of lists of\nsymbols (such as words or \ufb01xed phrases) and rules for going from list to list. A\nsimple example:\nWord lists\n1. The, a, one\n2. Cat, dog, \ufb01sh\n3. Barked, slept, swam\nRules\nIt is important to keep in mind that FSMs are neutral between accepting and\ngenerating strings. That is to say, one way to operate a FSM is to read a string, one\nsymbol at a time, and determine whether the symbol is found in the list at the\ncurrent state of the machine. If it is, we advance to the next state and read the next\nsymbol. Alternatively, this FSM could be used to generate strings by picking one\nword from each list in sequence. Some possible matching strings are:\nThe dog swam\nA cat barked\nA \ufb01sh slept\n. . .\nA more complex example:\n1.John/Mary/Fred OR\n1a.the/a/one\n1b.cat/dog/\ufb01sh\n16\n\nA closer look at syntax\n2. (optional): and/or GO TO 1\n3.slept/barked/swam OR\n3a.sat/walked\n3b.on\n3c.a/the\n3d.mat/hill\n4.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1896, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "67c202fa-af61-477f-8edc-b4ec0a297225": {"__data__": {"id_": "67c202fa-af61-477f-8edc-b4ec0a297225", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4735e27b-8cdd-4d13-999a-53a4a9b63e9b", "node_type": "1", "metadata": {}, "hash": "5a9da08b6c0dd122a1c32c70d8a38b0e52a7a590fa80a0beef4fde41958073b6", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "cacf6547-8f7e-4073-a27c-8f29e73f193a", "node_type": "1", "metadata": {}, "hash": "56601d4d3509279d0de8be501e3c33b7c35f95ee6c1480f5bccda2aba9ca4865", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "4774d2f4-7a1d-430e-80fc-d7d1a533c6e4", "node_type": "1", "metadata": {}, "hash": "465a7d91468de22174435666c19c30482da01536c1d0978cb099ffb525bfe72c", "class_name": "RelatedNodeInfo"}, {"node_id": "671c6db6-989a-4d6c-ba8d-813f1cf28d43", "node_type": "1", "metadata": {}, "hash": "45ecd1bf829ae80156d2d3b017067b02d64276b421d2255177de84ebc0bc0fdb", "class_name": "RelatedNodeInfo"}, {"node_id": "8f3695c2-c2c6-45df-9d4a-eb3d9fc42145", "node_type": "1", "metadata": {}, "hash": "3b0c28499afc1a0d582a145cc51b3717a4f81185cfe3f07b20d0ef88c90f4c4c", "class_name": "RelatedNodeInfo"}, {"node_id": "f5652d7b-099e-488d-b3bd-b535717b8d11", "node_type": "1", "metadata": {}, "hash": "b5081bb21288ecec5634f3d88f15e214c074cacf38647b674c1e8f8301437588", "class_name": "RelatedNodeInfo"}, {"node_id": "7e2dd0f7-0710-4a9c-ae47-f678af2db31c", "node_type": "1", "metadata": {}, "hash": "3d99793642d606f689d55833464a1f7abfb66a1dc94404344bf342fcdd0e5a13", "class_name": "RelatedNodeInfo"}]}, "text": "(optional) and/or GO TO 3\n5. (optional) and/or/but GO TO 1 .\nThis formulation involves the basic operations of sequence, selection and iteration as\nfollows:\nSEQUENCE\nMoving from list to list in numerical order: 1, 2, 3 . . .\nSELECTION\nChoosing an item from a list, for example cat,dogor\ufb01sh; choosing between lists.\nITERATION\nRepeating particular sequences, for example:\nJohn and Mary or a \ufb01sh (repeats step 1.)\nThe cat barked but Fred walked on the hill. (Repeats steps 1\u20135, omitting step 4.)\nLearning activity\n1. Find the shortest sentence generated or accepted by the above FSM.\n2. Write out four sentences between six and 20 words long which are accepted by the FSM.\n2.4.2 Representing \ufb01nite-state machines\nThere are various conventional ways of representing a non-deterministic FSM in\nterms of a number of states and the permissible transitions between states. In our\ninformal exposition above, the numbered steps represent states and each symbol or\nword in a list counts as a possible transition to the next state. Pinker adopts a\ngraphical convention where states are depicted as nodes in a graph and transitions\nare directed, labelled arcs between the nodes; see also Partee et al. (1990, p. 457\nand following). Alternatively, the states and transitions can be shown in tabular form\nas in Table 2.1 where q1is the initial state and q4the \ufb01nal state:\n17\n\nCO3354 Introduction to natural language processing\nq1 john q2\nq1 mary q2\nq1 the q1a\nq1 a q1a\nq1a cat q2\nq1a dog q2\nq2 slept q3\nq2 barked q3\nq2 swam q3\nq3 and q1\nq3 or q1\nq3 . q4\nTable 2.1: A \ufb01nite-state machine represented as a state-transition table.\n2.4.3 Declarative alternatives to \ufb01nite-state machines\nThe FSMs shown above combine a formal speci\ufb01cation of a language with a\nprocessing strategy.", "mimetype": "text/plain", "start_char_idx": 1897, "end_char_idx": 3657, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b3a1ad44-d0df-403a-a8a6-296508bf145e": {"__data__": {"id_": "b3a1ad44-d0df-403a-a8a6-296508bf145e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "67c202fa-af61-477f-8edc-b4ec0a297225", "node_type": "1", "metadata": {}, "hash": "7e538b934cfde5d78eaf36667496764f9c31efa06c905573cd9bc167c03a0cfa", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "cacf6547-8f7e-4073-a27c-8f29e73f193a", "node_type": "1", "metadata": {}, "hash": "56601d4d3509279d0de8be501e3c33b7c35f95ee6c1480f5bccda2aba9ca4865", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "5d281fb2-c324-4701-a337-8240cb7822e7", "node_type": "1", "metadata": {}, "hash": "241ae51683730b184ba7531150a7001e7d436e4d10a96144d9b4fca2a08dc020", "class_name": "RelatedNodeInfo"}, {"node_id": "fd1b1502-9383-41ca-b597-4e9a41308d2d", "node_type": "1", "metadata": {}, "hash": "47d05ea16e94f827dd42fec50f91ebf268bb9eb3fa4e6cdf949b196216976b4e", "class_name": "RelatedNodeInfo"}, {"node_id": "81052675-e1c4-4182-880e-2aafe5249b0e", "node_type": "1", "metadata": {}, "hash": "aa937223ec23d1080d2ca1d16c5756f8bdcd86b6dbf699387e9f12c9047fe062", "class_name": "RelatedNodeInfo"}, {"node_id": "872fc097-e9f2-4f05-a136-f2f6c5567d28", "node_type": "1", "metadata": {}, "hash": "c11d301cac4883782db110edeafdd76fa7677240779a63146d4471750ba05c63", "class_name": "RelatedNodeInfo"}]}, "text": "It is often convenient to separate the two and de\ufb01ne the\nlanguage using expressions from a declarative formalism which can be manipulated\nusing various different algorithms. This section considers two such formalisms:\nregular expressions andregular grammars .\nRegular expressions (REs) provide a simple but powerful means of identifying\npatterns in text and are widely used in various applications of computer science. REs\nare based on three fundamental concepts which as we have seen are characteristic of\n\ufb01nite-state machines:\nsequence \u2013 to do with the order in which items occur: may include a wildcard\ncharacter which is written as the period or full stop \u2018.\u2019 and may be replaced by\nany character.\nselection \u2013 specifying a choice between alternative items or sequences, indicated by\nthe \u2018j\u2019 operator\niteration \u2013 repetition of items or sequences, indicated by the \u2018*\u2019 operator, meaning\nzero or more occurrences of whatever precedes the star.\nSome simple examples:\na*matches sequences of zero or more a\u2019s:a,aaaa ,aaaaaaaaaaa and so on. A\nsequence of zero elements is known as the \u2018empty string\u2019 and conventionally\ndenoted by the Greek letter epsilon or\u000f.\naa* sequences of one or more a\u2019s\nab* sequences of one afollowed by zero or more b\u2019s:a,ab,abbbb , . . .\n(ab)* sequences of zero or more pairs ab:\u000f,ab,abab ,ababab . . .\n(ab)j(ba) ab orba\n((ab)j(ba))* possibly empty sequences of abandbapairs:\u000f,ab,abab ,baab ,\nbababa ,abba . . . Note that parentheses operate in the usual manner as in\nmathematical or logical expressions, to denote the scope of operators.\nb.*a all strings that start with band end with a:ba,bbbaaaa ,bcccccccca . . .", "mimetype": "text/plain", "start_char_idx": 3658, "end_char_idx": 5296, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1ca2d322-aa94-4004-9761-cea3350d9aa0": {"__data__": {"id_": "1ca2d322-aa94-4004-9761-cea3350d9aa0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b3a1ad44-d0df-403a-a8a6-296508bf145e", "node_type": "1", "metadata": {}, "hash": "13e353d16e9c41ad3710c208d22361d6c49f5a6787511c6cf0a575c8cd33eddb", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "cacf6547-8f7e-4073-a27c-8f29e73f193a", "node_type": "1", "metadata": {}, "hash": "56601d4d3509279d0de8be501e3c33b7c35f95ee6c1480f5bccda2aba9ca4865", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "3fe385e7-def3-453f-92a1-0930a281e0c5", "node_type": "1", "metadata": {}, "hash": "476951c62ab756d42db8d6f9169d1a011376389efee5d4faf928b6f1545c89dc", "class_name": "RelatedNodeInfo"}, {"node_id": "6f193061-b494-4f7e-947f-f5a9b649aff7", "node_type": "1", "metadata": {}, "hash": "57c7fa11433d780151e798268be65cef36fb07e19b61bf8483e1a072cee811d9", "class_name": "RelatedNodeInfo"}, {"node_id": "70af6a8f-207d-45b5-958a-37a61f1089e2", "node_type": "1", "metadata": {}, "hash": "83c0febd08cffaa93a29a14f3b578933cfa03239ba90bb925fce7578872e555a", "class_name": "RelatedNodeInfo"}, {"node_id": "8beb6183-79ce-4665-815c-3e730e9b4b35", "node_type": "1", "metadata": {}, "hash": "b84296581397cb5242641a04fe1c34201cdfd5aad843b8f0f3fddbed413f56f4", "class_name": "RelatedNodeInfo"}, {"node_id": "29cbfbad-6e66-467d-aa95-21513953c63c", "node_type": "1", "metadata": {}, "hash": "6fcf282232a8393af199a1b93da0816e397cecbcd6ccea9b5f1f980ac8c3a789", "class_name": "RelatedNodeInfo"}]}, "text": ". .\n18\n\nA closer look at syntax\nProgramming languages such as Java, Perl and Python implement extensions of REs\nwith operators which are mostly redundant in that they can be reduced to\ncombinations of the above operations, but can make programs much more compact\nand readable, including:\n+\u2013 one or more of the previous item\n?\u2013 the previous item is optional\n[A-Z], [0-9] \u2013 this expression matches one of a range of characters\n\u02c6abc \u2013 matches pattern abcat the start of a string\nabc$ \u2013 matches pattern abcat the end of a string.\nSee also Bird et al. (2009, Table 3.3) and the other recommended readings on this\ntopic.\nHere are some examples of our suggested ways of recognising personal names coded\nas regular expressions. These are intended to be applied to tokenised text and every\nsequence enclosed by angled brackets <:::> stands for an individual token. In\nExamples 1, 3 and 4 below, the material within parentheses represents the target\nstring and sequences outside parentheses provide the context.\n1.<Mrs?>(<.+>) matches \u2018Mr\u2019 or \u2018Mrs\u2019 followed by any string. The \ufb01rst token\nconsists of the sequence Mrfollowed optionally by the character s. The second\nconsists of a sequence of one or more characters: any character may occur in\nplace of the wildcard \u2018.\u2019.\n2.<[A-Z][a-z]+ >+ matches any sequence of one or more capitalised words.\n3. (<[A-Z][a-z]+ >+)<,><[0-9]+>matches capitalised word(s) followed by a\ncomma and a number (age).\n4. (<[A-Z][a-z]+ >+)<saidjreportedjclaimed>.\nLearning activity\n1. Write a regular expression for all strings consisting of an odd number of a\u2019s followed by an even\nnumber of b\u2019s.\n2. Write a regular expression for all sequences of a\u2019s and b\u2019s of length 3.\n3. Write a regular expression for all strings that contain abba somewhere within them.\nAs you have probably observed, the pattern-matching notation we used in section\n2.3 employed a subset of the RE syntax, and we could in principle use regular\nexpressions to encode simple grammars as presented in that section.", "mimetype": "text/plain", "start_char_idx": 5293, "end_char_idx": 7292, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5427e50c-c0d5-47ab-843d-455abb2954c3": {"__data__": {"id_": "5427e50c-c0d5-47ab-843d-455abb2954c3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1ca2d322-aa94-4004-9761-cea3350d9aa0", "node_type": "1", "metadata": {}, "hash": "269f21e66baf08f88e8d328c9980b6b72955224c62a7013e63ff9f9f7db2ca17", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "cacf6547-8f7e-4073-a27c-8f29e73f193a", "node_type": "1", "metadata": {}, "hash": "56601d4d3509279d0de8be501e3c33b7c35f95ee6c1480f5bccda2aba9ca4865", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "a702ded8-e037-4848-a285-e54b1847e555", "node_type": "1", "metadata": {}, "hash": "ce8f059d8bc5109badb6885004452be574830beb1ab7de904d3a894f19902c65", "class_name": "RelatedNodeInfo"}]}, "text": "For example:\n( (JohnjMaryjFred)j( (theja)(catjdogj\ufb01sh) )\n(barkedjsleptjswam)\n((andjor) (barkedjsleptjswam))*\nmatches sentences like:\n1. John slept\n2. The cat barked or swam\n3. Mary swam and barked or slept\n19\n\nCO3354 Introduction to natural language processing\n4. . . .\nIt can be seen that even conceptually simple REs can rapidly become almost\nunreadable.", "mimetype": "text/plain", "start_char_idx": 7293, "end_char_idx": 7649, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "46c06b8b-f6e7-4470-86dc-f4c7fe815a21": {"__data__": {"id_": "46c06b8b-f6e7-4470-86dc-f4c7fe815a21", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "82067e65-e783-43d3-bc7a-ce05b4b00d0d", "node_type": "1", "metadata": {}, "hash": "dc7b7a20c600cf458523ac1a4aec075d93445ee9406b5e16690cef21ad29f033", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "5dc9b70d-b063-4af6-9863-ca2b6dccc113", "node_type": "1", "metadata": {}, "hash": "a477f64ff98882c766429a16e31e28fb3b60fc8f17e9c284b80e218cf8edc0f7", "class_name": "RelatedNodeInfo"}, {"node_id": "7c2ba3e2-47ea-4554-b721-9af4cdd285e0", "node_type": "1", "metadata": {}, "hash": "2ce52e54d5f75387bc5b81adb588a6aad490615661745bb05ff9a191dcb1444a", "class_name": "RelatedNodeInfo"}, {"node_id": "36933eab-897a-4425-8eed-6d28bb6b3316", "node_type": "1", "metadata": {}, "hash": "c387ee31f07ae37203bfc4273ca100ba0bdc6c535fea98e002a0634eb636c207", "class_name": "RelatedNodeInfo"}, {"node_id": "87293727-9af4-4642-bdba-a7c88ee9644e", "node_type": "1", "metadata": {}, "hash": "0132f0dc9f9d7d5c8ba5dfac09fe5dec421ca275160fcf4305a58c18e5c0770e", "class_name": "RelatedNodeInfo"}, {"node_id": "6e4bf59b-c6b1-43a8-9fd7-7c43c0c0ecee", "node_type": "1", "metadata": {}, "hash": "f1b028ce05ca705d90b513b0c4c831c1381d961e05ba785e7b9a91fc96366150", "class_name": "RelatedNodeInfo"}, {"node_id": "93ad73da-b930-4bbb-8070-f5d2a27a8388", "node_type": "1", "metadata": {}, "hash": "d71cc5c29a7dd8a10f3a0501e1e94064a101a26d1f008bbd95c456d58c3b5dbd", "class_name": "RelatedNodeInfo"}]}, "text": "It can be seen that even conceptually simple REs can rapidly become almost\nunreadable. A more manageable formalism is a regular grammar , made up of\nproduction rules or rewrite rules of the kind you have seen in the previous section:\nS!JohnjMaryjFred VP\nS!theja S1\nS1!catjdogj\ufb01sh VP\nVP!barkedjsleptjswam VP1\nVP1!andjor VP\nVP1!\u000f\nA sequence of words forms a grammatical sentence according to a grammar of this\ntype if one can draw a tree diagram like Figure 2.1 such that:\n1. The root node is SorSentence .\n2. For every node that matches the left hand side (LHS) of a grammar rule, one can\ndraw a subtree with the items on the right hand side (RHS) as daughter nodes.\n3. When no more grammar rules can be applied, every leaf node of the tree\nmatches a word in the language or the empty string \u000f.\nS\ntheS1\ncatVP\nbarkedVP1\norVP\nswamVP1\n\u000f\nFigure 2.1: A right-branching tree.\nSymbols which only occur on the right-hand side of rules, and so can only appear as\nleaf-nodes in a tree, are known as terminal symbols . Regular grammars have the\nrestriction that when non-terminal symbols appear on the RHS they must either\nalways be the rightmost symbol, or always the leftmost. These classes of grammars\nare known as right-linear andleft-linear respectively. A right-linear grammar will\nalways result in a right-branching tree as in the above example.\n20\n\nA closer look at syntax\nLearning activity\nDraw tree diagrams according to the above grammar for the sentences:\n1. The dog slept.\n2. Mary swam and barked or slept.\n2.4.4 Limitations of \ufb01nite-state methods \u2013 introducing context-free grammars\nPinker (2007, p.86) gives an example of a \u2018wordchain device\u2019 or FSM which is\nintended to show the limitations of \ufb01nite-state methods for handling natural\nlanguage. The procedure is apparently designed to deal with complex sentences\nincluding constructions like If. . . then. . . andEither. . . or . .", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1885, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "83bff032-4712-45a6-8a31-ba9c65fa698b": {"__data__": {"id_": "83bff032-4712-45a6-8a31-ba9c65fa698b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "46c06b8b-f6e7-4470-86dc-f4c7fe815a21", "node_type": "1", "metadata": {}, "hash": "4acc9b66afa8fce868817561f2f574f602de3e07a4c0ab80015768e8aee8f930", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "82067e65-e783-43d3-bc7a-ce05b4b00d0d", "node_type": "1", "metadata": {}, "hash": "dc7b7a20c600cf458523ac1a4aec075d93445ee9406b5e16690cef21ad29f033", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "17a433fa-2bdd-4738-9c48-0849bf149dc4", "node_type": "1", "metadata": {}, "hash": "9c016b5909cb50c2ea35d8537f9aba1ee0879e46fb81bb1562d7f4c197291417", "class_name": "RelatedNodeInfo"}, {"node_id": "2a017a14-2970-435d-83c2-eb867607a3e8", "node_type": "1", "metadata": {}, "hash": "dd0b52e6c9f0c4e09883d3e23254b969d9aa383841cc59fd681f6c062c2ed0f0", "class_name": "RelatedNodeInfo"}, {"node_id": "f1a413f3-f983-42f6-b543-dc49d1f90d3e", "node_type": "1", "metadata": {}, "hash": "d11587920a5506581224ddf0bfa1f0bbaab707f50cdf11b931cefce3d11b9b8a", "class_name": "RelatedNodeInfo"}, {"node_id": "9af72bcf-7b43-42d6-8cbb-d4b0d789b696", "node_type": "1", "metadata": {}, "hash": "81aa283b475cd0df15e225e795dc89512ec64b3170ed8e70cc053531a21bbc6b", "class_name": "RelatedNodeInfo"}]}, "text": "then. . . andEither. . . or . . . . If we look at a few\npossible matching strings, we see clearly that some are grammatical sentences but\nothers are nonsensical. (Following a standard convention in linguistics, the\nunacceptable cases are marked with an asterisk \u2018*\u2019.)\nEither a happy girl eats ice cream or the boy eats hot dogs.\n*Either a happy girl eats ice cream then one dog eats candy.\nIf a girl eats ice cream then the boy eats candy.\n*If a girl eats ice cream or the boy eats candy.\nLearning activity\n1. Write a regular grammar that is equivalent to the FSM in Pinker (2007, p. 86).\n2. Convince yourself that it allows you to draw well-formed trees for the ungrammatical examples above.\n3. What characteristic of the grammar prevents it from ruling out the ill-formed examples?\nSee \u2018Answers to Activities\u2019 in Appendix C (p. 98) for further discussion.\nIn order to handle these kinds of sentences correctly we need to add new kinds of\nrewrite rules, going beyond the class of right- or left-linear grammars:\n1. To match pairs of words like if . . . then ,either . . . or , we need rules where a\nnon-terminal symbol on the RHS can have additional material on both sides as\nin the \ufb01rst two rules below.\n2. In order to allow for inde\ufb01nite nesting \u2013 if either John will come if Mary does, or\n. . .we need rules where the same symbol can occur on both sides of the arrow.\nThis is known as self-embedding orcentre-embedding .\nNote that centre-embedding is an instance of recursion in grammar; right-linear\ngrammars may also include recursive rules but they can always be processed\niteratively rather than recursively (Jurafsky and Martin, 2009, p. 447).", "mimetype": "text/plain", "start_char_idx": 1854, "end_char_idx": 3506, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "aeced65f-b145-4940-ab80-ede84f1c5d67": {"__data__": {"id_": "aeced65f-b145-4940-ab80-ede84f1c5d67", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "83bff032-4712-45a6-8a31-ba9c65fa698b", "node_type": "1", "metadata": {}, "hash": "41d9739c35b957d659800e6de08200b62985682eed784df6424e21d306615785", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "82067e65-e783-43d3-bc7a-ce05b4b00d0d", "node_type": "1", "metadata": {}, "hash": "dc7b7a20c600cf458523ac1a4aec075d93445ee9406b5e16690cef21ad29f033", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "5240c364-7eee-4d6a-babf-bc1aa82c208d", "node_type": "1", "metadata": {}, "hash": "28ff200815e64473d9aa5bcaa711452525a0f9ac746cb0622870514f7c8a4761", "class_name": "RelatedNodeInfo"}, {"node_id": "2ac7b8d8-3e28-47e0-adc2-ae9ffe25e0b9", "node_type": "1", "metadata": {}, "hash": "04a952b5458a3d36de87ba14648a53bdcbcc271a3e58b27c56ba4fe7aadda36e", "class_name": "RelatedNodeInfo"}, {"node_id": "efb12073-71ce-42d8-a661-43a9af6c1f77", "node_type": "1", "metadata": {}, "hash": "aa908748e6af0d772ed662a632ba0c2363278dbd295232b43f471e56d29f6a90", "class_name": "RelatedNodeInfo"}, {"node_id": "8556518f-caba-4ca7-b8eb-c8ce3cd43b11", "node_type": "1", "metadata": {}, "hash": "b57b387f5cca7be2552b2b3afd8fe716e5a31f5b96c6d416ac59d42bbd3b8aa7", "class_name": "RelatedNodeInfo"}, {"node_id": "c3a52247-2019-4de7-b58b-5ed8bf86d911", "node_type": "1", "metadata": {}, "hash": "052a44b34635d058040a716ca5c7c4388a4c4285397e5016380367785b893c0b", "class_name": "RelatedNodeInfo"}, {"node_id": "dd0717a7-018c-4692-9358-162d94e2c4fb", "node_type": "1", "metadata": {}, "hash": "74e23f3ba0db4ad45cefe6ad1f9867b0b29bb8f1b91ce2273fced2aa7005fe76", "class_name": "RelatedNodeInfo"}]}, "text": "447).\n21\n\nCO3354 Introduction to natural language processing\nS!Either S or S\nS!If S then S\nS!NP VP\nNP!Det N\nDet!ajthej\u000f\nN!girljboyjdogjcatjburgersjcandyjcreamjcake\nVP!V NP\nVP!V PP\nPP!P NP\nV!eatsjlikesjsat\nP!on\nThe above grammar handles these cases correctly as well as simple sentences like\nThe cat sat on the mat :\nS\nNP\nDet\ntheN\ncatVP\nV\nsatPP\nP\nonNP\nDet\ntheN\nmat\nFigure 2.2: Tree diagram for The cat sat on the mat.\nIt is also acceptable to represent trees using labelled bracketed strings as in the\nexample below:\n(S\n(NP (Det the ) (N cat ))\n(VP (V sat )\n(PP\n(P on )\n(NP\n(Det the ) (N mat ) )\n)\n)\n)\n22\n\nA closer look at syntax\nFigure 2.3 is an example of self-embedding.\nS\nIf S\nNP\nDet\ntheN\ncatVP\nV\nlikesNP\nDet\n\u000fN\ncreamthen S\nNP\nDet\ntheN\nboyVP\nV\neatsNP\nDet\n\u000fN\nburgers\nFigure 2.3: Tree diagram with self-embedding.\nLearning activity\n1. Trace through the grammar rules and satisfy yourself that Figure 2.3 represents the structure of the\nsentence If the cat likes cream then the boy eats burgers according to the grammar.\n2. What is the shortest sentence generated by the above grammar?\n3. Using the above grammar, draw complete tree diagrams for:\n(a) If the girl likes cake then either the boy eats burgers or the boy eats candy.\n(b) If either the boy likes cake or the girl likes burgers then the dog eats candy.\n4. Think of ways to modify the grammar to generate more natural-sounding sentences.\n2.4.5 Looking ahead: some further uses of regular expressions\nIn this chapter we have so far looked at \ufb01nite-state formalisms as techniques for\ngenerating or recognising short phrases as well as whole sentences, and found them\nto be wanting.", "mimetype": "text/plain", "start_char_idx": 3501, "end_char_idx": 5140, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cddeb800-4135-4ae7-b951-9c90c2298dee": {"__data__": {"id_": "cddeb800-4135-4ae7-b951-9c90c2298dee", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aeced65f-b145-4940-ab80-ede84f1c5d67", "node_type": "1", "metadata": {}, "hash": "fc8f39becf40de4706395c99b6110aba5771da619b6555979a56a93912cda787", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "82067e65-e783-43d3-bc7a-ce05b4b00d0d", "node_type": "1", "metadata": {}, "hash": "dc7b7a20c600cf458523ac1a4aec075d93445ee9406b5e16690cef21ad29f033", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "b3b5f4a2-db02-4456-b175-1f2ddcd3be3b", "node_type": "1", "metadata": {}, "hash": "bcbae901106e3ae1778bae040adcc6ff19781dfcf8de82c7bf1675797b08f7a0", "class_name": "RelatedNodeInfo"}, {"node_id": "c69a266f-c626-4d99-83bd-ff09fcc1b0b9", "node_type": "1", "metadata": {}, "hash": "240a403fa539e5b018b8dca334faaae9d86757486508a310f1dceee57032075a", "class_name": "RelatedNodeInfo"}, {"node_id": "013a9a2c-ecea-43fa-b052-c494c5e29610", "node_type": "1", "metadata": {}, "hash": "aefaa31ee337019a4683670e827cc416beff30fc24631ec75536c4f7f0153fa5", "class_name": "RelatedNodeInfo"}, {"node_id": "3823b176-c3be-4141-8053-5479b17665ab", "node_type": "1", "metadata": {}, "hash": "7e7b4133b1c0f5baf825505a087b7b88bd66333cc3dcabbfc5acdd0b46393564", "class_name": "RelatedNodeInfo"}, {"node_id": "fc1a3efe-3115-4395-9f08-0ae732f9b52d", "node_type": "1", "metadata": {}, "hash": "59009fc8800197b68ad9e058e9c07aa47189b1b02dfb5ae24d96b0abdcb13ee2", "class_name": "RelatedNodeInfo"}, {"node_id": "d201cd31-b22d-4bc0-8356-60e87cee5f7e", "node_type": "1", "metadata": {}, "hash": "d0242e483f5fd619ecbdc9a9f687853bb105f7d6dd1bd34a35fb965c48e83b36", "class_name": "RelatedNodeInfo"}]}, "text": "Many current applications in language technology do not, in fact,\nrequire complete analysis of sentences but proceed by looking for patterns of interest\nwithin a text and discarding what does not match these patterns. Finite-state\nmethods are often quite adequate for these applications and you will see many uses\nfor regular expressions in later chapters of this guide. Some examples we will look at\nin more detail in later chapters are:\nstemming: extracting the \u2018base form\u2019 of a word as informally presented in\nsection 2.5 of this chapter\ntagging: automatically assigning POS or other forms of mark-up to elements in a\ntext\nchunking: grouping together a sequence of words as a phrase\ninformation extraction: identifying chunks that denote meaningful entities,\nevents or other items of interest.\n23\n\nCO3354 Introduction to natural language processing\n2.4.6 Looking ahead: grammars and parsing\nThe pseudocode and graphical representations of wordchains (FSMs) combine a\nspeci\ufb01cation of the well-formed sentences in a language fragment with a processing\nstrategy. It is important to keep in mind that formal grammars made up of a series of\nproduction rules do notencode a processing strategy. As stated above, a grammar is\na declarative speci\ufb01cation of the strings that make up a language while parsers use a\nvariety of algorithms to apply the grammar rules. We will look at some of these\nparsing strategies in Chapter 6 of this subject guide.\n2.5 Word structure\nWords combine in different orders to form sentences and phrases; they also have\ninternal structure. Nouns in English may have different endings according to\nwhether they are singular ( a box ) or plural ( some boxes ) while in some languages\nthis information may be expressed at the start of the word, for example Swahili ziwa\n(\u2018lake\u2019) vs maziwa (\u2018lakes\u2019). In English, endings of verbs can indicate person, number,\ntense and mood2, while other languages may make different dictinctions. Nouns and\nverbs are sometimes classi\ufb01ed as regular or irregular according to whether their\nin\ufb02ected forms can be derived by following simple rules. Table 2.2 shows examples\nof some common past tense forms in English.", "mimetype": "text/plain", "start_char_idx": 5141, "end_char_idx": 7306, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ad41c290-bd3e-4411-8ac2-5560c265bad6": {"__data__": {"id_": "ad41c290-bd3e-4411-8ac2-5560c265bad6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cddeb800-4135-4ae7-b951-9c90c2298dee", "node_type": "1", "metadata": {}, "hash": "2e0a79bc50f2be4edc289a608024caa78f87e5e3eac840fad1c804db4b74979a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "82067e65-e783-43d3-bc7a-ce05b4b00d0d", "node_type": "1", "metadata": {}, "hash": "dc7b7a20c600cf458523ac1a4aec075d93445ee9406b5e16690cef21ad29f033", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "66dd77ed-ce7b-4d16-93e3-549e5294de97", "node_type": "1", "metadata": {}, "hash": "8079a94164f22f4343555f03835c3f09b582dceeb7c6b05d110e9414f979ea74", "class_name": "RelatedNodeInfo"}, {"node_id": "152ca561-b08e-430d-860c-3cc77f75e06b", "node_type": "1", "metadata": {}, "hash": "205acfb386f396e0f86bbc8d932802393a0bfa223a1c773f63d49f524fc840c8", "class_name": "RelatedNodeInfo"}]}, "text": "Table 2.2 shows examples\nof some common past tense forms in English.\nPresent Past\nbecome became\ncome came\nmistake mistook\nmisunderstand misunderstood\nring rang\nsell sold\nshake shook\nsing sang\nsink sank\nstand stood\ntake took\ntell told\ntravel travelled\nunderstand understood\nwithstand withstood\nTable 2.2: Past tense forms (1).\nThe sub\ufb01eld of linguistics known as morphology is concerned with the structure of\nwords and is concerned, among other things, with formulating rules for deriving\ndifferent forms of a word according to its grammatical role. Here are some rules\nwhich appear to cover the examples in the table:\n2See the Internet Grammar of English at http://www.ucl.ac.uk/internet-grammar/verbs/verbs.htm (last\nvisited 27th May 2013) for explanations of these terms.", "mimetype": "text/plain", "start_char_idx": 7238, "end_char_idx": 8011, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ee009c33-67bd-4d9c-a8aa-a973b3866530": {"__data__": {"id_": "ee009c33-67bd-4d9c-a8aa-a973b3866530", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "1a84b85d-b39c-4ab0-afff-3684dea944b4", "node_type": "1", "metadata": {}, "hash": "344bf28111010b20c930da446ef74d58dbabdbf1e66ac15d3c706f05ed882013", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "9ad32237-b460-4e9f-911c-89782c2afb80", "node_type": "1", "metadata": {}, "hash": "b21b7823f29a4aaf556e328987ec1d81b33df8f291121d7bc7fb5415665b95e0", "class_name": "RelatedNodeInfo"}, {"node_id": "76604b30-b1c0-4490-929a-46fb3ee63b21", "node_type": "1", "metadata": {}, "hash": "909e1c22616a0f57e0d25e7e5c863cbe147f535fd270324dce1642f4d2b231e3", "class_name": "RelatedNodeInfo"}, {"node_id": "0885908d-c248-4e05-8ea8-67859b4b5422", "node_type": "1", "metadata": {}, "hash": "393042cb646ff736280a26931b70da553b01f7d3df201f1da2bdc7ef0691a77e", "class_name": "RelatedNodeInfo"}, {"node_id": "581a7858-6000-4910-abc5-d84bdbd8dc31", "node_type": "1", "metadata": {}, "hash": "b3e01ab22905198c89c2550f065d0158fed227693560ed86abf0c0ff32317465", "class_name": "RelatedNodeInfo"}, {"node_id": "fa8586d2-b9b1-493c-ab65-95dad19173f1", "node_type": "1", "metadata": {}, "hash": "bf010e5ab14e1e7d16c4b1f28cbab0dae9dea08dc3adc5a34530e369837a3399", "class_name": "RelatedNodeInfo"}]}, "text": "24\n\nA brief history of natural language processing\nSome rules for past-tense formation\n-come!-came\n-take!-took\n-ing!-ang\n-ink!-ank\n-ell!-old\n-and!-ood\n-el!-elled\nSome of these rules could be made more general: we could combine the -ingand\n-inkrules to a single rule, -in !-an. On the other hand, some rules which work for\nthese particular examples would fail if applied to a wider range of data: we have\ncome!came ,become!became but not welcome!*welcame . This is an example of\nrules over\ufb01tting the data.\nLearning activity\nModify the above rules so that they will account for the past tense forms in Table 2.3 as well as in Table 2.2.\nPresent Past\nbake baked\ncommand commanded\nbring brought\nsling slung\nsmell smelt\nthink thought\nwake woke\nTable 2.3: Past tense forms (2).\nA natural language application such as a machine translation system will typically\ninclude a database of words or lexicon along with rules for deriving word endings:\nfor example, a translation from English into Dutch might handle the word brought as\nfollows:\n1. Find the stem of brought and interpret the in\ufb02ection: bring +past\n2. Find the Dutch equivalent of bring :brengen\n3. Find the past tense of brengen :bracht\nThe process of removing af\ufb01xes from words to derive the basic form is called\nstemming . We will look at some tools for doing this in Chapter 4, and you will also\nhave the opportunity to encode your own rules as regular expressions.\n2.6 A brief history of natural language processing\nThe \ufb01eld of natural language processing or computational linguistics builds on\ntechniques and insights from a number of different disciplines, principally\n25\n\nCO3354 Introduction to natural language processing\ntheoretical linguistics and computer science but with some input from mathematical\nlogic and psychology.\nThe notions of a \ufb01nite-state machine and context-free grammar (CFG) were \ufb01rst\nintroduced to linguistics by Chomsky (1957; see Pullum (2011) for a somewhat\ncritical reappraisal).", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1964, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a55c8c92-8ade-40a1-a42f-f008eda9d766": {"__data__": {"id_": "a55c8c92-8ade-40a1-a42f-f008eda9d766", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ee009c33-67bd-4d9c-a8aa-a973b3866530", "node_type": "1", "metadata": {}, "hash": "e91fdcc120dd053bbf999c025bbe023bc3b7d11f505ae4dd0636cbc7badd4cc1", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "1a84b85d-b39c-4ab0-afff-3684dea944b4", "node_type": "1", "metadata": {}, "hash": "344bf28111010b20c930da446ef74d58dbabdbf1e66ac15d3c706f05ed882013", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "41fc52a8-32e6-4986-93bc-53e620dce770", "node_type": "1", "metadata": {}, "hash": "e3a453b039de2ecda97961029b1c707ee14156e60fa784a344229b30db9ceb03", "class_name": "RelatedNodeInfo"}, {"node_id": "7d9924c8-ad48-445a-a4cd-f4cdf3ffee0d", "node_type": "1", "metadata": {}, "hash": "e073418a69bc4671e7aeb7238a236274d0448fc3d496c4f48fc2bf1c0ce7913e", "class_name": "RelatedNodeInfo"}, {"node_id": "a3f8c9fd-3450-41db-b59d-330d73b0ec31", "node_type": "1", "metadata": {}, "hash": "fcff46dd6262f20ed1c35b171c390b1af23da2602b570b6bed0442b1d1e5680e", "class_name": "RelatedNodeInfo"}, {"node_id": "19fe0c2d-71f5-40fa-8482-918b0b0f968f", "node_type": "1", "metadata": {}, "hash": "c84dc9bd0ab99bee762d53a65cf40a4ea689b552f37a120b6f857be8f5f093be", "class_name": "RelatedNodeInfo"}, {"node_id": "d17b9b25-ebf5-4f4e-9feb-b7302e872e67", "node_type": "1", "metadata": {}, "hash": "e91da190afc5107b52d8898aa628a617f1a6b8b9d408ada44452da0d3de6c4f5", "class_name": "RelatedNodeInfo"}]}, "text": "Chomsky argued that both formalisms were inadequate for\nmodelling natural language and proposed an additional operation of\ntransformations, which could essentially permute the output string of a CFG in\nvarious ways. Chomsky\u2019s work introduced a methodology which was to dominate\ntheoretical linguistics for the next couple of decades: linguists concentrated on\npostulating formal rules of grammar which were tested against their own intuitions\nor those of native speakers of other languages, rather than seeking to induce rules\nfrom large collections of data. Part of the rationale for this was that native speakers\nof a language are able to recognise whether a sequence of words makes up an\nacceptable sentence in their language, even if they have never encountered those\nwords in that particular order before. Prior to what was to become known as the\nChomskyan revolution, corpus-based approaches had been the norm in general\nlinguistics. This tradition was overshadowed for a time by so-called \u2018generative\u2019\nlinguistics, but corpus-based research continued in some quarters until its resurgence\nin the 1980s, including the development of the \ufb01rst machine-readable corpus by the\nJesuit priest Fr Robert Busa. Busa developed a 10 million-word corpus of medieval\nphilosophy on punch-cards, with the support of Thomas Watson of IBM (McEnery\nand Wilson, 2001, pp. 20\u201321).\nWork in formal grammar tended to assume a \u2018backbone\u2019 of context-free rules,\naugmented with various mechanisms to handle data that appeared to go beyond the\ncontext-free model; some important developments were Generalised Phrase\nStructure Grammar (Gazdar et al., 1985) and Head-driven Phrase Structure\nGrammar (Pollard and Sag, 1994). We will see examples of these extra mechanisms\nin Chapter 6.\nEarly work on automated language processing was essentially procedural in its\nmethodology, working with a type of \ufb01nite-state machine called transition\nnetworks which were extended as augmented transition networks to cope with\nvarious linguistic constructions (Woods, 1970). Later work based on declarative\ngrammar formalisms employed techniques including deductive parsing (Pereira and\nWarren, 1983) and uni\ufb01cation (Kay, 1984).", "mimetype": "text/plain", "start_char_idx": 1965, "end_char_idx": 4156, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "27cb265c-8a30-4a47-a431-56e87c0a3422": {"__data__": {"id_": "27cb265c-8a30-4a47-a431-56e87c0a3422", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a55c8c92-8ade-40a1-a42f-f008eda9d766", "node_type": "1", "metadata": {}, "hash": "195ca86935123f01807b6003a4113e6ef0aeda002aadd0578ed62fd9d78db553", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "1a84b85d-b39c-4ab0-afff-3684dea944b4", "node_type": "1", "metadata": {}, "hash": "344bf28111010b20c930da446ef74d58dbabdbf1e66ac15d3c706f05ed882013", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "d7434bbe-9b5b-4929-87f4-09db6cc8e7fb", "node_type": "1", "metadata": {}, "hash": "210b316e22fc36a7f8b4933cd4c8c445dc669740b5b9f224effa4070b1cacfb5", "class_name": "RelatedNodeInfo"}, {"node_id": "aadcdf0a-70ed-40ce-8d19-5db48210be23", "node_type": "1", "metadata": {}, "hash": "44e7b030d6c849dfd336644f13c2fb4d1e27e3705f995c2990f09e6d768b3e2b", "class_name": "RelatedNodeInfo"}, {"node_id": "ba16a286-8169-4748-bdf5-bd143528bd5b", "node_type": "1", "metadata": {}, "hash": "d0403f310f61f5744072e6beb9ffd5a76acb291c90836e2849ccf629f7d53a4a", "class_name": "RelatedNodeInfo"}, {"node_id": "36b790e2-6c14-4e47-9498-2fc10cca8ccc", "node_type": "1", "metadata": {}, "hash": "22170369958f999a67bc43b4b012d51319c0c7835727d895e39d95a0221a3cb7", "class_name": "RelatedNodeInfo"}, {"node_id": "21604122-4632-4bda-b6ac-04338eb39fa9", "node_type": "1", "metadata": {}, "hash": "043c29346e462f476587ec782fd463529c61cbb4f9f86ae550dd9a05ed55c5b8", "class_name": "RelatedNodeInfo"}]}, "text": "The former adopts techniques from the\nAI \ufb01eld of automated reasoning: the core idea is that parsing a sentence can be seen\nas constructing a logical proof that a particular sequence of words forms a proper\nsentence according to a given set of grammar rules. Uni\ufb01cation grammars treat\nlinguistic objects as sets of attributes or features with a \ufb01nite range of values, and\ngrammar rules specify that particular items in a sentence must have the same or\ncompatible values for certain features. For example, the subject and main verb of a\nsentence should have the same value for the number feature. We will consider\ndetailed examples in Chapter 6.\nMeanwhile, substantial progress was made in lower-level tasks such as speech\nrecognition and morphological analysis using probabilistic techniques and\n\ufb01nite-state models. During the late 1990s these techniques were extended to cover\ntasks such as parsing, part-of-speech tagging and reference resolution (recognising\nwhether or not different expressions in a document referred to the same person or\nentity). These developments were driven by a number of factors: the continuing\nincrease in the processing speed and memory capacity of computers; the availability\nof massive amounts of spoken and written material, both in unstructured form on\nthe world wide web and with various types of annotation in corpora such as the\n26\n\nSample examination questions\nPenn Treebank3or the British National Corpus4, and events such as the Message\nUnderstanding Conferences5which were initially sponsored by the US Department\nof Defense to measure and foster progress in extracting information from\nunstructured text.\nMuch work since around the year 2000 has involved the use of machine learning\ntechniques such as Bayesian models and maximum entropy (see Chapter 5). This\nhas involved using annotated corpora to train systems to segment and annotate texts\naccording to various morphological, syntactic or semantic criteria. These techniques\nhave been systematically applied to particular tasks such as parsing, word sense\ndisambiguation, question answering and summarisation.\n2.7 Summary\n1. This chapter has characterised the subject matter of the course as being\nconcerned with various ways of using computer programs to analyse text, by\nwhich we mean words, numbers, punctuation and other meaningful symbols\nthat are printed on paper or some other \ufb02at surface, or displayed on a screen.\n2.", "mimetype": "text/plain", "start_char_idx": 4157, "end_char_idx": 6577, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fb053235-5ae2-4f9b-bd35-e0e6f22d0db6": {"__data__": {"id_": "fb053235-5ae2-4f9b-bd35-e0e6f22d0db6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "27cb265c-8a30-4a47-a431-56e87c0a3422", "node_type": "1", "metadata": {}, "hash": "1ca2f1c7264d481213e290302dceb2bbd5a432e5efd3ecede18a32d82caf51ef", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "1a84b85d-b39c-4ab0-afff-3684dea944b4", "node_type": "1", "metadata": {}, "hash": "344bf28111010b20c930da446ef74d58dbabdbf1e66ac15d3c706f05ed882013", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "0216b818-22db-4fb6-937a-14fa96f19fa9", "node_type": "1", "metadata": {}, "hash": "c2795c27ae6aee30b35c8e832a41ad33232e1d0e31aaf668323df0af7420adad", "class_name": "RelatedNodeInfo"}, {"node_id": "dd931f2c-42c8-41bc-8f52-17abfea60410", "node_type": "1", "metadata": {}, "hash": "780f7937da92a220b0a5b84a5c750546e7e47be573afb6012e6eb1620e4a1609", "class_name": "RelatedNodeInfo"}, {"node_id": "baa6ed80-a141-4a56-87ec-3aa0942bea82", "node_type": "1", "metadata": {}, "hash": "24763893b428259e96870b1f327280b7f650295278c42dae259f1991bf71682a", "class_name": "RelatedNodeInfo"}, {"node_id": "19af1143-24c6-4309-8763-d8935d1c3e9c", "node_type": "1", "metadata": {}, "hash": "95f58e235e34968993640275dd0da349fd83739bfcc4242c588b136b61389ace", "class_name": "RelatedNodeInfo"}]}, "text": "2. Some fundamental operations in text analysis include tokenisation , which\ninvolves extracting these meaningful elements from a stream of electronic\ncharacters and discarding white space, line feed characters and other material\nwhich has no explicit meaning for a human reader, and using regular\nexpressions to identify patterns in a text.\n3. Regular expressions are composed of the three basic operations of sequence,\nselection and iteration, and have many applications in computational linguistics\nand computer science at large. A \ufb01nite-state machine is a process whose\noperations can be speci\ufb01ed by means of regular expressions. A regular grammar\nis a set of production rules or rewrite rules that de\ufb01nes the sentences that make\nup a language, and any language de\ufb01ned by a regular grammar can be\nprocessed by a \ufb01nite state machine or described using a regular expression.\n4. A complete syntactic analysis of natural language sentences is generally held to\nrequire the additional operation of centre-embedded recursion, which is beyond\nthe power of \ufb01nite-state methods. Recursion is formally encoded in context-free\ngrammars.\n5. Not only do words combine in various patterns and structures to form sentences;\nthey also have internal structure which can be described to an extent using rules\nfor regular and irregular forms.\n6. The current state of NLP or computational linguistics builds on research results\nand concepts from many different \ufb01elds, and we have sketched some of the\nhighlights in a very short history of the discipline.\n2.8 Sample examination questions\nYou can expect a list of RE operators to be included as an appendix in the\nexamination paper.\n3http://www.cis.upenn.edu/ \u0018treebank/; last visited 27th May 2013\n4http://www.natcorp.ox.ac.uk/; last visited 27th May 2013\n5http://www.itl.nist.gov/iaui/894.02/related projects/muc/; last visited 27th May 2013\n27\n\nCO3354 Introduction to natural language processing\n1.", "mimetype": "text/plain", "start_char_idx": 6575, "end_char_idx": 8509, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b00aced5-cdc9-4bd1-ba06-97586566fc1e": {"__data__": {"id_": "b00aced5-cdc9-4bd1-ba06-97586566fc1e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fb053235-5ae2-4f9b-bd35-e0e6f22d0db6", "node_type": "1", "metadata": {}, "hash": "26e5eca3eeb1c0b5b89bef5b85d578bc273260ac2df965e1bf0f2dc802235239", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "1a84b85d-b39c-4ab0-afff-3684dea944b4", "node_type": "1", "metadata": {}, "hash": "344bf28111010b20c930da446ef74d58dbabdbf1e66ac15d3c706f05ed882013", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "a32973a0-7e9a-4e42-a52a-4147979ce903", "node_type": "1", "metadata": {}, "hash": "fbc212093bf77a0790d66ab228d1a3ab8e4cd0102c4d73dc944ee91b4334828b", "class_name": "RelatedNodeInfo"}]}, "text": "S!NP VP\nNP!Det N\nNP!PN\nVP!V\nVP!V NP\nVP!V NP PP\nVP!VP Adv\nPP!P NP\nDet!theja\nN!waiterjchairsjtablesjhoteljmanager\nPN!OscarjParis\nV!diedjputjsawjcalled\nAdv!suddenlyjquicklyjslowly\nP!injon\n(a) Using the grammar rules above, draw syntax trees for:\ni. Oscar died suddenly.\nii. The waiter put the chairs on the tables.\niii.", "mimetype": "text/plain", "start_char_idx": 8510, "end_char_idx": 8826, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ff5a7c25-0652-411a-93ed-b2bd0f2abd38": {"__data__": {"id_": "ff5a7c25-0652-411a-93ed-b2bd0f2abd38", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b578b6bf-a334-46de-b8b8-f69eb8edcaba", "node_type": "1", "metadata": {}, "hash": "ede7df7436362662e345e6d8f1f1621d2ee2e5834e38ac9c9cb69083c8ab691c", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "ff78060e-f104-4259-aee1-17532036337c", "node_type": "1", "metadata": {}, "hash": "224a36a29d1c8f7729ff65029a3fdd30aa33dcaeb1bf2a36d726582afeee5968", "class_name": "RelatedNodeInfo"}, {"node_id": "ac898820-1258-41ac-b93c-ac110fef5484", "node_type": "1", "metadata": {}, "hash": "be264b882c9e07ca74ad47808287eec0105f9fbb1e2a50cb8241d4a8e1b5db80", "class_name": "RelatedNodeInfo"}, {"node_id": "06589271-a7a8-430e-80b5-4871e777c09a", "node_type": "1", "metadata": {}, "hash": "0b1639d84e658f93ed9c81d510ff6633eb81e1542ea4e8a55ac6e296ab97c143", "class_name": "RelatedNodeInfo"}, {"node_id": "c3bd2232-629a-46a6-8332-63a2a0282e6d", "node_type": "1", "metadata": {}, "hash": "6b178d54a96e5898ad79dbd6d78176095b10c95c69e7fc7f3db2848ddbcd3f10", "class_name": "RelatedNodeInfo"}, {"node_id": "47a90958-3cec-429b-9d5b-520e7565fc09", "node_type": "1", "metadata": {}, "hash": "20294e706823989d61d9bf280cefd36cf77da78582d85346545409b97f7600f8", "class_name": "RelatedNodeInfo"}]}, "text": "ii. The waiter put the chairs on the tables.\niii. Oscar called the waiter.\n(b) Modify the grammar so that it generates the unstarred sentences below as\nwell as (i\u2013iii) above but not the starred ones. Explain the reasons for your\nmodi\ufb01cations.\ni. Oscar died in Paris.\nii. Oscar died in a hotel in Paris.\niii. The waiter came to the table when Oscar called him.\niv. When Oscar called him the waiter came to the table.\nv. * Oscar put\nvi. * The waiter saw on the tables\nvii. * The waiter put in the chairs\nviii. * The waiter put the chairs\nix. * Oscar died the table\nx. * When Oscar called him when the waiter came to the table.\n2. Write a regular expression that will identify male and female names in context,\nin an English-language text. Discuss ways in which this might over- or\nunder-generate.\n3. Explain the difference between regular and context-free grammars and discuss\nthe claim that natural language grammars need at least context-free power.\n4. (a) Write a regular grammar which generates the following sentences:\ni. This is the kid that my father bought.\nii. This is the cat that killed the kid that my father bought.\niii. This is the dog that worried the cat that killed the kid that my father\nbought.\niv. This is the stick that beat the dog that worried the cat that killed the kid\nthat my father bought.\n(Brewer\u2019s Dictionary of Phrase and Fable , 1896)\n(b) Write out three more sentences generated by your grammar.\n28\n\nChapter 3\nGetting to grips with natural language data\nEssential reading\nBird et al. (2009) Natural Language Processing with Python Chapters 1 and 2\nparticularly: 1.1\u20131.3, 2.1\u20132.2, 2.5.\nRecommended reading\nMcEnery (2003) \u2018Corpus Linguistics\u2019 in Mitkov (2003) is a succinct overview of the\ntopic from one of the leading scholars in the \ufb01eld.\nAdditional reading\nMcEnery and Wilson (2001) Corpus Linguistics is an established undergraduate\ntextbook; Chapters 2 and 3 are especially relevant for this topic.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1933, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a56a6a43-464c-40ce-b47d-5c91b46df98a": {"__data__": {"id_": "a56a6a43-464c-40ce-b47d-5c91b46df98a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ff5a7c25-0652-411a-93ed-b2bd0f2abd38", "node_type": "1", "metadata": {}, "hash": "58de69c4a65cb26857e3225e65c301dcf37befb40d1fd58fc29b011dfd90f8fb", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b578b6bf-a334-46de-b8b8-f69eb8edcaba", "node_type": "1", "metadata": {}, "hash": "ede7df7436362662e345e6d8f1f1621d2ee2e5834e38ac9c9cb69083c8ab691c", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "77ba65a7-b4bc-4bc2-8658-6e63a698a6a6", "node_type": "1", "metadata": {}, "hash": "9b3765e519ddda402bc704ee02000021261cab32911bbffe0c9b7f21193b725e", "class_name": "RelatedNodeInfo"}, {"node_id": "b670b5f4-1316-47d7-a359-d11fb16188b0", "node_type": "1", "metadata": {}, "hash": "4dbbe1606cede05a08b8547a17983bd84f9416213a972cab35b1bf09a458c6d9", "class_name": "RelatedNodeInfo"}, {"node_id": "53d4e5fd-1205-4e63-91ae-5568ff0f1d9e", "node_type": "1", "metadata": {}, "hash": "f45eca6f8d3e6f33707566cd5dc86606d55c54a9cd0fea3201ef7469aee76b32", "class_name": "RelatedNodeInfo"}, {"node_id": "5f1a748d-647c-4d40-8eb8-1a026f7b61b9", "node_type": "1", "metadata": {}, "hash": "4eebd49112689cdbbbcbc1e7871491bb25f4194eb9b66d4f6f0386996b38331b", "class_name": "RelatedNodeInfo"}, {"node_id": "9e36e5b2-0a08-4dac-aec3-2d1cecb75fae", "node_type": "1", "metadata": {}, "hash": "37bd412af98e8ea3082defe1e9c61a89751bf402dd7bd78dfe45537219032a77", "class_name": "RelatedNodeInfo"}]}, "text": "McEnery and Hardie (2011) Corpus Linguistics: Method, Theory and Practice . Chapter\n3 addresses the important topic of research ethics for corpus linguistics, which is\noften neglected in technical or academic presentations of the subject.\n3.1 Learning outcomes\nBy the end of this chapter, and having completed the Essential reading and activities,\nyou should be able to:\nexplain what is meant by a corpus in the context of natural language processing,\nand describe some different types, structures and uses of corpora\ndescribe the characteristics of some well-known corpora and other language\nresources such as the Brown corpus, Penn treebank, Project Gutenberg and\nWordNet\nUse online interfaces and other software tools to do some basic corpus analysis,\nincluding concordancing and \ufb01nding collocations\nlocate and format raw text documents and analyse them using corpus tools.\n3.2 Using the Natural Language Toolkit\nAs stated in Chapter 1, this subject guide is not intended as a stand-alone tutorial in\nusing the NLTK or the Python language. You are advised to read through the\nrecommended sections of Bird et al. (2009) and work through the exercises marked\n29\n\nCO3354 Introduction to natural language processing\nYour turn . You may also \ufb01nd it useful to attempt some of the exercises provided at\nthe end of each chapter.\nFrom this chapter onwards you will be running Python sessions and using the NLTK.\nYou should get into the habit of starting sessions with the following commands:\n>>> from __future__ import division\n>>> import nltk, re, pprint\nOne of the features that makes the Python language suitable for natural language\napplications is the very \ufb02exible treatment of data structures such as lists, strings and\nsequences. You should be familiar with these structures from previous programming\ncourses, but should ensure you understand the way they are handled in Python. For\nthis chapter, only lists are relevant and you should study Bird et al. (2009, section\n1.2) before trying any of the learning activities in this chapter.\n3.3 Corpora and other data resources\nAs explained in the previous chapter, much natural language processing relies on\nlarge collections of linguistic data known as corpora (plural of corpus ). A corpus can\nbe simply de\ufb01ned as no more than a collection of language data, composed of\nwritten texts, transcriptions of speech or a combination of recorded speech and\ntranscriptions.", "mimetype": "text/plain", "start_char_idx": 1934, "end_char_idx": 4348, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "663ec1f4-8deb-46d6-9e2e-da95ecf8e48d": {"__data__": {"id_": "663ec1f4-8deb-46d6-9e2e-da95ecf8e48d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a56a6a43-464c-40ce-b47d-5c91b46df98a", "node_type": "1", "metadata": {}, "hash": "16bcbbcd36e57bd3f492f095c8baf7be01cad110f7d0f8cf0dbe9f9fc8080c8f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b578b6bf-a334-46de-b8b8-f69eb8edcaba", "node_type": "1", "metadata": {}, "hash": "ede7df7436362662e345e6d8f1f1621d2ee2e5834e38ac9c9cb69083c8ab691c", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "c8c9ade2-9ba8-46e8-8432-19155e5071cd", "node_type": "1", "metadata": {}, "hash": "cb2dcc7fcdf7db1b410481cb73a84986ac959c15175f6d88cfdf0777149a4b61", "class_name": "RelatedNodeInfo"}, {"node_id": "6397d877-6252-4cbf-a351-67b5640846c5", "node_type": "1", "metadata": {}, "hash": "1b5a641542afc0518cc1cc8b7456e56adce6d076b565ca13055279aa9fd29ed5", "class_name": "RelatedNodeInfo"}, {"node_id": "84f89005-db53-4885-9dff-47b2f8c019bc", "node_type": "1", "metadata": {}, "hash": "9820348fa5fd535cb7eb4852189bdd8440c88307e8d4e0e31beaca7e62dc1971", "class_name": "RelatedNodeInfo"}, {"node_id": "1e3d5183-8d7e-4290-8a11-cd1347e02d15", "node_type": "1", "metadata": {}, "hash": "3d6d0a330d7334914ebc68337621b53b6cb09c4c05661f3d2d2da41d3cb30bd9", "class_name": "RelatedNodeInfo"}, {"node_id": "89fb4bda-19de-4c9a-8784-6df5f48e49ee", "node_type": "1", "metadata": {}, "hash": "58efb054e320d1a781ba8e780621c2fc78a7120821196f536f09de7ebd06caca", "class_name": "RelatedNodeInfo"}]}, "text": "Corpora fall into three broad categories (McEnery, 2003, p.450):\nMonolingual corpora consist, as the name suggests, of data from a single\nlanguage.\nComparable corpora include a range of monolingual corpora in different\nlanguages, preferably with a similar level of balance and representativeness, and\ncan be used for contrastive studies of those languages.\nParallel corpora include original texts in one language with translations of those\ntexts in one or more different languages. Parallel corpora can be used to train\nstatistical translation systems.\nA corpus is generally expected to have additional characteristics: corpora are usually\nconstructed so as to be balanced andrepresentative of a particular domain (McEnery\nand Wilson, 2001, pp. 29\u201330). (Sometimes the term is used more loosely to cover\nany large collection of language data which need not have been compiled\nsystematically, as in the phrase \u2018the web as corpus\u2019.) Sampling theory is a branch of\nstatistics that deals with questions such as: how many respondents are needed in an\nopinion poll for the results to be considered to represent public opinion at large?\nSimilar considerations arise in corpus linguistics. This is particularly important if a\ncorpus is to be used for quantitative analysis of the kind described in Chapter 5: if\nthe corpus data is skewed or unrepresentative then results of the analysis may not be\nreliable. These considerations may be less important if the corpus is collected for the\nliterary or historical interest of the documents that make it up, as is the case with\nProject Gutenberg for example.\nFor example, Bird et al. (2009, pp. 407\u2013412) refer to the TIMIT corpus, an annotated\nspeech corpus developed by Texas Instruments and MIT. To ensure\nrepresentativeness, it was designed to include a wide coverage of dialect variations.\nCorpus builders need to exercise expert judgment in deciding on the sampling frame ,\n30\n\nSome uses of corpora\nor \u2018the entire population of texts from which we will take our samples\u2019 (McEnery and\nWilson, 2001, p. 78) and calculating the size of the corpus that is necessary for it to\nbe maximally representative.", "mimetype": "text/plain", "start_char_idx": 4349, "end_char_idx": 6489, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6d41249a-c560-4f19-952c-9d4aef985451": {"__data__": {"id_": "6d41249a-c560-4f19-952c-9d4aef985451", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "663ec1f4-8deb-46d6-9e2e-da95ecf8e48d", "node_type": "1", "metadata": {}, "hash": "2f4a4c1b19c7cb7b80557590f8b8765af7514afd39b962820539cf7ad1d59293", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b578b6bf-a334-46de-b8b8-f69eb8edcaba", "node_type": "1", "metadata": {}, "hash": "ede7df7436362662e345e6d8f1f1621d2ee2e5834e38ac9c9cb69083c8ab691c", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "034df081-5a94-448a-bb61-b39c09845219", "node_type": "1", "metadata": {}, "hash": "9d2973f8ebcd3b0213eaf66478e1b62a62b9317b6463606ec93708338d0d57b4", "class_name": "RelatedNodeInfo"}, {"node_id": "b690e88c-8c69-43ef-ad68-83378fd77ba0", "node_type": "1", "metadata": {}, "hash": "dbe66bdac423153a0fc3d4d5a97acfe422f39cf22859b2f3ec6d003e377f14ef", "class_name": "RelatedNodeInfo"}, {"node_id": "25ce210f-0adb-4cfd-aeed-d40fea7f4d0a", "node_type": "1", "metadata": {}, "hash": "7e3311d6e64cc0c93800986d167fc2a23501fbbf17ea5da00f7c387b38c14cf5", "class_name": "RelatedNodeInfo"}, {"node_id": "0f0ca2b9-ccad-457b-8a8a-f14a2b9bc03c", "node_type": "1", "metadata": {}, "hash": "145adeac6ce554fd9a9f1bc78794c6db4f9ebc293775a449ced1840f180318d2", "class_name": "RelatedNodeInfo"}, {"node_id": "2fc1a321-1097-44b9-9340-676f4bc0b449", "node_type": "1", "metadata": {}, "hash": "04c9bd33a719e8c1944bee383b90a2c8deef8ccbb04df966e250aa52950bc7a7", "class_name": "RelatedNodeInfo"}]}, "text": "The sampling frame may, for example, be bibliographic ,\nbased on some comprehensive index or the holdings of a particular library, or\ndemographic , selecting informants on the basis of various social categories as is often\ndone in public opinion research.\nCorpora have tended to be of a \ufb01nite size and to remain \ufb01xed once they have been\ncompiled. There are also what is known as monitor corpora which are continually\nupdated with new material. This is particularly useful for compilers of dictionaries\nwho need to be able to track new words entering the language and the changing or\ndeclining use of old ones. An example of a monitor corpus is the COBUILD Bank of\nEnglishTM, which had around 300 million words when it was referred to by McEnery\n(2003) and has since more than doubled in size to 650 million words.\nA further distinction is between corpora consisting solely of the original or \u2018raw\u2019 text\nand those that have been marked up with various annotations. One common\ntechnique is standoff annotation where the mark-up is stored in a different \ufb01le from\nthe original text (McEnery and Wilson, 2001, p.38); (Bird et al., 2009, p.415).\nFinally, corpora can be further classifed according to their structure:\nIsolated \u2013 an unorganised collection of individual texts such as the Gutenberg\nonline collection of literary works.\nCategorised \u2013 texts are organised by categories such as genre; an example is the\nBrown corpus described below.\nOverlapping \u2013 some categories overlap. A news corpus such as Reuters may contain\nstories which cover both politics and sport, for example.\nTemporal \u2013 texts indicate language use over time. Examples are the Inaugural\ncorpus of all inaugural speeches by US Presidents, and the Helsinki Diachronic\ncorpus of about 1.6 million words of English dating from the early 9th century\nCE to 1710.\nSome examples of corpora, which will be described in more detail later in the\nchapter, are:\nBrown Developed at Brown University in the early 1960s.\nBNC British National Corpus, created and managed by BNC consortium which\nincludes Oxford and Lancaster universities, dictionary publishers OUP,\nLongmans and Chambers, and the British Library.", "mimetype": "text/plain", "start_char_idx": 6490, "end_char_idx": 8654, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4153621b-fc78-4b98-b9b3-e372de826ce8": {"__data__": {"id_": "4153621b-fc78-4b98-b9b3-e372de826ce8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6d41249a-c560-4f19-952c-9d4aef985451", "node_type": "1", "metadata": {}, "hash": "b3b8af9972925addc775cd5c1fb009de997b2d6f7f9a1027aacaf1dc3032e71f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b578b6bf-a334-46de-b8b8-f69eb8edcaba", "node_type": "1", "metadata": {}, "hash": "ede7df7436362662e345e6d8f1f1621d2ee2e5834e38ac9c9cb69083c8ab691c", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "26be25bc-cda0-46cc-98d4-e88e355e62e8", "node_type": "1", "metadata": {}, "hash": "27d6f3f067c0e5a0dda788a93c26faa5b206226c4ac962d25fb2c39b2d3d8677", "class_name": "RelatedNodeInfo"}]}, "text": "COBUILD (Bank of English) The Bank of EnglishTMforms part of the Collins\nCorpus, developed by Collins Dictionaries and the University of Birmingham,\nand contains 650 million words.", "mimetype": "text/plain", "start_char_idx": 8655, "end_char_idx": 8835, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c57a2913-0d23-4354-ad83-71e73056ffc4": {"__data__": {"id_": "c57a2913-0d23-4354-ad83-71e73056ffc4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a3c5fdd3-166a-4c90-b1a8-c7f4272a0965", "node_type": "1", "metadata": {}, "hash": "998501f923c5cdb2a2cb8340ea1556f92c5240bf878a257b25c2713abdcc0b4e", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "8db665e8-8f39-45e8-9fd6-2e49ce326b4a", "node_type": "1", "metadata": {}, "hash": "42c9060d4adc1c2ee85708b6e6c4fa1b7a984f7f1e6de7fbc09c718f1bf4c4c5", "class_name": "RelatedNodeInfo"}, {"node_id": "9c493a62-295b-461d-8956-150a6135e130", "node_type": "1", "metadata": {}, "hash": "80e015a31983fc786ffcb09b7f9514d155698208a2a900be4f53aad0fd8ab8eb", "class_name": "RelatedNodeInfo"}, {"node_id": "c133f493-f6b2-42a0-bce0-dd5d40742b4d", "node_type": "1", "metadata": {}, "hash": "ae758ea528f7332404f1e8c39d58816bd65a92e0647880ef680c9a68e57e72fd", "class_name": "RelatedNodeInfo"}, {"node_id": "20d076ee-db9f-445d-a038-e99f6c94ec00", "node_type": "1", "metadata": {}, "hash": "d4d7031d00b1f04bfb589885beebd8e249d15c6ed2505c6ae588e1b88080f38c", "class_name": "RelatedNodeInfo"}, {"node_id": "1b727395-91f1-4e81-a6c8-be495808db92", "node_type": "1", "metadata": {}, "hash": "fbb74c51bd66fb8eb2f134c10ce44cf1f1c3366e1969303b19c96df1a3200b1a", "class_name": "RelatedNodeInfo"}]}, "text": "Gutenberg An archive of free electronic books in various formats hosted at\nhttp://www.gutenberg.org /\nPenn Treebank A corpus of reports from the Wall Street Journal and other sources\nin various different formats.\n3.4 Some uses of corpora\nMcEnery and Wilson (2001, Chapter 4) discuss a variety of uses for corpora, some of\nwhich are brie\ufb02y discussed below.\n31\n\nCO3354 Introduction to natural language processing\n3.4.1 Lexicography\nModern dictionaries such as Chambers, Collins and Longmans now rely heavily on\ncorpus data in order to classify and inventorise the various ways words can be used\nin contemporary English as well as any ways these uses may have changed. For\nexample, a lexicographer who wishes to determine whether the words scapegoat ,\nthermostat orleverage can be used as verbs can enter the appropriate search string\nand be presented with examples such as the following (from the BNC):\nScapegoating an individual prevents the debate and delays community\nunderstanding .\nThe measuring cell is immersed in a vat of liquid, usually benzene or xylene which\ncan be thermostatted at temperatures between 273 and 400 K .\nThese one-time costs once met could be leveraged over much more business activity\naround the globe than we then enjoyed .\nMcEnery and Wilson (2001, p. 107) discuss a case where they claim that two\nwell-known dictionaries had \u2018got it wrong\u2019 by listing quake as a solely intransitive\nverb, while examples in a transitive construction can in fact be found through a\ncorpus search:\nThese sudden movements quake the Earth. (BNC)\nIt is perhaps debatable whether the dictionaries in question were \u2018wrong\u2019 to\ndisregard examples like this, or the compilers may have judged this to be an\nidiosyncratic usage which did not merit being included in a work of reference with\nthe status of standard usage.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1819, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "904b603f-e9f0-40fd-afb4-49d424dc6962": {"__data__": {"id_": "904b603f-e9f0-40fd-afb4-49d424dc6962", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c57a2913-0d23-4354-ad83-71e73056ffc4", "node_type": "1", "metadata": {}, "hash": "fea12ba9dc0c56ce8a3822a2f505569236b118afdef626821dfaadfaaae7de5f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a3c5fdd3-166a-4c90-b1a8-c7f4272a0965", "node_type": "1", "metadata": {}, "hash": "998501f923c5cdb2a2cb8340ea1556f92c5240bf878a257b25c2713abdcc0b4e", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "52d40cdd-fd55-4801-a9d9-6a084bebc412", "node_type": "1", "metadata": {}, "hash": "87f9b17642080ec71f718abbd1da6346fb88a6913d82b69c15a190a45ce36784", "class_name": "RelatedNodeInfo"}, {"node_id": "11528f83-27ae-47d3-8917-1a9ae9e5479b", "node_type": "1", "metadata": {}, "hash": "8e4a024db1a880ca9f5c04ab727795df7eee08b21e39b004436247446db7cda4", "class_name": "RelatedNodeInfo"}, {"node_id": "3608bdf2-f30d-451c-b496-1f086095a943", "node_type": "1", "metadata": {}, "hash": "6ff14e9ff55610248e593c7770cb1263f95932626ddfb5e70cd985f21a35498f", "class_name": "RelatedNodeInfo"}, {"node_id": "d15c561a-9b4f-4cf5-9044-3509b38cbcff", "node_type": "1", "metadata": {}, "hash": "ef3ea6d127cc930c90569620b47b9ec2b16aa1a45b3d5187524d7287a17482d3", "class_name": "RelatedNodeInfo"}, {"node_id": "0bc9c9d9-6aff-45a0-9956-0ae37614f456", "node_type": "1", "metadata": {}, "hash": "fe0649d22f88adcc28fb6112145f4fdb141b73217bc4fe53400979507872e142", "class_name": "RelatedNodeInfo"}, {"node_id": "36a84821-aed8-4b03-a1fc-7539ee102535", "node_type": "1", "metadata": {}, "hash": "0fcfa15b9c598dbeaf37a0ec3ce9fb722d81b5b3b1198b36d7256f07f44054d4", "class_name": "RelatedNodeInfo"}]}, "text": "3.4.2 Grammar and syntax\nLarge-scale grammars for pedagogic and reference use such as the Comprehensive\nGrammar of the English Language (Quirk et al., 1985) or the Cambridge Grammar of\nthe English Language (Huddleston and Pullum, 2002) use corpora among their\nsources of information along with results of linguistic research and the compilers\u2019\nown subjective intuitions as competent speakers of the language, although this has\ntended to involve qualitative rather than quantitative analysis. Recent advances in\ncomputational power and developments in parsed corpora and tools to analyse them\nhave made it possible for researchers to carry out quantitative studies of various\nkinds of grammatical frequency, such as the relative frequency of different clause\ntypes in English. Other studies use corpora to test predictions made by formal\ngrammars that have been developed within the generative school of linguistics. The\nCOBUILD project which provided the resources for Collins English dictionaries has\nalso resulted in a series of small handbooks covering various kinds of grammatical\nconstruction, which are useful both for advanced language learners and for linguists\nin search of examples.\n3.4.3 Stylistics: variation across authors, periods, genres and channels of\ncommunication\nThe notion of style in communication is that people generally have a choice between\ndifferent ways of expressing themselves and not only do individuals tend to make\n32\n\nCorpora\nsimilar choices each time they communicate, but their particular choices may be\nmore characteristic of particular genres (romantic \ufb01ction, \ufb01nancial news, court\nreports and so on), time periods and channels of communication. By channels we\nmean distinctions such as written text compared with spoken discourse, both of\nwhich can be further subdivided: people will make different choices when\ncomposing emails, sending text messages or (rarely) writing a letter by hand. We\nprobably also adopt different styles when talking face-to-face and on the telephone.\nLiterary scholars as well as law enforcement and intelligence agencies may have an\ninterest in identifying the author of a document from internal evidence. There have\nbeen various famous and less well-known instances of controversial attribution of\nauthorship: for example, various \ufb01gures have been put forward as the authors of\nShakespeare\u2019s plays.", "mimetype": "text/plain", "start_char_idx": 1820, "end_char_idx": 4186, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "09844597-bb35-462d-ad51-b956020e3374": {"__data__": {"id_": "09844597-bb35-462d-ad51-b956020e3374", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "904b603f-e9f0-40fd-afb4-49d424dc6962", "node_type": "1", "metadata": {}, "hash": "45bc6d15442a04c832e00900ff0d47dae7d175253575655e3098b0cb09dce8d4", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a3c5fdd3-166a-4c90-b1a8-c7f4272a0965", "node_type": "1", "metadata": {}, "hash": "998501f923c5cdb2a2cb8340ea1556f92c5240bf878a257b25c2713abdcc0b4e", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "555bb09f-ecce-481c-a345-e654ed0ff5d3", "node_type": "1", "metadata": {}, "hash": "00141358e93ca3fb62ad44b1fdc49f59755ec352a54dd4dcf9499ca88e1e27f4", "class_name": "RelatedNodeInfo"}, {"node_id": "d30602bd-f3f5-4d0d-85e6-13d33b4ecd5a", "node_type": "1", "metadata": {}, "hash": "bdc82560bdebec7c8eabfaa4ed309b559edddf656df21c3e7105710a16cf80b8", "class_name": "RelatedNodeInfo"}, {"node_id": "db9f3d33-6b14-4797-9c22-1e8bcd80b604", "node_type": "1", "metadata": {}, "hash": "646a85c24298371219f0ec1f8debf77b308acb4e545c5a96318d8199f6908e5f", "class_name": "RelatedNodeInfo"}, {"node_id": "7d27379d-f8a0-458b-ae8d-b87637254b08", "node_type": "1", "metadata": {}, "hash": "69eb6f66d1fcb9769500c26a074eeee47b03a8fd890321206e61d990d4d68323", "class_name": "RelatedNodeInfo"}, {"node_id": "f41d071e-9434-407b-8fc9-65ed14879d97", "node_type": "1", "metadata": {}, "hash": "3a49273771d951c62147979dafc82fb0533b95897d625a8d13573cb15491e317", "class_name": "RelatedNodeInfo"}]}, "text": "3.4.4 Training and evaluation\nIn addition to the applications listed above, corpora are routinely used in linguistic\nresearch for training and testing machine-learning systems for speci\ufb01c tasks in text\nanalytics such as:\ndetecting the topic of a document\nanalysing the sentiments expressed for or against some product or policy\nidentifying individuals described in a text, relations between them and events\nthey participate in\nstatistical parsing\nstatistical machine translation.\nFor example, the Brown corpus and the WSJ corpus are typically used for evaluating\ntext segmentation among other text processing tasks (Mikheev, 2003, p. 203).\nThese topics will be covered in more detail in Chapter 5 of this subject guide, where\nyou will be introduced to various machine-learning techniques. These will all be\ntypes of supervised learning , where a system is trained on \u2018corpora containing the\ncorrect label for each input\u2019 (Bird et al., 2009, p. 222), as opposed to unsupervised\nlearning where the system is designed to detect patterns in the input without any\nfeedback. This normally means that the corpus has been marked up by human\nannotators. Standard practice is to divide a corpus into training and test sets; the\ntest set is considered a gold standard for comparing the accuracy of trained learning\nsystems with that of the annotators. Of course humans are fallible, and it is good\npractice to use multiple annotators for at least a sample of the corpus and report the\nlevel of inter-annotator agreement that was achieved. This will set an upper bound\nfor the performance that can be expected from the system, as it seems meaningless\nto say that a computer program can achieve 100 per cent accuracy on tasks where\nhuman annotators disagree (see Jurafsky and Martin, 2009, p. 189).\n3.5 Corpora\nThis section provides brief descriptions of various corpora, some of which are\ndistributed in full or in part with the NLTK and others can be accessed online.\n33\n\nCO3354 Introduction to natural language processing\n3.5.1 Brown corpus\nThis was one of the \ufb01rst \u2018large-scale\u2019 machine readable corpora, though it may seem\nrather small by today\u2019s standards, consisting of one million words. It was developed\nat Brown University from the early 1960s and took around two decades to complete.", "mimetype": "text/plain", "start_char_idx": 4187, "end_char_idx": 6468, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4602b0fa-2ce6-457b-b66b-b9fb64c4c3be": {"__data__": {"id_": "4602b0fa-2ce6-457b-b66b-b9fb64c4c3be", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "09844597-bb35-462d-ad51-b956020e3374", "node_type": "1", "metadata": {}, "hash": "6254c7c7a4f0fc67f7cf196063b01894b1974e8fdaa13d2ea9d7b54508fd3a21", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a3c5fdd3-166a-4c90-b1a8-c7f4272a0965", "node_type": "1", "metadata": {}, "hash": "998501f923c5cdb2a2cb8340ea1556f92c5240bf878a257b25c2713abdcc0b4e", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "4b742297-abae-46aa-a775-8299292e19c0", "node_type": "1", "metadata": {}, "hash": "d11c21e6dce550bbf71b6cc75f08fbdd349b938d2b4bf79df8de12cae6519c17", "class_name": "RelatedNodeInfo"}, {"node_id": "62c26afe-62ea-4316-bb5a-3d066ea3c2d3", "node_type": "1", "metadata": {}, "hash": "f5cf2784dbd765acc025c5d5c9aebcc39560ec96d4e1a1eb4652d8100fd7330f", "class_name": "RelatedNodeInfo"}, {"node_id": "4a6b5ddf-215c-41bf-bcd8-dc05d2c13196", "node_type": "1", "metadata": {}, "hash": "515e8c8a9310e6e7421c7886f3fb00ef5cf38a56758f5568ca977f3f30067abf", "class_name": "RelatedNodeInfo"}, {"node_id": "f71a58e8-bc42-4ba7-b6aa-dfcfb05b85bc", "node_type": "1", "metadata": {}, "hash": "13d28bcb81c7751e38ef756d8ba482f7ad445a7824cc50792a7564216f7ac773", "class_name": "RelatedNodeInfo"}, {"node_id": "bfd37cad-12ca-44b6-b587-bcb8d8ca19b4", "node_type": "1", "metadata": {}, "hash": "a5bd27898b09820537c15b567e461184f670c11222a5c3ec5cf68a88d878fbdd", "class_name": "RelatedNodeInfo"}]}, "text": "It was intended as a \u2018standard corpus of present-day edited American English\u2019 and is\ncaterorised by genre under headings such as:\nNews Chicago Tribune : Society Reportage\nEditorial Christian Science Monitor : Editorials\nReviews Time Magazine : Reviews\nGovernment US Of\ufb01ce of Civil Defense: The Family Fallout Shelter\nScience Fiction Heinlein: Stranger in a Strange Land\nHumour Thurber: The future, if any, of comedy .\nThe Brown corpus is provided with the NLTK in tagged and untagged versions and\ncan be accessed using the various methods listed by Bird et al. (2009, Table 2.3,\np. 50).\n3.5.2 British National Corpus\nThe BNC is created and managed by the BNC consortium, which includes Oxford\nand Lancaster universities, dictionary publishers OUP, Longmans and Chambers, and\nthe British Library. It was developed between 1991 and 1994 and consists of 100\nmillion words: 90 per cent written and 10 per cent transcriptions of speech. This\nwas one of the \ufb01rst corpora to include spontaneous spoken English. The corpus was\nmarked up using an automated part-of-speech tagger which resulted in a signi\ufb01cant\nsaving of time and expense compared with manual annotation by competent\nspeakers of the language, but means that there is inevitably a degree of error \u2013 as\nyou may discover in the course of the exercise given later in this chapter.\nYou can access this corpus online and perform various kinds of analysis using the\nSimple Query language. Registration is required via the following link but there is\ncurrently no charge:\nhttp://bncweb.lancs.ac.uk/bncwebSignup/user/login.php (last visited 27th\nMay 2013)\n3.5.3 COBUILD Bank of English\nThe COBUILD project involved Collins Dictionaries and the University of\nBirmingham. The Collins corpus is a 2.5-billion word analytical database of English.\nIt contains written material from websites, newspapers, magazines and books\npublished around the world, and spoken material from radio, TV and everyday\nconversations. The Bank of EnglishTMforms part of the Collins Corpus and contains\n650 million words. It was used as a basis for the Collins Advanced Learner\u2019s\nDictionary, grammars and various tutorial materials for learners of English.", "mimetype": "text/plain", "start_char_idx": 6469, "end_char_idx": 8646, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0d595c8c-a021-4a78-b184-9314729c5bd9": {"__data__": {"id_": "0d595c8c-a021-4a78-b184-9314729c5bd9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4602b0fa-2ce6-457b-b66b-b9fb64c4c3be", "node_type": "1", "metadata": {}, "hash": "272f690e9952135a1a37931aad4074c247629749eb7cd08a470e558fd61afc53", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a3c5fdd3-166a-4c90-b1a8-c7f4272a0965", "node_type": "1", "metadata": {}, "hash": "998501f923c5cdb2a2cb8340ea1556f92c5240bf878a257b25c2713abdcc0b4e", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "c9a77129-d5c9-467a-a733-d7fa5fb18f98", "node_type": "1", "metadata": {}, "hash": "5aeb282a557dd785e6eb81be1a03728df329ceb8a69d88db85f9c0eb375641b7", "class_name": "RelatedNodeInfo"}, {"node_id": "717873b8-e72f-4bcd-8fc1-ddb3babc920f", "node_type": "1", "metadata": {}, "hash": "49dbb0d67f31e4da078fd2220dec40c591a83022ba61a7f7a4536c7688c85ce7", "class_name": "RelatedNodeInfo"}]}, "text": "It is not\nincluded in the NLTK but there is limited online access via\nhttp://www.collinslanguage.com/wordbanks .\n34\n\nCorpora\n3.5.4 Penn Treebank\nThe Penn Treebank with its various offshoots is one of the widely used linguistic\nresources among empirical researchers.\nIt includes a collection of texts in four different formats:\nRaw text (original).\nTagged with POS using a tagset which was developed as part of the project.\n\u2018Parsed\u2019; that is, marked up with constituent structure.\nCombined, including both POS tags and constituent structure.\nThe Penn Treebank project . . .", "mimetype": "text/plain", "start_char_idx": 8647, "end_char_idx": 9219, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4673f362-5d18-4d2d-8dae-10a7c46aaa4b": {"__data__": {"id_": "4673f362-5d18-4d2d-8dae-10a7c46aaa4b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "412fa60f-8bac-447e-b1ee-d0fb7494c16c", "node_type": "1", "metadata": {}, "hash": "afebe6d95348ffdc802655920fdcc5af4ff143eec34b3e9135247742c2d09f04", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "56ca8a26-ef2b-406d-b4d2-c3a29864653d", "node_type": "1", "metadata": {}, "hash": "441410424a28f9e64e07eeb49ccd98bf4305619958ff5abc999f4e8d75815112", "class_name": "RelatedNodeInfo"}, {"node_id": "5e16d50f-22c1-46b7-8a9a-4cdb6dd81c57", "node_type": "1", "metadata": {}, "hash": "9e5043a74a4d21604e45dc7eb242eeaad1fc86eba376dbc0cfa5a9c1cdf4729d", "class_name": "RelatedNodeInfo"}, {"node_id": "7e6f9652-020a-403a-bef3-1aa174145307", "node_type": "1", "metadata": {}, "hash": "01bfb2a81907abab1577775857812dd581d205e4bc1f72c2d31758313902297a", "class_name": "RelatedNodeInfo"}, {"node_id": "0ee16332-a899-494d-9fb2-641f890cd0a7", "node_type": "1", "metadata": {}, "hash": "74cb47f5bf6d8cabd9e9ee9689a771a2f479d9ecf6d8c58f50093d2043c4c090", "class_name": "RelatedNodeInfo"}, {"node_id": "34e0944e-dd01-48bb-8a50-43ebcf06908f", "node_type": "1", "metadata": {}, "hash": "7875dc07481b26713b5ba50eef08fd2bc430226196c1097dc2f51404bdee079c", "class_name": "RelatedNodeInfo"}, {"node_id": "a4ba050f-1079-4011-86eb-ad73e61f1465", "node_type": "1", "metadata": {}, "hash": "c0e2f9670f01767476e94ae9f98a1bc1871d5bf507ba6c776960c0fdf0d6c581", "class_name": "RelatedNodeInfo"}]}, "text": "The Penn Treebank project . . . has produced treebanks from the Brown, Switchboard, ATIS and Wall Street\nJournal corpora of English, as well as treebanks in Arabic and Chinese.\nJurafsky and Martin (2009, p. 438)\nThe project began at the University of Pennsylvania in the 1990s and the results\nhave been used as a basis for further annotation efforts involving semantics and\nrhetorical structure. The NLTK includes a selection from the Wall Street Journal\n(WSJ) component of the Treebank, which can be accessed in each of the above\nformats and additionally with a simpli\ufb01ed POS tagset (Bird et al., 2009, Table 5-1,\np. 183). Here is an excerpt showing the four different formats:\nRaw text\nPierre Vinken, 61 years old, will join the board as a\nnonexecutive director Nov. 29.\nTagged\n[ Pierre/NNP Vinken/NNP ]\n,/,\n[ 61/CD years/NNS ]\nold/JJ ,/, will/MD join/VB\n[ the/DT board/NN ]\nas/IN\n[ a/DT nonexecutive/JJ director/NN Nov./NNP 29/CD ]\n./.\nParsed\n( (S (NP-SBJ (NP Pierre Vinken)\n,\n(ADJP (NP 61 years) old)\n35\n\nCO3354 Introduction to natural language processing\n,)\n(VP will\n(VP join\n(NP the board)\n(PP-CLR as\n(NP a nonexecutive director))\n(NP-TMP Nov. 29)))\n.))\nCombined\n( (S\n(NP-SBJ\n(NP (NNP Pierre) (NNP Vinken) )\n(, ,)\n(ADJP\n(NP (CD 61) (NNS years) )\n(JJ old) )\n(, ,) )\n(VP (MD will)\n(VP (VB join)\n(NP (DT the) (NN board) )\n(PP-CLR (IN as)\n(NP (DT a) (JJ nonexecutive) (NN director) ))\n(NP-TMP (NNP Nov.) (CD 29) )))\n(. .)", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1423, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ec3c6d6f-16ea-4410-8ce9-2095469f1087": {"__data__": {"id_": "ec3c6d6f-16ea-4410-8ce9-2095469f1087", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4673f362-5d18-4d2d-8dae-10a7c46aaa4b", "node_type": "1", "metadata": {}, "hash": "586015c82e8ad169028e1d10631160646c1600d2197d5b423401791da23ebc6b", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "412fa60f-8bac-447e-b1ee-d0fb7494c16c", "node_type": "1", "metadata": {}, "hash": "afebe6d95348ffdc802655920fdcc5af4ff143eec34b3e9135247742c2d09f04", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "05595f23-9640-4d80-aa1c-2315b900c314", "node_type": "1", "metadata": {}, "hash": "885e5042c3f13549c445f70a3942b97865ddfd3e8a3ce90daa12d5b5b822a527", "class_name": "RelatedNodeInfo"}, {"node_id": "1738da19-dd60-43c4-afda-bb8dc726536f", "node_type": "1", "metadata": {}, "hash": "af24145e0b0be4759c6c25b524084a40d358f6f6971cdec82ee400a592313829", "class_name": "RelatedNodeInfo"}, {"node_id": "bb874048-18ce-442f-8fc8-ea8ecef10972", "node_type": "1", "metadata": {}, "hash": "3a93a270603d64c4a87419bdaa0979b413839f12e29ea5f3e33807fe67b3a5ac", "class_name": "RelatedNodeInfo"}, {"node_id": "4f312346-7d5b-4cbf-b9f4-ffbb252900c2", "node_type": "1", "metadata": {}, "hash": "3366ada638fed05162fc6204b817953cfbe7407979786ee7f6e08c537c21a267", "class_name": "RelatedNodeInfo"}, {"node_id": "b051a8aa-6fa2-42e0-9753-96b7c2c1794a", "node_type": "1", "metadata": {}, "hash": "7543704788e9c84ec89f3e245239b3f050f953ff5c626e2494302c848de78862", "class_name": "RelatedNodeInfo"}]}, "text": "(CD 29) )))\n(. .) ))\n3.5.5 Gutenberg archive\nThe NLTK includes a small selection of out-of-copyright literary texts from Project\nGutenberg, an archive of free electronic books hosted at http://www.gutenberg.org/\nSome of the texts included are:\nJane Austen: Emma ,Persuasion\nGK Chesterton: Father Brown stories ,The Man Who Was Thursday\nWilliam Blake: Poems\nMilton: Paradise Lost\nShakespeare: Julius Caesar ,Macbeth ,Hamlet\n3.5.6 Other corpora\nSome further corpora included with the NLTK are:\nThe Reuters corpus distributed with the NLTK contains 10,788 news documents\ntotalling 1.3m words, partitioned into \u2018training\u2019 and \u2018test\u2019 sets. This split is for\ntraining and testing machine learning algorithms: we return to this topic in\nChapter 5 of this subject guide.\n36\n\nCorpora\nUS Presidents\u2019 inaugural and State of the Union addresses, organised as separate\n\ufb01les.\nUN Declaration of Human Rights in 300+ languages. Here are a few excerpts:\n\u000fAll human beings are born free and equal in dignity and rights.\n\u000fAbantu bonke bazalwa bekhululekile njalo belingana kumalungelo abo .\n\u000fTodos os seres humanos nascem livres e iguais em dignidade e em direitos .\nOther corpora with online query interfaces include:\n1. The Corpus of Contemporary American English, hosted at Brigham Young\nUniversity, is claimed to be \u2018the only large and balanced corpus of American\nEnglish\u2019. http://corpus.byu.edu/coca/ (last visited 27th May 2013)\n2. The Intellitext project at the University of Leeds \u2018aims to facilitate corpus use for\nacademics working in various areas of the humanities\u2019 and currently provides\naccess to monolingual and parallel corpora in several European and Asian\nlanguages. http://corpus.leeds.ac.uk/it/ (last visited 27th May 2013)\nLearning activity\n1. Pick two or three of the corpora mentioned above and research them online, focusing on questions\nsuch as:\nhow large is the corpus?\nwhat language(s) and genre(s) does it represent?\nwhen was it constructed and what is its intended use?\nwhat is the sampling frame?", "mimetype": "text/plain", "start_char_idx": 1406, "end_char_idx": 3413, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c853d148-7048-4b17-a508-9043e42101ce": {"__data__": {"id_": "c853d148-7048-4b17-a508-9043e42101ce", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ec3c6d6f-16ea-4410-8ce9-2095469f1087", "node_type": "1", "metadata": {}, "hash": "92c514bb3485b55d66ccb53cc40fda37ee8bca63115fd3d73ed14f485a562b95", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "412fa60f-8bac-447e-b1ee-d0fb7494c16c", "node_type": "1", "metadata": {}, "hash": "afebe6d95348ffdc802655920fdcc5af4ff143eec34b3e9135247742c2d09f04", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "b8f57bfc-9640-4afe-9e54-c053bd16691b", "node_type": "1", "metadata": {}, "hash": "48c0bb8813b5687ef6a24f53cbea9553ab868db9d4863be601d76ecf166facd1", "class_name": "RelatedNodeInfo"}, {"node_id": "a5908b7c-b7b3-40d4-9f0d-053c90b7bbb8", "node_type": "1", "metadata": {}, "hash": "55792c629b6395a81caf16439a9039b594fe5b082a79c95f4d830ade8f210265", "class_name": "RelatedNodeInfo"}, {"node_id": "5057ed14-d0eb-41de-858f-e5768958861f", "node_type": "1", "metadata": {}, "hash": "8b1085846c7d5cd270bcd312baafa83825080a047a5f5514a98bd35f6db8f961", "class_name": "RelatedNodeInfo"}, {"node_id": "80b38e19-be36-4e0a-8243-8105347245c9", "node_type": "1", "metadata": {}, "hash": "3392b02f1bd0016f2ade6b2046725d9170ece8468d3a8dec769a4c489a771881", "class_name": "RelatedNodeInfo"}, {"node_id": "d3f2be16-a68d-4617-8e7a-174fb368e777", "node_type": "1", "metadata": {}, "hash": "4731f95361c126fccefacda75d471c7a8b85224d01ba105f54a92d444149a077", "class_name": "RelatedNodeInfo"}]}, "text": "when was it constructed and what is its intended use?\nwhat is the sampling frame?\nwhat level of interannotator agreement was achieved, if reported?\n2. Logon to the BNC Web (free registration needed) or another online corpus. Study the documentation\nprovided and search for data to answer the following questions:\nWhat syntactic categories can the following words have? total,pancake ,requisition ,acquisition .\nThe guide to Simple Query Syntax provided with the BNC warns that \u2018part-of-speech tags have\nbeen assigned by an automatic software tool and are not always correct\u2019. Have your answers to\nthe previous question shown up any examples of incorrect classi\ufb01cation, in your view?\nWhat prepositions can follow the verb talk? Give an example in each case.\n3.5.7 WordNet\nThe NLTK also includes English WordNet, with 155,287 words and 117,659\nsynonym sets or synsets . A synset consists of a set of synonymous words paired with\na de\ufb01nition and linked to words with more general or more speci\ufb01c meanings. For\nexample, table has various meanings:\ntable.n.01 ['table', 'tabular\\_array'], \"a set of data arranged in\nrows and columns\"\ntable.n.02 ['table'], \"a piece of furniture having a smooth flat top\n37\n\nCO3354 Introduction to natural language processing\nthat is usually supported by one or more vertical legs\"\ntable.n.02 hyponyms: drop-leaf\\_table, coffee\\_table, pool\\_table, altar,\ntable.n.02 hypernyms: furniture\n3.6 Some basic corpus analysis\nThis chapter describes some relatively simple techniques, extracting various kinds of\ndata in suitable formats for human interpretation of the results. Chapters 4 and 5 of\nthe subject guide will look at ways the analysis and interpretation itself can be\nautomated to varying degrees.\nConcordancing involves locating every instance of a word or phrase within a text or\ncorpus and presenting it in context, usually a \ufb01xed number of words before and\nafter each occurrence.\nCollocations are pairs of sequences of words that occur together in a text more\nfrequently than would be expected by chance, and so provide a rough indication\nof the content or style of a document.\nConditional frequency distributions support an elementary form of statistical\nanalysis.", "mimetype": "text/plain", "start_char_idx": 3332, "end_char_idx": 5533, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6fa6ed9a-547b-4f00-8761-032f734588ab": {"__data__": {"id_": "6fa6ed9a-547b-4f00-8761-032f734588ab", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c853d148-7048-4b17-a508-9043e42101ce", "node_type": "1", "metadata": {}, "hash": "b34d4428acc597246c8b804cc231e2d1f3d01ef268caf55ecb429d6c241d64bf", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "412fa60f-8bac-447e-b1ee-d0fb7494c16c", "node_type": "1", "metadata": {}, "hash": "afebe6d95348ffdc802655920fdcc5af4ff143eec34b3e9135247742c2d09f04", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "3274847c-28ec-4afc-bd53-40e62cfac0ae", "node_type": "1", "metadata": {}, "hash": "3478711841ce96c323fa453c52e164f4c8a99230dc1dd745feebbdc915cdd7bb", "class_name": "RelatedNodeInfo"}, {"node_id": "8ccf9d8c-7152-472f-a070-2786ee0d6260", "node_type": "1", "metadata": {}, "hash": "25c14a565ef39efa84ea8b81ec776acb8df86168014cad3d240a23725a2201ce", "class_name": "RelatedNodeInfo"}, {"node_id": "f28753c9-9dfd-4076-b4c9-84e177465b6c", "node_type": "1", "metadata": {}, "hash": "fd055d6fd5b107d41f0dbb4bc2f6629133ad38149ca962a44d4f740a2c2c317f", "class_name": "RelatedNodeInfo"}, {"node_id": "b8a2f7c3-4229-46d1-8af9-fec3899e081a", "node_type": "1", "metadata": {}, "hash": "5c91bc5f78266282356f6cda59e72037c5d458ac4572c767f337a778a6ded0f0", "class_name": "RelatedNodeInfo"}, {"node_id": "d457a4c1-1502-4be4-a8c8-27a730346fb7", "node_type": "1", "metadata": {}, "hash": "b804eb1ef5df5abdebdcaafc58994655e6452e31418efdba8fe9abcb6db85b58", "class_name": "RelatedNodeInfo"}]}, "text": "Conditional frequency distributions support an elementary form of statistical\nanalysis. A frequency distribution counts observable events and a conditional\nfrequency distribution pairs each event with a condition. Some sample\napplications are:\nComparing the use of particular words in different genres.\nComparing word lengths in different languages.\n3.6.1 Frequency distributions\nThe following worked example displays some rudimentary stylistic analysis by\nranking the POS tags in a corpus according to frequency.\nCalculating tag frequency\n1. Import the Brown corpus.\n2. List the different categories within the corpus.\n3. Count the number of sentences in the science \ufb01ction category.\n4. Extract all the word tokens from the science \ufb01ction category, paired with their\ntags, and store them in the variable bsf. Note that the simpli\ufb01ed tagset is\nselected.\n5. Calculate a frequency distribution of the tags: this gives an ordered list of the\ntags paired with their frequency in the variable sftagfd. (Only the 12 most\nfrequent are shown.)\n>>> from nltk.corpus import brown\n>>> brown.categories()\n['adventure', 'belles_lettres', 'editorial', 'fiction',\n'government', 'hobbies', 'humor', 'learned', 'lore',\n38\n\nSome basic corpus analysis\n'mystery', 'news', 'religion', 'reviews', 'romance', 'science_fiction']\n>>> sf_sents = brown.sents(categories = 'science_fiction')\n>>> len(sf_sents)\n948\n>>> bsf = brown.tagged_words(categories = 'science_fiction',\nsimplify_tags=True)\n>>> sf_tag_fd = nltk.FreqDist(tag for (word,tag) in bsf)\n>>> sf_tag_fd.keys()\n['N', 'V', 'DET', 'PRO', 'P', '.', 'ADJ', ',', 'CNJ', 'ADV', 'VD', 'NP', ]\n>>> sf_tag_fd.tabulate()\nN V DET PRO P . ADJ , CNJ ADV VD NP\n2232 1473 1345 1268 1182 1078 793 791 685 644 531 467\nLearning activity\n1. Repeat the above process for other categories such as romance, news and religion. How do the\nfrequency distributions and sentence counts enable you to compare the literary styles of these\ngenres? Explain any assumptions you make.\n2.", "mimetype": "text/plain", "start_char_idx": 5446, "end_char_idx": 7434, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "eedf7998-053c-4daa-ab05-742ed7045c8a": {"__data__": {"id_": "eedf7998-053c-4daa-ab05-742ed7045c8a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6fa6ed9a-547b-4f00-8761-032f734588ab", "node_type": "1", "metadata": {}, "hash": "e41696f06b75e861834d7334242c73a810758c2e5d233b89c6ebe7e6c2a7aca9", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "412fa60f-8bac-447e-b1ee-d0fb7494c16c", "node_type": "1", "metadata": {}, "hash": "afebe6d95348ffdc802655920fdcc5af4ff143eec34b3e9135247742c2d09f04", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "5479d43b-2951-4481-abde-c6ff20ef385d", "node_type": "1", "metadata": {}, "hash": "b2018b5b3793c8eff8c4bbe9258d41541cfcb80b10d4b0c32deca963c823c2cc", "class_name": "RelatedNodeInfo"}]}, "text": "Explain any assumptions you make.\n2. Having read through Bird et al. (2009, section 2.1), with particular attention to Table 2-3 on page 50,\nanswer the following questions:\n(a) Summarise the README \ufb01le from the Reuters corpus.\n(b) Create a variable soysents containing all sentences from reports concerning soy products.\n(c) Display the \ufb01rst ten sentences in soysents .", "mimetype": "text/plain", "start_char_idx": 7398, "end_char_idx": 7767, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "60fee7ad-cef8-4586-a350-1acd16bd2450": {"__data__": {"id_": "60fee7ad-cef8-4586-a350-1acd16bd2450", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "894c1340-d0f6-454a-831c-28d42489f639", "node_type": "1", "metadata": {}, "hash": "53988cd050ed1668acdf68fbec4c88739f887cbd7a800b89c6c9caae40856066", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "3a0c6bc6-3737-4f0b-9f59-71bfae5f8f47", "node_type": "1", "metadata": {}, "hash": "dcb6dc0813de0d7d9b22e4acb7363db218dda82aab89e4a7d72f690a876b24c1", "class_name": "RelatedNodeInfo"}, {"node_id": "d6bfa225-16fd-47e6-a137-ce3ea552f8cf", "node_type": "1", "metadata": {}, "hash": "0ee07c5877d7ec3977f0b81cfebe0a388a8290e6235a9dd8e883b2ba0cac033c", "class_name": "RelatedNodeInfo"}, {"node_id": "da59beb8-d60d-4a24-8995-a626f17739dc", "node_type": "1", "metadata": {}, "hash": "966e00885310e59de51fd6422ba8f6bba7d17fc509d3c6fd51a07b615142ce54", "class_name": "RelatedNodeInfo"}, {"node_id": "9bbd732e-c81a-44f3-8c7d-a72e71e26fc9", "node_type": "1", "metadata": {}, "hash": "8c188d5c670b4fa6c5f551496ad3361778175accc2aeac124c7b574b45fcb300", "class_name": "RelatedNodeInfo"}, {"node_id": "d6916eb3-7fee-4541-b40f-36e0fb62fc52", "node_type": "1", "metadata": {}, "hash": "037aeed76c0ce8f11c7b0370bf1da12a4015b0fda01692b151712a04bd43a7df", "class_name": "RelatedNodeInfo"}, {"node_id": "a6aafa4b-e41b-4d58-9035-ceec79ab4332", "node_type": "1", "metadata": {}, "hash": "dc0c85099a47e621761e123a2cf34f85e3168b380c610d8b78188c8f9f49492e", "class_name": "RelatedNodeInfo"}]}, "text": "(c) Display the \ufb01rst ten sentences in soysents .\n(d) Create a variable metalwords containing all words from reports concerning metals.\n(e) What are the most frequently mentioned metals in this collection? Caution: why might this result\nbe less than 100 per cent reliable?\n3.6.2 DIY corpus: some worked examples\nNLTK\u2019s plain text corpus reader can be used to build a \u2018corpus\u2019 from a collection of\ntext \ufb01les. The resulting corpus will be formatted for access as raw text, lists of words\nor lists of sentences and can be re-formatted for other functions such as\nconcordancing and \ufb01nding collocations.\nThe \ufb01rst example involves a one-text \u2018corpus\u2019 of the recent report from the UK\nEquality and Human Rights Commission: How fair is Britain ?\nStep 1 Download the report as a PDF from http://www.equalityhumanrights.com\nStep 2 Manually extract text using Adobe Acrobat or another PDF reader and save\nas a .txt \ufb01le\nStep 3 Point the corpus reader to the directory where you have saved the text \ufb01le.\n>>> import nltk\n>>> from nltk.corpus import PlaintextCorpusReader\n>>> corpus_root = 'C:\\NLP-stuff\\Corpora'\n>>> mycorpus = PlaintextCorpusReader(corpus_root,'.*')\n39\n\nCO3354 Introduction to natural language processing\nWe can now use the raw,words andsents methods to display the content in\ndifferent formats:\n>>> mycorpus.fileids()\n['howfair.txt']\n>>> mycorpus.words('howfair.txt')\n['Equality', 'and', 'Human', 'Rights', 'Commission', ]\n>>> hf_raw = mycorpus.raw('howfair.txt')\n>>> hf_raw[:100]\n'Equality and Human Rights Commission\\r\\nTriennial\nReview 2010\\r\\nExecutive Summary\\r\\nHow fair\\r\\nis Britain'\n>>> mycorpus.sents('howfair.txt')\n[['Equality', 'and', 'Human', 'Rights', 'Commission', 'Triennial',\n'Review', '2010', 'Executive', 'Summary', 'How', 'fair', 'is',\n'Britain', '?'], ...\nConcordancing and collocations\nTheText method formats the content in a way which can be accessed by the\nconcordance andcollocation methods.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1919, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2931e386-4f81-41fb-91ee-171dee4def7d": {"__data__": {"id_": "2931e386-4f81-41fb-91ee-171dee4def7d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "60fee7ad-cef8-4586-a350-1acd16bd2450", "node_type": "1", "metadata": {}, "hash": "c20aeafce45fb196a6af0dcde11323023bc97dc46757dd7370f82d8b8a6be74d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "894c1340-d0f6-454a-831c-28d42489f639", "node_type": "1", "metadata": {}, "hash": "53988cd050ed1668acdf68fbec4c88739f887cbd7a800b89c6c9caae40856066", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "4b9d9df8-7304-4e0b-ba3b-57938b86a92d", "node_type": "1", "metadata": {}, "hash": "90ff65e5d55e7d318507102c995670f7c62235b00e38ab77d135ffd8c16a1b96", "class_name": "RelatedNodeInfo"}, {"node_id": "e12aecfb-3cc6-4984-b3c4-295abf7d1569", "node_type": "1", "metadata": {}, "hash": "a2c15c5ab1ed059e11d6c839a55b56419875a0dc6d2e89e818361f62d631449b", "class_name": "RelatedNodeInfo"}, {"node_id": "79f34316-2bb1-45c5-9e2a-5b3f53d79745", "node_type": "1", "metadata": {}, "hash": "51277fe96735ad60d39b94773c8d775dbfdc895e51423595e4667fe61a73585f", "class_name": "RelatedNodeInfo"}, {"node_id": "2ba7f64a-93fc-4d1f-bcf8-0ae65be8dd58", "node_type": "1", "metadata": {}, "hash": "3d46f7ccf1c36bd4d17101287f95f32b5f5263131a527553179459ea35e4cb62", "class_name": "RelatedNodeInfo"}]}, "text": "Note that concordancing will always\nreturn \ufb01xed-length strings which include your target text as a substring, and so may\nbe cut off in the middle of a word.\n>>> fair=nltk.Text(mycorpus.words('howfair.txt'))\n>>> fair.concordance('equal')\nBuilding index...\nDisplaying 3 of 3 matches:\nhas narrowed considerably since the equal Pay Act 1970 came into force in 1975\nsonal circumstances , should have an equal opportunity to have a say in decisio\nthat every individual should have an equal chance to make the most of their tal\n>>> fair.collocations()\nBuilding collocations list\nHuman Rights; Rights Commission; Significant findings; Headline data;\nExecutive Summary; less likely; ethnic minority; life expectancy;\n0845 604; domestic violence; hate crime; labour market; disabled people;\nmental health; Black Caribbean; different groups; religiously motivated;\nsexual assault; minority groups; formal childcare\nConditional frequency distribution\nRecall that a frequency distribution is a set of ordered pairs <event; count>\nwhere count is the number of times event occurs. In our context event is a word-type\nandcount is the number of tokens of that type in a text. A conditional frequency\ndistribution is a collection of frequency distributions, each one for a different\ncondition.\nFor this example we add a second document to the corpus, extracted from a PDF\n\u2018Guide to data protection\u2019.\nStep 1 Create a single variable text word consisting of pairs of each word-token\nwith the \ufb01leid of the document it occurs in.\n40\n\nSummary\nStep 2 Create a conditional frequency distribution, which will tell you the frequency\nof each word in both texts.\nStep 3 Pick a sample of words which are likely to occur in both documents, and\ntabulate their comparative frequency.", "mimetype": "text/plain", "start_char_idx": 1920, "end_char_idx": 3670, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e415415a-706a-43a6-a9fe-ce2113ff0e6b": {"__data__": {"id_": "e415415a-706a-43a6-a9fe-ce2113ff0e6b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2931e386-4f81-41fb-91ee-171dee4def7d", "node_type": "1", "metadata": {}, "hash": "9a8c0456d3b3624a69e33a2232b87c7120620c96639eb2d13b68fba1aa3d71e2", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "894c1340-d0f6-454a-831c-28d42489f639", "node_type": "1", "metadata": {}, "hash": "53988cd050ed1668acdf68fbec4c88739f887cbd7a800b89c6c9caae40856066", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "bc9614c7-a204-4372-8074-e0feb1b95a3e", "node_type": "1", "metadata": {}, "hash": "693ad7ba16a5c339455c4fe8c0cba308dba61e13e09874c8a9d2c8f86066e599", "class_name": "RelatedNodeInfo"}, {"node_id": "9a0867e6-6abe-49bd-ab70-d90847bba751", "node_type": "1", "metadata": {}, "hash": "12a4ba99d55e3b1d9cfdc63bb02d10d2ce1d9ba922c789fb50656005e4fc3d80", "class_name": "RelatedNodeInfo"}, {"node_id": "62adb358-3073-421f-bd81-7da1f7525520", "node_type": "1", "metadata": {}, "hash": "cfe50b8229349d1365293e8d75d157fcd89acdb74bea07b4d50e4104985aa55b", "class_name": "RelatedNodeInfo"}, {"node_id": "089cf8b8-8d6a-4340-a187-778043d3d95b", "node_type": "1", "metadata": {}, "hash": "9cac662d21bcfe95a2cf2931234a9eee0dec18adaef189ec1d25b62ffd7afb49", "class_name": "RelatedNodeInfo"}, {"node_id": "48353f9c-d44d-41f0-8e9c-435f0b6c902c", "node_type": "1", "metadata": {}, "hash": "73940264a598787badc7cfd3638bf599e29d38eedd3fc2b30cc02ad3cb0a9239", "class_name": "RelatedNodeInfo"}]}, "text": ">>> text_word = [(text,word) for text in ['howfair.txt','guide.txt']\nfor word in mycorpus.words(text)]\n>>> text_word[:10]\n[('howfair.txt', 'Equality'), ('howfair.txt', 'and'),\n('howfair.txt', 'Human'),('howfair.txt', 'Rights'),\n('howfair.txt', 'Commission'), ('howfair.txt', 'Triennial'),\n('howfair.txt', 'Review'), ('howfair.txt', '2010'),\n('howfair.txt', 'Executive'),\n('howfair.txt', 'Summary')]\n>>> cfd = nltk.ConditionalFreqDist(text_word)\n>>> cfd\n<ConditionalFreqDist with 2 conditions>\n>>> cfd.conditions()\n['guide.txt', 'howfair.txt']\n>>> cfd['howfair.txt']\n<FreqDist with 16391 outcomes>\n>>> cfd['guide.txt']\n<FreqDist with 47064 outcomes>\nTesting the CFD\n>>> cfd['guide.txt']['fair']\n31\n>>> cfd['howfair.txt']['fair']\n30\n>>> keywords = ['fair','police','crime','office','equal','privacy']\n>>>>cfd.tabulate(conditions=['howfair.txt','guide.txt'],\nsamples=keywords)\nfair police crime office equal privacy\nhowfair.txt 30 15 29 4 2 0\nguide.txt 31 16 17 2 0 26\nLearning activity\nFind some suitable electronic documents and follow the above techniques to construct a \u2018mini-corpus\u2019. The\ndocuments in these examples were sourced from UK government websites: you may \ufb01nd similar\ndocuments on the website of your own country\u2019s government, or of transnational organisations like the\nEuropean Union or the United Nations. Think of some terms which are likely to occur in several of these\ndocuments and compare them using a conditional frequency distribution. If you can \ufb01nd a lengthy report\nwhich is issued along with a shorter summary, it is an interesting exercise to pick some key terms and see if\ntheir comparative frequency is the same or similar in the original document and the summary.\n3.7 Summary\n1. A corpus is a collection of linguistic data which was not originally produced for\nthe purposes of linguistic analysis. Properly speaking it should be constructed so\nas to be balanced and representative.", "mimetype": "text/plain", "start_char_idx": 3671, "end_char_idx": 5580, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "13d4710c-a3b5-4ad4-9568-3ea329cf181d": {"__data__": {"id_": "13d4710c-a3b5-4ad4-9568-3ea329cf181d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e415415a-706a-43a6-a9fe-ce2113ff0e6b", "node_type": "1", "metadata": {}, "hash": "7747126a1130e798b89737f576afe01f0f30d56072bbdfe011064081dbcdc04b", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "894c1340-d0f6-454a-831c-28d42489f639", "node_type": "1", "metadata": {}, "hash": "53988cd050ed1668acdf68fbec4c88739f887cbd7a800b89c6c9caae40856066", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "5cf5534b-c344-4867-9981-625c04333a39", "node_type": "1", "metadata": {}, "hash": "5bae5f40e6f17ba7620816b97e5b51a477ea94a42c4e14d89621c3859319ddd1", "class_name": "RelatedNodeInfo"}, {"node_id": "2ebeeff5-8495-4db2-82bf-322ec2127124", "node_type": "1", "metadata": {}, "hash": "6a9b3e105671e5d314cc0968cb465932fe3ae108312f313d428f2d6529b11ed1", "class_name": "RelatedNodeInfo"}, {"node_id": "7957cf29-c73f-448d-b81a-8194a1d25fa8", "node_type": "1", "metadata": {}, "hash": "9c2d5ae413d046e6d3268d300c51974e6ee131adc9aba79c6a1335e63268ad61", "class_name": "RelatedNodeInfo"}, {"node_id": "b125293c-a311-476d-9887-60187fe62823", "node_type": "1", "metadata": {}, "hash": "d3e00961239388e4b51803ba80a779a18ecf41b2246f17bbba26b98a9ee0c841", "class_name": "RelatedNodeInfo"}, {"node_id": "3f03f971-d411-4b94-9723-de077acda599", "node_type": "1", "metadata": {}, "hash": "d306dbab8ce5fc524fbf0a71d8c99cb799c7351a5e5e560d4f82f09906b37185", "class_name": "RelatedNodeInfo"}]}, "text": "Properly speaking it should be constructed so\nas to be balanced and representative. If a corpus includes any kind of\n41\n\nCO3354 Introduction to natural language processing\nannotation, it is good practice to use multiple annotators for at least a sample of\nthe corpus and report the level of inter-annotator agreement that was\nachieved.\n2. Some uses of corpora include:\nLexicography (compiling dictionaries).\nCompiling grammars for education and reference purposes.\nStylistics: developing techniques to identify the author or genre of a\ndocument; investigating the effect on language use of different channels\nsuch as email, chat, face-to-face conversation, telephone calls and\nhand-written letters.\nTraining and evaluation in linguistic research, using machine learning\ntechniques.\n3. This chapter includes brief descriptions of several well-known and widely-used\ncorpora such as the Brown corpus, the BNC and the Penn Treebank.\n4. Students on this course can access a variety of corpora through online interfaces\nor by using corpus tools provided with the NLTK.\n5. Some simple techniques for analysing corpora include concordancing,\ncollocations and (conditional) frequency distributions. None of these techniques\ninvolve automated linguistic analysis: the interpretation of the outputs is down\nto the analyst.\n3.8 Sample examination question\na) Explain what is meant by the following types of corpus, and describe an example\nin each category that you have encountered during this course:\nisolated\ncategorised\noverlapping\ntemporal.\nb) What applications would a tagged andparsed corpus be suitable for? What are\nsome advantages and disadvantages of using an automated tagger to build such a\ncorpus?\nc) Suppose the following lists show the number of sentences and the most commonly\noccurring part-of-speech tags in three different categories of text in a corpus, with\ntheir frequency of occurrence in brackets. What can you say about the styles of these\ndocuments from studying these results? Discuss any assumptions you make.\nCategory A (4623 sentences) N (22236) P (10845) DET (10648) NP (8336) V\n(7346) ADJ (5435) \u2018,\u2019 (5188) \u2018.\u2019 (4472) CNJ (4227) PRO (3408) ADV (2770) VD\n(2531) . . .", "mimetype": "text/plain", "start_char_idx": 5497, "end_char_idx": 7683, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4b7cbe1b-3050-473f-846e-610ca9efa68b": {"__data__": {"id_": "4b7cbe1b-3050-473f-846e-610ca9efa68b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "13d4710c-a3b5-4ad4-9568-3ea329cf181d", "node_type": "1", "metadata": {}, "hash": "002867e7573102046aed83aace87a8e80895fff1d4a2f68ae88418c323d42405", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "894c1340-d0f6-454a-831c-28d42489f639", "node_type": "1", "metadata": {}, "hash": "53988cd050ed1668acdf68fbec4c88739f887cbd7a800b89c6c9caae40856066", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "baf81663-2302-4a01-b9ba-258b8e310aef", "node_type": "1", "metadata": {}, "hash": "b663815fe83d38788b2bad3f2e295e1ae797a0cd949b419e2dbb2a75cb28cfb4", "class_name": "RelatedNodeInfo"}, {"node_id": "efd95743-4377-4a43-be40-6cd4a74d4289", "node_type": "1", "metadata": {}, "hash": "4bb8ddcebee157763890de4e2805d6c145b76792d7a76e5cdc88e94d4d25b85e", "class_name": "RelatedNodeInfo"}, {"node_id": "512a2ce5-1d82-4fcc-911c-772c9a384a42", "node_type": "1", "metadata": {}, "hash": "c2b3b32bd8239ffcec09c9241c676e50f66030b8cabb6f2df6eecfba6ad60814", "class_name": "RelatedNodeInfo"}]}, "text": ". .\nCategory B (948 sentences) N (2232) V (1473) DET (1345) PRO (1268) P (1182)\n\u2018.\u2019 (1078) ADJ (793) \u2018,\u2019 (791) CNJ (685) ADV (644) VD (531) NP (467) . . .\nCategory C (1716 sentences) N (7304) P (4364) DET (4239) V (3863) ADJ (2620)\nCNJ (2324) PRO (2243) \u2018,\u2019 (1913) \u2018.\u2019 (1892) ADV (1485) NP (1224) VN (952)\n. . .\n42\n\nAppendix C\nAnswers to selected activities\nThis section includes model solutions to some of the exercises and activities where\nappropriate. In other cases there is no \u2018correct\u2019 answer and the point of the activity is\nto stimulate you to engage in independent self-directed learning.", "mimetype": "text/plain", "start_char_idx": 7680, "end_char_idx": 8277, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0a61637e-320a-4481-bfdd-042145a23dd3": {"__data__": {"id_": "0a61637e-320a-4481-bfdd-042145a23dd3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6524832a-950a-4bb3-abd9-acbe57ba2406", "node_type": "1", "metadata": {}, "hash": "679e099a6cf523a8ad791698c5c6ef3eaefabc0ad74f1da8627b7424dcf0cc38", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "90a81d39-71c8-4b66-8eec-78e356a2dcda", "node_type": "1", "metadata": {}, "hash": "3bed9f50a78e649946b236092c824e40d92a0da7cd7c7abde1c4d054eb13000e", "class_name": "RelatedNodeInfo"}, {"node_id": "c89328be-a227-4ad6-89c6-702be9e8c7a4", "node_type": "1", "metadata": {}, "hash": "0c339f5ff419420a24d4adb149105a3deaf00df285574a29e53efbdc33e5f890", "class_name": "RelatedNodeInfo"}, {"node_id": "8a3350cc-cf7a-4160-9acc-41f1eaed15eb", "node_type": "1", "metadata": {}, "hash": "029af59867c0785e8b6dd4ce07aea0af8757c73f12b9c42fc8e12b08e914ed6a", "class_name": "RelatedNodeInfo"}, {"node_id": "36282591-77e2-4472-8f10-ca5f240a3164", "node_type": "1", "metadata": {}, "hash": "1a996ad62582dd9fd33cc9703772ff6d2e2e922a21e6bc821ac2f88151dee8c7", "class_name": "RelatedNodeInfo"}, {"node_id": "aca74c6a-d8af-4d20-96e3-31bffda771db", "node_type": "1", "metadata": {}, "hash": "19eb7a0e128f29d68c6c5dffec9c901c02892505f3065337a09af395a329386f", "class_name": "RelatedNodeInfo"}, {"node_id": "c02b0dc0-657d-4bf8-8128-ed701d136328", "node_type": "1", "metadata": {}, "hash": "d42a5e468d2897498ba556bd746a7ccd08e1f24712cbd32679952a429d673941", "class_name": "RelatedNodeInfo"}]}, "text": "Chapter 2: Introducing NLP: patterns and structure in natural\nlanguage\nIdentify parts of speech, page 14\nJack (Proper Noun) and(conjunction) Jill(Proper Noun) went (verb) up\n(preposition) the(determiner) hill(noun) .\nThe(determiner) owl(noun) and(conjunction) the(determiner) pussycat (noun)\nwent (verb) to(preposition) sea(noun) .\nOperation of a \ufb01nite-state machine, page 17\n1. John swam.\n2. (a) John and Mary walked on the hill.\n(b) The cat sat on the mat and slept.\n(c) John or a \ufb01sh walked on a hill and barked.\n(d) . . .\nCoding regular expressions, page 19\n1. a(aa)*(bb)*\n2. (aaa)j(aab)j(abb)j(bbb)j(bba)j(baa)j(aba)j(bab)\n97\n\nCO3354 Introduction to natural language processing\nRegular grammars, page 21\nS!eitherjif S1\nS!thejajone S2\nS2!happy S2\nS2!(boyjgirljdog) eats (\u2018ice cream\u2019 j\u2018hot dogs\u2019jcandy) S3\nS3!orjthen S2\nS3!\u000f\nThis is a slightly idealised rendering of Pinker\u2019s state diagram which appears to have\nno halting state.\nThe problem with this grammar can be clearly seen: the rule S3!orjthen S2 has\nno connection with the rule that introduces either orifand so there is no way to\nensure that the appropriate conjunction is used.\nPast tense forms, page 25\nThe general idea is that rules need to be conditional in order to handle\nnon-standard cases before applying general regularities: so a reasonable rule based\non this data set might be:\nwelcome!welcomed else\n-come!-came\nChapter 3: Getting to grips with natural language data\nOnline corpus queries, page 37\nExamples of incorrect tagging: search on to total/V gives examples like:\n. . . a ticket to total oblivion.\n. . . to describe it to total strangers.\nas well as \u2018correct\u2019 examples like\n. . .", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1659, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e0d641ad-f162-4be8-97fe-7e6e671ec6d9": {"__data__": {"id_": "e0d641ad-f162-4be8-97fe-7e6e671ec6d9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0a61637e-320a-4481-bfdd-042145a23dd3", "node_type": "1", "metadata": {}, "hash": "1e2443c1ed5466c2086c9796725b6e0b5c48145cbe91787fc69d271176f420e1", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6524832a-950a-4bb3-abd9-acbe57ba2406", "node_type": "1", "metadata": {}, "hash": "679e099a6cf523a8ad791698c5c6ef3eaefabc0ad74f1da8627b7424dcf0cc38", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "7000890f-6c66-4c35-ac05-d1324d36e0b2", "node_type": "1", "metadata": {}, "hash": "c79bad091baad1ad06519959145b74a214e51949174e7d50029f3a26915dec81", "class_name": "RelatedNodeInfo"}, {"node_id": "b4d9eb1b-bd4b-4a00-a367-7fac4d148c33", "node_type": "1", "metadata": {}, "hash": "ef0d2a75a3acfc22b7b0280d4061a62549dce2f47748fbbf050f7d1248000a0f", "class_name": "RelatedNodeInfo"}, {"node_id": "2d8e528d-85fb-43ea-b81a-050ce0549a3b", "node_type": "1", "metadata": {}, "hash": "017e76e8442b8a0622d2371be35a0f3b626bd51139f218859df198d1ea15ba67", "class_name": "RelatedNodeInfo"}, {"node_id": "9f0e2522-b906-463d-8ee4-d856dec7524c", "node_type": "1", "metadata": {}, "hash": "7232bf80928ae02e2bea85532ef5f0df2ecc442727829943e29b62c609398861", "class_name": "RelatedNodeInfo"}, {"node_id": "060ea210-9f25-4d8f-bd2e-970a21df63db", "node_type": "1", "metadata": {}, "hash": "52013ce9fee24a43891328d81dd5337e4695b8943e91aa7a0089c1b31e80aecd", "class_name": "RelatedNodeInfo"}, {"node_id": "770a95a6-a554-4e3f-a62f-56782fbc559c", "node_type": "1", "metadata": {}, "hash": "fa282c183237fd2f00fd0eea279703fae4649c1ef3116682644bc4c4bacff3a4", "class_name": "RelatedNodeInfo"}]}, "text": "as well as \u2018correct\u2019 examples like\n. . . thought to total about 1,500 families . . .\n. . . a great opportunity to total and celebrate all the small wins made over the\nyear\n98\n\nAPPENDIX C. ANSWERS TO SELECTED ACTIVITIES\nUsing NLTK tools, page 39\n1. \u2018Stylistic\u2019 analysis\nScience Fiction (948 sentences) N (2232) V (1473) DET (1345) PRO (1268) P\n(1182) \u2018.\u2019 (1078) ADJ (793) \u2018,\u2019 (791) CNJ (685) ADV (644) VD (531) NP (467)\n. . .\nNews (4623 sentences) N (22236) P (10845) DET (10648) NP (8336) V (7346)\nADJ (5435) \u2018,\u2019 (5188) \u2018.\u2019 (4472) CNJ (4227) PRO (3408) ADV (2770) VD (2531)\n. . .\nReligion (1716 sentences) N (7304) P (4364) DET (4239) V (3863) ADJ (2620)\nCNJ (2324) PRO (2243) \u2018,\u2019 (1913) \u2018.\u2019 (1892) ADV (1485) NP (1224) VN (952)\n. . .\nSome counts:\nSF: N 2232, PRO 1268, NP 467 ADJ 793\nNE: N 22236, NP 8336, PRO 3408 ADJ 5435\nRE: N 7304, PRO 2243 NP 1224 ADJ 2620\nSF: S 948, COMMA 791, CNJ 685\nNE: COM 5188 S 4623 CNJ 4227\nRE: CNJ 2324 COM 1913 S 1716\nSome tentative conclusions:\n1. Reference and description: both SF and RE use pronouns more than proper\nnames; News has more proper names. Hard to interpret without further\nanalysis: if an SF work includes a lot of dialogue for example, it might be more\nnatural for characters to refer to each other as I, we, you and so on rather than\nby name.", "mimetype": "text/plain", "start_char_idx": 1619, "end_char_idx": 2913, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0c5ca7cb-de13-4d4d-add2-c603d231e3e6": {"__data__": {"id_": "0c5ca7cb-de13-4d4d-add2-c603d231e3e6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e0d641ad-f162-4be8-97fe-7e6e671ec6d9", "node_type": "1", "metadata": {}, "hash": "7fc3b20ccd58d10e00fdb313950d0c30a7afb8c6e12b6127459d4c2074d97971", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6524832a-950a-4bb3-abd9-acbe57ba2406", "node_type": "1", "metadata": {}, "hash": "679e099a6cf523a8ad791698c5c6ef3eaefabc0ad74f1da8627b7424dcf0cc38", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "2f72524d-9ce1-40fd-a620-10e1463d27ee", "node_type": "1", "metadata": {}, "hash": "1ca5bbf74d70d021258251f54f6165e5b9764724f4def00ba300233749c35abd", "class_name": "RelatedNodeInfo"}, {"node_id": "13863cee-ffc5-4598-a4bb-f9dd160aa6cb", "node_type": "1", "metadata": {}, "hash": "88932f0bcbf1eb64d07e0413606aaed9d0cf2c8a221fe481804221304ae02d12", "class_name": "RelatedNodeInfo"}, {"node_id": "653b143f-7277-484a-8f4e-66d24977ad96", "node_type": "1", "metadata": {}, "hash": "6b38575f158feeb4eb88160135fa51333e41b8bc5515d29ebf02303bfc93a3b8", "class_name": "RelatedNodeInfo"}, {"node_id": "92c3296a-f7db-491c-8584-2728897cfe6d", "node_type": "1", "metadata": {}, "hash": "fb98eb69127e40ace324f95c242937b2c8a072d8659408493fc680175f9c7885", "class_name": "RelatedNodeInfo"}]}, "text": "And news stories tend to be about named individuals.\n2. Syntactic complexity: we cannot be very precise with this data but it looks as if\nthe SF genre has the least syntactic complexity and the RE genre the highest,\njudging from the numbers of commas and conjunctions per sentence. Of course\nwe cannot tell whether these tokens are connecting clauses or other types of\nphrases.\nIn an examination or coursework question, you would get credit for discussing these\nand other characteristics in the light of your impressionistic understanding of the\ntypical styles for these genres.\n2. Reuters\nDisplay the README \ufb01le from the Reuters corpus.\nfrom nltk.corpus import reuters\ndesc = reuters.readme()\nprint desc\n99\n\nCO3354 Introduction to natural language processing\nCreate a variable soysents containing all sentences from reports concerning soy\nproducts.\nreuters.categories()\nPick out categories relating to soy:\nsoysents = reuters.sents(categories=['soy-meal', ...])\nDisplay the \ufb01rst ten sentences in soysents .\nprint soysents[:10]\nCreate a variable metalwords containing all words from reports concerning\nmetals.\nmetalwords = reuters.words(categories = ['alum','copper','gold', ...])\n(Note that inspection of texts in the alum category con\ufb01rms that they are about\naluminium.)\nWhat are the most frequently mentioned metals in this collection? Caution: why\nmight this result be less than 100 per cent reliable?\nfrom nltk.book import *\nfreqmetal = FreqDist(metalwords)\nfreqmetalkeys = freqmetal.keys()\nfreqmetal[:100]\nRemember that the contents of a frequency distribution are listed in the order of\ntheir frequency of occurrence. By scanning the output you should see that the\n\ufb01rst three metals listed are gold, copper and steel. However caution is in order\nas Reuters is an overlapping corpus, so we may be double-counting some\noccurrences. These metals may also be mentioned under the category\nstrategic-metal , or some reports may mention more than one kind of metal\nand so come under multiple categories.\nChapter 4: Computational tools for text analysis\nComparing stemmers, page 48\nLancaster rules Remove ist/s/e/ing/en/th/ity/ate/al/a/ed/ment/ation .", "mimetype": "text/plain", "start_char_idx": 2914, "end_char_idx": 5064, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f5bfda18-f49e-4d83-b4de-20046679630a": {"__data__": {"id_": "f5bfda18-f49e-4d83-b4de-20046679630a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0c5ca7cb-de13-4d4d-add2-c603d231e3e6", "node_type": "1", "metadata": {}, "hash": "481a59a064478bd2dca3c7a64b4b79327d371adc942fe1db80167209f8d3cd37", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6524832a-950a-4bb3-abd9-acbe57ba2406", "node_type": "1", "metadata": {}, "hash": "679e099a6cf523a8ad791698c5c6ef3eaefabc0ad74f1da8627b7424dcf0cc38", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "600ecab5-5a16-4890-8eea-c9d46ab95c2e", "node_type": "1", "metadata": {}, "hash": "025cd0c0ceeaf2add0acbe1852c70ba5e65e97f38a57f89b8dc7d91d91dbe00a", "class_name": "RelatedNodeInfo"}, {"node_id": "29b76b15-96b4-4dec-a700-71995085daf0", "node_type": "1", "metadata": {}, "hash": "62be52373e7ff5320be6ef5eda1fe7ae43654a9c2bafe613d4516ff650629f1c", "class_name": "RelatedNodeInfo"}]}, "text": "Replace -ieswith -y.\nSome motivations: reduce verbs to stem form, remove plural af\ufb01x and\nreturn stem in irregular cases ( study ), remove ordinal af\ufb01x -th, remove\naf\ufb01xes that form nominalisations or adjectives: - ment ,-al.\nPorter rules Remove s/ing/ity/e/ate/ed/ment/ational .\nReplace -ywith -i.\nMotivations: similar to Lancaster rules but applied more sparingly.\nErrors Lancaster removes -thfrom south as if it were an ordinal and -efrom are\nthough aris not a stem here; not clear why -aremoved from area. Lancaster and\nPorter both treat some proper names as common nouns; for example, by\nremoving the last letter from Lyons andStanhope (both) or by postulating an -i\nstem for names ending in -y(Porter).\n100", "mimetype": "text/plain", "start_char_idx": 5065, "end_char_idx": 5775, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "64b393fc-fc47-4ba5-9e54-86cd37dc4bf1": {"__data__": {"id_": "64b393fc-fc47-4ba5-9e54-86cd37dc4bf1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "74b8c932-c6b7-41f5-91e0-c6a20d3ef13a", "node_type": "1", "metadata": {}, "hash": "86d33656952aac8d71d62b37b0a595fba516c3cbbf50c65325d6a4d879aba673", "class_name": "RelatedNodeInfo"}}, "text": "Introduction to natural\nlanguage processing\nR. Kibble\nCO3354\n2013\nUndergraduate study in \nComputing and related programmes\nThis is an extract from a subject guide for an undergraduate course offered as part of the \nUniversity of London International Programmes in Computing. Materials for these programmes are developed by academics at Goldsmiths.\nFor more information, see: www.londoninternational.ac.uk\n\nThis guide was prepared for the University of London International Programmes by:\nR. KibbleThis is one of a series of subject guides published by the University.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 567, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b3124ff6-651e-47cf-9d2c-c654b988282b": {"__data__": {"id_": "b3124ff6-651e-47cf-9d2c-c654b988282b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "64b393fc-fc47-4ba5-9e54-86cd37dc4bf1", "node_type": "1", "metadata": {}, "hash": "30f39f61101653da00f7723589900bcde6f6b58ec61ab409c972eb3dbb950da7", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "74b8c932-c6b7-41f5-91e0-c6a20d3ef13a", "node_type": "1", "metadata": {}, "hash": "86d33656952aac8d71d62b37b0a595fba516c3cbbf50c65325d6a4d879aba673", "class_name": "RelatedNodeInfo"}}, "text": "We regret that due to pressure of work the author is \nunable to enter into any correspondence relating to, or arising from, the guide. If you have any comments on this subject guide, favourable or unfavourable, please use the form at the back of this guide.", "mimetype": "text/plain", "start_char_idx": 568, "end_char_idx": 825, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "52686205-a159-4572-b140-d1cb8540d486": {"__data__": {"id_": "52686205-a159-4572-b140-d1cb8540d486", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b3124ff6-651e-47cf-9d2c-c654b988282b", "node_type": "1", "metadata": {}, "hash": "d1c4179b81ea6bde08dc86473508957cc8534077cde969d8173fe09fa15a1559", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "74b8c932-c6b7-41f5-91e0-c6a20d3ef13a", "node_type": "1", "metadata": {}, "hash": "86d33656952aac8d71d62b37b0a595fba516c3cbbf50c65325d6a4d879aba673", "class_name": "RelatedNodeInfo"}}, "text": "University of London International Programmes \nPublications Office 32 Russell Square London WC1B 5DN United Kingdom \nwww.londoninternational.ac.uk\nPublished by: University of London \nCopyright \u00a9 Department of Computing, Goldsmiths 2013\nThe University of London and Goldsmiths assert copyright over all material in this subject guide except where otherwise \nindicated. All rights reserved. No part of this work may be reproduced in any form, or by any means, without permission in writing from the publisher. We make every effort to respect copyright.", "mimetype": "text/plain", "start_char_idx": 826, "end_char_idx": 1376, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "94af2a57-93e1-4ce8-9ce0-dbf9b8b32749": {"__data__": {"id_": "94af2a57-93e1-4ce8-9ce0-dbf9b8b32749", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "52686205-a159-4572-b140-d1cb8540d486", "node_type": "1", "metadata": {}, "hash": "19431263179382aa55228a80eeb94c2eb01b3c25fb1e76b849f30b2e36004c1d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "74b8c932-c6b7-41f5-91e0-c6a20d3ef13a", "node_type": "1", "metadata": {}, "hash": "86d33656952aac8d71d62b37b0a595fba516c3cbbf50c65325d6a4d879aba673", "class_name": "RelatedNodeInfo"}}, "text": "We make every effort to respect copyright. If you think we have inadvertently used your copyright material, please let us know.\n\nContents\nPreface 1\nAbout this half unit . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 1\nAssessment . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 1334, "end_char_idx": 1603, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "09b63a4d-ccb2-4e21-9a27-da05e3108553": {"__data__": {"id_": "09b63a4d-ccb2-4e21-9a27-da05e3108553", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "94af2a57-93e1-4ce8-9ce0-dbf9b8b32749", "node_type": "1", "metadata": {}, "hash": "74d98f53bc2c01293b65517ff378afdd87a4a30301e4dd86f5c706cfdc4293fd", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "74b8c932-c6b7-41f5-91e0-c6a20d3ef13a", "node_type": "1", "metadata": {}, "hash": "86d33656952aac8d71d62b37b0a595fba516c3cbbf50c65325d6a4d879aba673", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 1\nThe subject guide and other learning resources . . . . . . . . . . . . . . . . 2\nSuggested study time . . . .", "mimetype": "text/plain", "start_char_idx": 1584, "end_char_idx": 1763, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3f775351-a3f2-4c33-b08f-9aaa193b9df2": {"__data__": {"id_": "3f775351-a3f2-4c33-b08f-9aaa193b9df2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b9071b6d-a92e-47b0-a73d-a116beafbbe1", "node_type": "1", "metadata": {}, "hash": "903f9e1ed863e828bf9a168651fb86a45698b74a8dc53b3658f223f27c767226", "class_name": "RelatedNodeInfo"}}, "text": ". . . 2\nSuggested study time . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2\nAcknowledgement . . . . . . . . . . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 158, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "de12f8c0-636d-4128-b0bc-a8d6d7cb1750": {"__data__": {"id_": "de12f8c0-636d-4128-b0bc-a8d6d7cb1750", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3f775351-a3f2-4c33-b08f-9aaa193b9df2", "node_type": "1", "metadata": {}, "hash": "9aa38495f68059753f3a61d93f4e574c9e790591fa71765f01a0429ff16755c3", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b9071b6d-a92e-47b0-a73d-a116beafbbe1", "node_type": "1", "metadata": {}, "hash": "903f9e1ed863e828bf9a168651fb86a45698b74a8dc53b3658f223f27c767226", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . . . . 3\n1 Introduction: how to use this subject guide 5\n1.1 Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 139, "end_char_idx": 305, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "06e2c2e2-40e8-4468-bba1-aa66a97c8aef": {"__data__": {"id_": "06e2c2e2-40e8-4468-bba1-aa66a97c8aef", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "de12f8c0-636d-4128-b0bc-a8d6d7cb1750", "node_type": "1", "metadata": {}, "hash": "3853dda6d2790e5f344425984c9819c2519ab61533faa8449097e711685c1a39", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b9071b6d-a92e-47b0-a73d-a116beafbbe1", "node_type": "1", "metadata": {}, "hash": "903f9e1ed863e828bf9a168651fb86a45698b74a8dc53b3658f223f27c767226", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . 5\n1.2 Aims of the course . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5\n1.3 Learning outcomes . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 286, "end_char_idx": 444, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3c046325-e860-415f-98ab-681be9fa9159": {"__data__": {"id_": "3c046325-e860-415f-98ab-681be9fa9159", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "06e2c2e2-40e8-4468-bba1-aa66a97c8aef", "node_type": "1", "metadata": {}, "hash": "374bb96f8a233b9ac712b74fef3f653fc13e48681233c0afa5f9077a3c90170e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b9071b6d-a92e-47b0-a73d-a116beafbbe1", "node_type": "1", "metadata": {}, "hash": "903f9e1ed863e828bf9a168651fb86a45698b74a8dc53b3658f223f27c767226", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . . . . . . . . . . 6\n1.4 Reading list and other learning resources . . . . . . . . . . . . . . . . . 6\n1.5 Software requirements . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 425, "end_char_idx": 610, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "769aacc9-d946-4337-8f03-c728a0d8a8d6": {"__data__": {"id_": "769aacc9-d946-4337-8f03-c728a0d8a8d6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3c046325-e860-415f-98ab-681be9fa9159", "node_type": "1", "metadata": {}, "hash": "8f01cf6bbcabb08e4d06a2a7454954946833b0c892428d1ee31ae9a66bd52cac", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b9071b6d-a92e-47b0-a73d-a116beafbbe1", "node_type": "1", "metadata": {}, "hash": "903f9e1ed863e828bf9a168651fb86a45698b74a8dc53b3658f223f27c767226", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . . . . . . . . . 8\n1.6 How to use the guide/structure of the course . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 591, "end_char_idx": 713, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b3859fe6-8e7b-4d29-a6c7-49c8b81b6d96": {"__data__": {"id_": "b3859fe6-8e7b-4d29-a6c7-49c8b81b6d96", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a0ac8be7-2343-4739-b1bf-b639d7a83627", "node_type": "1", "metadata": {}, "hash": "c2cf040724b60d5cbd179ba4455bc631338d5c61832b499d1352f41f119b0737", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . 8\n1.6.1 Chapter 2: Introducing NLP: patterns and structures in language 8\n1.6.2 Chapter 3: Getting to grips with natural language data . . . . . 8\n1.6.3 Chapter 4: Computational tools for text analysis . . . . . . . . . 9\n1.6.4 Chapter 5: Statistically-based techniques for text analysis . . .", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 313, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5eeaa7e6-8d18-45fe-a9cd-1a6bc944491a": {"__data__": {"id_": "5eeaa7e6-8d18-45fe-a9cd-1a6bc944491a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b3859fe6-8e7b-4d29-a6c7-49c8b81b6d96", "node_type": "1", "metadata": {}, "hash": "deb19662c06b24bbf630a936d84702d96582c3cfbedf0248f4710ba5d5872b68", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a0ac8be7-2343-4739-b1bf-b639d7a83627", "node_type": "1", "metadata": {}, "hash": "c2cf040724b60d5cbd179ba4455bc631338d5c61832b499d1352f41f119b0737", "class_name": "RelatedNodeInfo"}}, "text": ". . 9\n1.6.5 Chapter 6: Analysing sentences: syntax and parsing . . . . . . 9\n1.6.6 Appendices . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 9\n1.7 What the course does not cover . . . . . . .", "mimetype": "text/plain", "start_char_idx": 310, "end_char_idx": 512, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0ba589de-48d4-4c7e-9760-fd1b34ef0f48": {"__data__": {"id_": "0ba589de-48d4-4c7e-9760-fd1b34ef0f48", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5eeaa7e6-8d18-45fe-a9cd-1a6bc944491a", "node_type": "1", "metadata": {}, "hash": "aff1b9a41d5f4bb8979d628f457e224be93f6f9af5ba34c64d6fd26da2c6d3cf", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a0ac8be7-2343-4739-b1bf-b639d7a83627", "node_type": "1", "metadata": {}, "hash": "c2cf040724b60d5cbd179ba4455bc631338d5c61832b499d1352f41f119b0737", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . . . . . . . . 9\n2 Introducing NLP: patterns and structure in language 11\nEssential reading . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 11\nRecommended reading .", "mimetype": "text/plain", "start_char_idx": 501, "end_char_idx": 704, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "88906bf3-c206-4b3c-8df5-959bd316db29": {"__data__": {"id_": "88906bf3-c206-4b3c-8df5-959bd316db29", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0ba589de-48d4-4c7e-9760-fd1b34ef0f48", "node_type": "1", "metadata": {}, "hash": "2eda22b090662e90fe486712148999ffed82a6ab7dcfe884286681de181c9a5a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a0ac8be7-2343-4739-b1bf-b639d7a83627", "node_type": "1", "metadata": {}, "hash": "c2cf040724b60d5cbd179ba4455bc631338d5c61832b499d1352f41f119b0737", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . 11\nRecommended reading . . . . . . . . . . . . . . . . . . . . . . . . . . . 11\nAdditional reading . . . . . . . . . . . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 666, "end_char_idx": 830, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6629f93d-e1ec-4a70-a6c3-ad0916631bfb": {"__data__": {"id_": "6629f93d-e1ec-4a70-a6c3-ad0916631bfb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "88906bf3-c206-4b3c-8df5-959bd316db29", "node_type": "1", "metadata": {}, "hash": "2816dace15a56d2abc0b9bf32fbd0377de441c23465ef0b82e8fc242a96fa5d9", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a0ac8be7-2343-4739-b1bf-b639d7a83627", "node_type": "1", "metadata": {}, "hash": "c2cf040724b60d5cbd179ba4455bc631338d5c61832b499d1352f41f119b0737", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . 11\n2.1 Learning outcomes . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 811, "end_char_idx": 885, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a8e8b03b-687d-44d0-9ac4-e4626dca0505": {"__data__": {"id_": "a8e8b03b-687d-44d0-9ac4-e4626dca0505", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "7548a93b-2042-402d-9663-c9cf58f7af05", "node_type": "1", "metadata": {}, "hash": "a8355e5dbfe2b0ffe2fc7d03db126a8cebd7a0cf0fe0e01bf690243634403529", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . . . . . . . . . . . . . . 11\n2.2 Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 139, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d6efc806-1f57-40e6-8e6f-f74f92e83b10": {"__data__": {"id_": "d6efc806-1f57-40e6-8e6f-f74f92e83b10", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a8e8b03b-687d-44d0-9ac4-e4626dca0505", "node_type": "1", "metadata": {}, "hash": "7560509e70509f6e4863cc50d5a368c243b1c04b3c1142b9334e0e8e795dc567", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "7548a93b-2042-402d-9663-c9cf58f7af05", "node_type": "1", "metadata": {}, "hash": "a8355e5dbfe2b0ffe2fc7d03db126a8cebd7a0cf0fe0e01bf690243634403529", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . 12\n2.3 Basic concepts . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 12\n2.3.1 Tokenised text and pattern matching . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 120, "end_char_idx": 294, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0d0b9e35-5b60-4ae3-923a-046802078e1e": {"__data__": {"id_": "0d0b9e35-5b60-4ae3-923a-046802078e1e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d6efc806-1f57-40e6-8e6f-f74f92e83b10", "node_type": "1", "metadata": {}, "hash": "9e0bbd261a73fd0688255fccb00a8d973aad74f960365f9d16ef4401417016a7", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "7548a93b-2042-402d-9663-c9cf58f7af05", "node_type": "1", "metadata": {}, "hash": "a8355e5dbfe2b0ffe2fc7d03db126a8cebd7a0cf0fe0e01bf690243634403529", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . 12\nActivity: Recognising names . . . . . . . . . . . . . . . . . . . . . . . . 13\n2.3.2 Parts of speech . . . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 275, "end_char_idx": 440, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bd8537f2-34b0-4ade-b16d-20ed78f12df2": {"__data__": {"id_": "bd8537f2-34b0-4ade-b16d-20ed78f12df2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0d0b9e35-5b60-4ae3-923a-046802078e1e", "node_type": "1", "metadata": {}, "hash": "cc17fbeda0b1ece1f94395d562d3fb5b9328a421deaec9f90e3429c4f84aed20", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "7548a93b-2042-402d-9663-c9cf58f7af05", "node_type": "1", "metadata": {}, "hash": "a8355e5dbfe2b0ffe2fc7d03db126a8cebd7a0cf0fe0e01bf690243634403529", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . . . . . . 13\nActivity: identify parts of speech . . . . . . . . . . . . . . . . . . . . . 14\n2.3.3 Constituent structure . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 421, "end_char_idx": 599, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3b8ce35e-b417-4af1-82e5-fed0affc7e06": {"__data__": {"id_": "3b8ce35e-b417-4af1-82e5-fed0affc7e06", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bd8537f2-34b0-4ade-b16d-20ed78f12df2", "node_type": "1", "metadata": {}, "hash": "47780ce253788d94bdb154782c308b59db654faf46a460e4c75444a19f34eb86", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "7548a93b-2042-402d-9663-c9cf58f7af05", "node_type": "1", "metadata": {}, "hash": "a8355e5dbfe2b0ffe2fc7d03db126a8cebd7a0cf0fe0e01bf690243634403529", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . . . . . . 14\nActivity: Writing production rules . . . . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 580, "end_char_idx": 693, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a116afc0-b278-4c2a-af13-1d87a75f254c": {"__data__": {"id_": "a116afc0-b278-4c2a-af13-1d87a75f254c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "8b80bc92-fa6a-4fc1-a38d-15ae1f43f48e", "node_type": "1", "metadata": {}, "hash": "3fd24ba2effda542452c4a1b688d6221ad6b4f3a2cfd71fcce3abe82276d1ec6", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . 15\n2.4 A closer look at syntax . . . . . . . . . . . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 106, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5e7447c6-088e-46d7-aaa4-dcc336d40fa7": {"__data__": {"id_": "5e7447c6-088e-46d7-aaa4-dcc336d40fa7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "dbfd4b04-0039-4fa3-9ced-4978c625aca3", "node_type": "1", "metadata": {}, "hash": "1de4ba250958cf47bd682c400428e98acaa8197f57ce7a3adf0999da8c8a901b", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . 15\n2.4.1 Operation of a \ufb01nite-state machine . . . . . . . . . . . . . . . . 16\nActivity: Finite-state machines . . . . . . . . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 178, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4a5c46e1-5405-42ea-99ba-1476d7cd2f41": {"__data__": {"id_": "4a5c46e1-5405-42ea-99ba-1476d7cd2f41", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5e7447c6-088e-46d7-aaa4-dcc336d40fa7", "node_type": "1", "metadata": {}, "hash": "aef96238b9c585f941aeca885698ae0fa403538f33ccc6946d54c6b00f3fb7f7", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "dbfd4b04-0039-4fa3-9ced-4978c625aca3", "node_type": "1", "metadata": {}, "hash": "1de4ba250958cf47bd682c400428e98acaa8197f57ce7a3adf0999da8c8a901b", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . 17\n2.4.2 Representing \ufb01nite-state machines . . . . . . . . . . . . . . . . 17\n2.4.3 Declarative alternatives to \ufb01nite-state machines . . . . . . . . . 18\nActivity: Coding regular expressions . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 159, "end_char_idx": 389, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "acd0198c-4d91-419b-82a9-7993b67e277d": {"__data__": {"id_": "acd0198c-4d91-419b-82a9-7993b67e277d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4a5c46e1-5405-42ea-99ba-1476d7cd2f41", "node_type": "1", "metadata": {}, "hash": "82f1ebefd9ad5bb9ca207b5cc5ebd1d309629af7b556499a4a33cf73e580ab9c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "dbfd4b04-0039-4fa3-9ced-4978c625aca3", "node_type": "1", "metadata": {}, "hash": "1de4ba250958cf47bd682c400428e98acaa8197f57ce7a3adf0999da8c8a901b", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . . . . . 19\nActivity: tree diagrams for a regular language . . . . . . . . . . . . . . 21\n2.4.4 Limitations of \ufb01nite-state methods \u2013 introducing context-free\ngrammars . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 372, "end_char_idx": 597, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5733258d-aae4-4beb-b60f-05be5a0c6246": {"__data__": {"id_": "5733258d-aae4-4beb-b60f-05be5a0c6246", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "acd0198c-4d91-419b-82a9-7993b67e277d", "node_type": "1", "metadata": {}, "hash": "743d702dfbfbc4d58f1084415d478a4b500921b3cf524dc36cd5c74d2cb1c1d2", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "dbfd4b04-0039-4fa3-9ced-4978c625aca3", "node_type": "1", "metadata": {}, "hash": "1de4ba250958cf47bd682c400428e98acaa8197f57ce7a3adf0999da8c8a901b", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . . . . . . . . . . . 21\nActivity: Regular grammars . . . . . . . . . . . . . . . . . . . . . . . . 21\nActivity: Context-free grammar . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 578, "end_char_idx": 755, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b400211c-cf17-41a2-a26e-b67fbfb6a6f0": {"__data__": {"id_": "b400211c-cf17-41a2-a26e-b67fbfb6a6f0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5733258d-aae4-4beb-b60f-05be5a0c6246", "node_type": "1", "metadata": {}, "hash": "cb1363741254e3e25bb8c31c88799875e1a358f1909909a501ab910665934abf", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "dbfd4b04-0039-4fa3-9ced-4978c625aca3", "node_type": "1", "metadata": {}, "hash": "1de4ba250958cf47bd682c400428e98acaa8197f57ce7a3adf0999da8c8a901b", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . . . . . . . . 23\n2.4.5 Looking ahead: some further uses of regular expressions . . . .", "mimetype": "text/plain", "start_char_idx": 740, "end_char_idx": 854, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "558f27a6-a184-4775-a361-1e91054eb1f6": {"__data__": {"id_": "558f27a6-a184-4775-a361-1e91054eb1f6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "157392c9-14b3-4239-abe6-c0e6b2afa370", "node_type": "1", "metadata": {}, "hash": "43e2df41ce641c558868cefa34dedf2d7e16fecb13a8229ef91a3a785ad167b2", "class_name": "RelatedNodeInfo"}}, "text": ". . . 23\ni\n\nCO3354 Introduction to natural language processing\n2.4.6 Looking ahead: grammars and parsing . . . . . . . . . . . . . . 24\n2.5 Word structure . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 216, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b89bec4d-3970-4d98-903a-46c76677a95f": {"__data__": {"id_": "b89bec4d-3970-4d98-903a-46c76677a95f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "558f27a6-a184-4775-a361-1e91054eb1f6", "node_type": "1", "metadata": {}, "hash": "c52b2deb9f27577cc5869e7e920ebc0717d048112532379eef566cc281899857", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "157392c9-14b3-4239-abe6-c0e6b2afa370", "node_type": "1", "metadata": {}, "hash": "43e2df41ce641c558868cefa34dedf2d7e16fecb13a8229ef91a3a785ad167b2", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . 24\nActivity: Past tense formation . . . . . . . . . . . . . . . . . . . . . . . 25\n2.6 A brief history of natural language processing . . . . . . . . . . . . . . 25\n2.7 Summary . . . .", "mimetype": "text/plain", "start_char_idx": 197, "end_char_idx": 401, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "53596b48-6085-445e-b3fe-caa0bc0719cb": {"__data__": {"id_": "53596b48-6085-445e-b3fe-caa0bc0719cb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b89bec4d-3970-4d98-903a-46c76677a95f", "node_type": "1", "metadata": {}, "hash": "2d1b5bc69dc029a96a33d63c859068f132441e31256376f2c8db27d2874ae441", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "157392c9-14b3-4239-abe6-c0e6b2afa370", "node_type": "1", "metadata": {}, "hash": "43e2df41ce641c558868cefa34dedf2d7e16fecb13a8229ef91a3a785ad167b2", "class_name": "RelatedNodeInfo"}}, "text": ". . . 25\n2.7 Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 27\n2.8 Sample examination questions . . . . . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 373, "end_char_idx": 537, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "24a10c4a-6e63-47e1-9d47-83ffb276d0a6": {"__data__": {"id_": "24a10c4a-6e63-47e1-9d47-83ffb276d0a6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "53596b48-6085-445e-b3fe-caa0bc0719cb", "node_type": "1", "metadata": {}, "hash": "11938024335bdbec5476b9c59d36faeb1dd61bb946c5b4e3e4322e5d3eeb3540", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "157392c9-14b3-4239-abe6-c0e6b2afa370", "node_type": "1", "metadata": {}, "hash": "43e2df41ce641c558868cefa34dedf2d7e16fecb13a8229ef91a3a785ad167b2", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . 27\n3 Getting to grips with natural language data 29\nEssential reading . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 29\nRecommended reading . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 518, "end_char_idx": 718, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e88a8c60-eece-4ec1-afc2-d9fe8cab4678": {"__data__": {"id_": "e88a8c60-eece-4ec1-afc2-d9fe8cab4678", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "24a10c4a-6e63-47e1-9d47-83ffb276d0a6", "node_type": "1", "metadata": {}, "hash": "618760627c727c4bbd121290f68bfd558e4f13692aedf5df0ac260dcfda7d9dd", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "157392c9-14b3-4239-abe6-c0e6b2afa370", "node_type": "1", "metadata": {}, "hash": "43e2df41ce641c558868cefa34dedf2d7e16fecb13a8229ef91a3a785ad167b2", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . . . . . . . . . . . . 29\nAdditional reading . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 699, "end_char_idx": 796, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "655775a1-af8c-4b7d-b33c-646e1d73f94c": {"__data__": {"id_": "655775a1-af8c-4b7d-b33c-646e1d73f94c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "3e466a67-6571-4e0e-ada3-07c55a9a2a69", "node_type": "1", "metadata": {}, "hash": "83abb2b4b0840d63176b5e9889865fe375230d0635690ba4aa5c23557d3dd6d9", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . . . . . . . . . . . . . 29\n3.1 Learning outcomes . . . . . . . . . . . . . . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 134, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a4f016a8-fadb-4331-ab74-78b85907137e": {"__data__": {"id_": "a4f016a8-fadb-4331-ab74-78b85907137e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "655775a1-af8c-4b7d-b33c-646e1d73f94c", "node_type": "1", "metadata": {}, "hash": "720865afa90008f4d8c7f3a15d620d06b7f7f780b6d9d4911074d2bb74c2229e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "3e466a67-6571-4e0e-ada3-07c55a9a2a69", "node_type": "1", "metadata": {}, "hash": "83abb2b4b0840d63176b5e9889865fe375230d0635690ba4aa5c23557d3dd6d9", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . 29\n3.2 Using the Natural Language Toolkit . . . . . . . . . . . . . . . . . . . . 29\n3.3 Corpora and other data resources . . . . . . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 115, "end_char_idx": 298, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c4671bd9-a69c-4fd6-b414-fa647a70ddb7": {"__data__": {"id_": "c4671bd9-a69c-4fd6-b414-fa647a70ddb7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a4f016a8-fadb-4331-ab74-78b85907137e", "node_type": "1", "metadata": {}, "hash": "ea4f01eb6759a3d8b09bd8425ba86fdc854a82737f6cd4bab8910d836fc77be3", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "3e466a67-6571-4e0e-ada3-07c55a9a2a69", "node_type": "1", "metadata": {}, "hash": "83abb2b4b0840d63176b5e9889865fe375230d0635690ba4aa5c23557d3dd6d9", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . 30\n3.4 Some uses of corpora . . . . . . . . . . . . . . . . . . . . . . . . . . . . 31\n3.4.1 Lexicography . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 279, "end_char_idx": 436, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9e12f918-327a-46c1-8e4a-464e4e7330a9": {"__data__": {"id_": "9e12f918-327a-46c1-8e4a-464e4e7330a9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c4671bd9-a69c-4fd6-b414-fa647a70ddb7", "node_type": "1", "metadata": {}, "hash": "fa528b1142d33fc785634172e6d9897d1962e79d625f72a091340d5442a89b33", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "3e466a67-6571-4e0e-ada3-07c55a9a2a69", "node_type": "1", "metadata": {}, "hash": "83abb2b4b0840d63176b5e9889865fe375230d0635690ba4aa5c23557d3dd6d9", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . . . . . . . . . 32\n3.4.2 Grammar and syntax . . . . . . . . . . . . . . . . . . . . . . . . 32\n3.4.3 Stylistics: variation across authors, periods, genres and chan-\nnels of communication .", "mimetype": "text/plain", "start_char_idx": 417, "end_char_idx": 633, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "da2cec8f-4938-4c5d-b437-9193ce3ae2b4": {"__data__": {"id_": "da2cec8f-4938-4c5d-b437-9193ce3ae2b4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9e12f918-327a-46c1-8e4a-464e4e7330a9", "node_type": "1", "metadata": {}, "hash": "3575144995092b51c041599f0a65738cac5c8bf79c6cf5ebf0913b4091379307", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "3e466a67-6571-4e0e-ada3-07c55a9a2a69", "node_type": "1", "metadata": {}, "hash": "83abb2b4b0840d63176b5e9889865fe375230d0635690ba4aa5c23557d3dd6d9", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . . . . . . . . . 32\n3.4.4 Training and evaluation . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 634, "end_char_idx": 732, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fd129550-b226-4f27-891e-6449af3b0425": {"__data__": {"id_": "fd129550-b226-4f27-891e-6449af3b0425", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "23c3f2b8-b98f-4f91-bfad-eb7a245bad97", "node_type": "1", "metadata": {}, "hash": "be91b01445676fe4530c31a88d22b884b3dc2407420b4df52e5d6f46f1e9dcdb", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . . . . . . . . 33\n3.5 Corpora . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 126, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "389170f8-d253-45aa-b010-d041dd158029": {"__data__": {"id_": "389170f8-d253-45aa-b010-d041dd158029", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fd129550-b226-4f27-891e-6449af3b0425", "node_type": "1", "metadata": {}, "hash": "15325cc6aca3cbfb4906b3bf3ac142d9b134c7c76df401c69669232fe75351c5", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "23c3f2b8-b98f-4f91-bfad-eb7a245bad97", "node_type": "1", "metadata": {}, "hash": "be91b01445676fe4530c31a88d22b884b3dc2407420b4df52e5d6f46f1e9dcdb", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . 33\n3.5.1 Brown corpus . . . . . . . . . . . . . . . . . . . . . . . . . . . . 34\n3.5.2 British National Corpus . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 107, "end_char_idx": 269, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "82f15931-ce85-4895-a5f4-044f1fa04213": {"__data__": {"id_": "82f15931-ce85-4895-a5f4-044f1fa04213", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "389170f8-d253-45aa-b010-d041dd158029", "node_type": "1", "metadata": {}, "hash": "8cba46c40e99e31171b00a8280823f5f7fba252f70fa0ec6c111d2228ed5641f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "23c3f2b8-b98f-4f91-bfad-eb7a245bad97", "node_type": "1", "metadata": {}, "hash": "be91b01445676fe4530c31a88d22b884b3dc2407420b4df52e5d6f46f1e9dcdb", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . . . 34\n3.5.3 COBUILD Bank of English . . . . . . . . . . . . . . . . . . . . . 34\n3.5.4 Penn Treebank . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 250, "end_char_idx": 411, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7890cc53-e5a0-4234-83b3-d2aa4f9bf941": {"__data__": {"id_": "7890cc53-e5a0-4234-83b3-d2aa4f9bf941", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "82f15931-ce85-4895-a5f4-044f1fa04213", "node_type": "1", "metadata": {}, "hash": "57c17e1d4e0d088fbc14fe7d89dd6d988e38da98d0bfa7b450a3d5d788026eb0", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "23c3f2b8-b98f-4f91-bfad-eb7a245bad97", "node_type": "1", "metadata": {}, "hash": "be91b01445676fe4530c31a88d22b884b3dc2407420b4df52e5d6f46f1e9dcdb", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . . . . . . . . 35\n3.5.5 Gutenberg archive . . . . . . . . . . . . . . . . . . . . . . . . . 36\n3.5.6 Other corpora . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 392, "end_char_idx": 549, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ba8f7981-bb0a-41d0-b47a-bdce70b2cf65": {"__data__": {"id_": "ba8f7981-bb0a-41d0-b47a-bdce70b2cf65", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7890cc53-e5a0-4234-83b3-d2aa4f9bf941", "node_type": "1", "metadata": {}, "hash": "00bcc454d561deb3722f3e123361758fc2befce54cb7ea21d5116e7760ea8efc", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "23c3f2b8-b98f-4f91-bfad-eb7a245bad97", "node_type": "1", "metadata": {}, "hash": "be91b01445676fe4530c31a88d22b884b3dc2407420b4df52e5d6f46f1e9dcdb", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . . . . . . . . . . . . . . 36\nActivity: Online corpus queries . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 536, "end_char_idx": 648, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "11426f68-fbdb-4bf1-af98-0a437bb2c145": {"__data__": {"id_": "11426f68-fbdb-4bf1-af98-0a437bb2c145", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c1517d4c-3d41-4412-a7a4-1e3b2a3bb783", "node_type": "1", "metadata": {}, "hash": "b486f45ccda84ef13bdecb8da06326afc939cb5b2574948603389e6f83d9657a", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . . . . . . . 37\n3.5.7 WordNet . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 88, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "13d13ce1-35ef-42e9-85dc-4bb3bc5e8397": {"__data__": {"id_": "13d13ce1-35ef-42e9-85dc-4bb3bc5e8397", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "09e1c915-353b-4835-a613-f85f9720452a", "node_type": "1", "metadata": {}, "hash": "9b78ade23b18d3c95670b2b93f75d9cb6b7ace0d0c46a071b262f7ae4259cc75", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . . . . . . . . . . . . 37\n3.6 Some basic corpus analysis . . . . . . . . . . . . . . . . . . . . . . . . 38\n3.6.1 Frequency distributions . . . . . .", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 176, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d81617f1-917d-41cd-982e-0f2f959d610a": {"__data__": {"id_": "d81617f1-917d-41cd-982e-0f2f959d610a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "13d13ce1-35ef-42e9-85dc-4bb3bc5e8397", "node_type": "1", "metadata": {}, "hash": "c25294a9fefa7a3517532a0518f371b188322598267e8994d547588649caddbc", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "09e1c915-353b-4835-a613-f85f9720452a", "node_type": "1", "metadata": {}, "hash": "9b78ade23b18d3c95670b2b93f75d9cb6b7ace0d0c46a071b262f7ae4259cc75", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . . . . . . . . 38\nActivity: Using NLTK tools . . . . . . . . . . . . . . . . . . . . . . . . . 39\n3.6.2 DIY corpus: some worked examples . . . . . . .", "mimetype": "text/plain", "start_char_idx": 167, "end_char_idx": 344, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d51ceb86-2093-425b-971c-1804fd98dcc0": {"__data__": {"id_": "d51ceb86-2093-425b-971c-1804fd98dcc0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d81617f1-917d-41cd-982e-0f2f959d610a", "node_type": "1", "metadata": {}, "hash": "72710eb60c6d362750034bc59a6a813286a87f81027f1e6d2709411b6eee5dae", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "09e1c915-353b-4835-a613-f85f9720452a", "node_type": "1", "metadata": {}, "hash": "9b78ade23b18d3c95670b2b93f75d9cb6b7ace0d0c46a071b262f7ae4259cc75", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . 39\nActivity: building and analysing a DIY corpus . . . . . . . . . . . . . . 41\n3.7 Summary . . . . . . . . . . . . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 333, "end_char_idx": 506, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "138c94d4-0b76-4a7c-8302-5eeba39be8ac": {"__data__": {"id_": "138c94d4-0b76-4a7c-8302-5eeba39be8ac", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d51ceb86-2093-425b-971c-1804fd98dcc0", "node_type": "1", "metadata": {}, "hash": "55e4cf319e41af443531d273100e04b8685b5030fd402d54a6397f261e5b79f2", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "09e1c915-353b-4835-a613-f85f9720452a", "node_type": "1", "metadata": {}, "hash": "9b78ade23b18d3c95670b2b93f75d9cb6b7ace0d0c46a071b262f7ae4259cc75", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . . . . 41\n3.8 Sample examination question . . . . . . . . . . . . . . . . . . . . . . . 42\n4 Computational tools for text analysis 43\nEssential reading . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 487, "end_char_idx": 691, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "54fe4db7-2f16-4bcc-91fd-5bf471d11628": {"__data__": {"id_": "54fe4db7-2f16-4bcc-91fd-5bf471d11628", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "138c94d4-0b76-4a7c-8302-5eeba39be8ac", "node_type": "1", "metadata": {}, "hash": "a5dae8c07fd87025d66f3547940f45760285c7f7b33b6b66d64ef50cdc48567d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "09e1c915-353b-4835-a613-f85f9720452a", "node_type": "1", "metadata": {}, "hash": "9b78ade23b18d3c95670b2b93f75d9cb6b7ace0d0c46a071b262f7ae4259cc75", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . . . . . . . . . . . . . . 43\nRecommended reading . . .", "mimetype": "text/plain", "start_char_idx": 672, "end_char_idx": 754, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9d6dd1e2-de16-4122-8f1f-37b2fbd19650": {"__data__": {"id_": "9d6dd1e2-de16-4122-8f1f-37b2fbd19650", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c2721a5a-8852-4e29-8d5f-62a65709c385", "node_type": "1", "metadata": {}, "hash": "47c0ac8d929e29b2eee369f07ddca67ad42626ea2b0480d02bd39b809ddc40f9", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . 43\nRecommended reading . . . . . . . . . . . . . . . . . . . . . . . . . . . 43\nAdditional reading . . . . . . . . . . . . . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 164, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "732ede0b-c7f4-4353-9810-002a775e1d8a": {"__data__": {"id_": "732ede0b-c7f4-4353-9810-002a775e1d8a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9d6dd1e2-de16-4122-8f1f-37b2fbd19650", "node_type": "1", "metadata": {}, "hash": "7a4e65918aba85f1ea0b759f51336c820533ee99bd981baac4ef5f2c9007c973", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c2721a5a-8852-4e29-8d5f-62a65709c385", "node_type": "1", "metadata": {}, "hash": "47c0ac8d929e29b2eee369f07ddca67ad42626ea2b0480d02bd39b809ddc40f9", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . 43\n4.1 Introduction and learning outcomes . . . . . . . . . . . . . . . . . . . 43\n4.1.1 Learning outcomes . . . . . . . . . . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 145, "end_char_idx": 323, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "83b6ef6e-252c-45e8-b87f-25b0d46cc231": {"__data__": {"id_": "83b6ef6e-252c-45e8-b87f-25b0d46cc231", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "732ede0b-c7f4-4353-9810-002a775e1d8a", "node_type": "1", "metadata": {}, "hash": "d5794df01712b51d3aa3e446eab2d1f0ac868090591b1b936ec3210032f07b78", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c2721a5a-8852-4e29-8d5f-62a65709c385", "node_type": "1", "metadata": {}, "hash": "47c0ac8d929e29b2eee369f07ddca67ad42626ea2b0480d02bd39b809ddc40f9", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . 43\n4.2 Data structures . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 44\nActivity: strings and sequences . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 304, "end_char_idx": 475, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a47d0acf-1417-4ad6-9226-f207ea3c8501": {"__data__": {"id_": "a47d0acf-1417-4ad6-9226-f207ea3c8501", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "83b6ef6e-252c-45e8-b87f-25b0d46cc231", "node_type": "1", "metadata": {}, "hash": "3a67a2f631c936de0cb68bb26ebe88d0a5b7d15eae58cac9599df2d5e2868517", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c2721a5a-8852-4e29-8d5f-62a65709c385", "node_type": "1", "metadata": {}, "hash": "47c0ac8d929e29b2eee369f07ddca67ad42626ea2b0480d02bd39b809ddc40f9", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . . . 44\n4.3 Tokenisation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 44\n4.3.1 Some issues with tokenisation . . . . .", "mimetype": "text/plain", "start_char_idx": 456, "end_char_idx": 622, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f89d57b2-0802-451e-9df5-747343b44248": {"__data__": {"id_": "f89d57b2-0802-451e-9df5-747343b44248", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a47d0acf-1417-4ad6-9226-f207ea3c8501", "node_type": "1", "metadata": {}, "hash": "d4384b9fca6c0d0467aa8bce98f5682b00057f2f134d60badc34b46f0201ce33", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c2721a5a-8852-4e29-8d5f-62a65709c385", "node_type": "1", "metadata": {}, "hash": "47c0ac8d929e29b2eee369f07ddca67ad42626ea2b0480d02bd39b809ddc40f9", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . . . . . 45\n4.3.2 Tokenisation in the NLTK . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 615, "end_char_idx": 704, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1c72995a-37d2-4b41-acdd-3c0ea046ea0d": {"__data__": {"id_": "1c72995a-37d2-4b41-acdd-3c0ea046ea0d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e12349db-35f7-465b-9a2f-fefa4446054a", "node_type": "1", "metadata": {}, "hash": "93f7510aac7ae0c64e02d42b7ca81ef0e0d2c0089ccf12bcaf1376ba16799549", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . . . . . . . 46\nActivity: Tokenising text . . . . . . . . . . . . . . . . . . . . . . . . . . 46\n4.4 Stemming . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 158, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e4f6928d-29ad-4a0e-b339-19a733962726": {"__data__": {"id_": "e4f6928d-29ad-4a0e-b339-19a733962726", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1c72995a-37d2-4b41-acdd-3c0ea046ea0d", "node_type": "1", "metadata": {}, "hash": "d64fd92ea44ea4e4f52fefc4e8ecaa5502d031e57cc5478f100624a0195d5ec2", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e12349db-35f7-465b-9a2f-fefa4446054a", "node_type": "1", "metadata": {}, "hash": "93f7510aac7ae0c64e02d42b7ca81ef0e0d2c0089ccf12bcaf1376ba16799549", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 46\nActivity: Comparing stemmers . . . . . . . . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 139, "end_char_idx": 282, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1252d39d-c4d6-41f6-86da-3d019ddb1b5b": {"__data__": {"id_": "1252d39d-c4d6-41f6-86da-3d019ddb1b5b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e4f6928d-29ad-4a0e-b339-19a733962726", "node_type": "1", "metadata": {}, "hash": "2f67f63b62589ad9d5ae718425b6ea64aee862893ce24767d4160882c9bafe98", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e12349db-35f7-465b-9a2f-fefa4446054a", "node_type": "1", "metadata": {}, "hash": "93f7510aac7ae0c64e02d42b7ca81ef0e0d2c0089ccf12bcaf1376ba16799549", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . 48\n4.5 Tagging . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 48\n4.5.1 RE tagging . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 263, "end_char_idx": 409, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "53f4bdb1-f6df-4dbd-af07-0ba70e7bc384": {"__data__": {"id_": "53f4bdb1-f6df-4dbd-af07-0ba70e7bc384", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1252d39d-c4d6-41f6-86da-3d019ddb1b5b", "node_type": "1", "metadata": {}, "hash": "9a773fefaabf6669b74a2705efea65ae236e74bf1889a70d84ff8a30da0a1513", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e12349db-35f7-465b-9a2f-fefa4446054a", "node_type": "1", "metadata": {}, "hash": "93f7510aac7ae0c64e02d42b7ca81ef0e0d2c0089ccf12bcaf1376ba16799549", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . . . . . . . . . . . . . . . 49\nActivity: Tagging with REs . . . . . . . . . . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 390, "end_char_idx": 525, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "12c2b752-7d4e-4398-bde3-27ecc1b42a57": {"__data__": {"id_": "12c2b752-7d4e-4398-bde3-27ecc1b42a57", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "53f4bdb1-f6df-4dbd-af07-0ba70e7bc384", "node_type": "1", "metadata": {}, "hash": "fe51358c3cfa066c74fecdbd89efbda97757c73a150f34391b26f6d99f4fd108", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e12349db-35f7-465b-9a2f-fefa4446054a", "node_type": "1", "metadata": {}, "hash": "93f7510aac7ae0c64e02d42b7ca81ef0e0d2c0089ccf12bcaf1376ba16799549", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . 51\n4.5.2 Trained taggers and backoff . . . . . . . . . . . . . . . . . . . . 51\nii\n\n4.5.3 Transformation-based tagging . . . . . . .", "mimetype": "text/plain", "start_char_idx": 506, "end_char_idx": 658, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ff7c5fec-c554-4c9e-b6e4-20cb497138cf": {"__data__": {"id_": "ff7c5fec-c554-4c9e-b6e4-20cb497138cf", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "2f0134f0-97f4-4add-bf9d-8f93c7a723f5", "node_type": "1", "metadata": {}, "hash": "79eee0d2074bf953923828d9e1ddc2cda16a0acfd771d0e3f2f2c3700a76996f", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . . . . . 53\n4.5.4 Evaluation and performance . . . . . . . . . . . . . . . . . . . . 53\nActivity: Trained taggers . . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 174, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3e030e8e-e8ab-4402-8a6d-593ae4e361ed": {"__data__": {"id_": "3e030e8e-e8ab-4402-8a6d-593ae4e361ed", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ff7c5fec-c554-4c9e-b6e4-20cb497138cf", "node_type": "1", "metadata": {}, "hash": "61b02d30ec5b8b03470d91f3cf317e01344d34387c93af59b632390a51e66ad4", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "2f0134f0-97f4-4add-bf9d-8f93c7a723f5", "node_type": "1", "metadata": {}, "hash": "79eee0d2074bf953923828d9e1ddc2cda16a0acfd771d0e3f2f2c3700a76996f", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . . . . . . 53\n4.6 Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 53\n4.7 Sample examination question . . . .", "mimetype": "text/plain", "start_char_idx": 155, "end_char_idx": 318, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2984b406-27ce-4e64-b48c-bcfb6f8e51af": {"__data__": {"id_": "2984b406-27ce-4e64-b48c-bcfb6f8e51af", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3e030e8e-e8ab-4402-8a6d-593ae4e361ed", "node_type": "1", "metadata": {}, "hash": "286009f414a76ddc4fb60fc135c3d611944116abc951f31849cc55d9f0d83279", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "2f0134f0-97f4-4add-bf9d-8f93c7a723f5", "node_type": "1", "metadata": {}, "hash": "79eee0d2074bf953923828d9e1ddc2cda16a0acfd771d0e3f2f2c3700a76996f", "class_name": "RelatedNodeInfo"}}, "text": ". . 53\n4.7 Sample examination question . . . . . . . . . . . . . . . . . . . . . . . 54\n5 Statistically-based techniques for text analysis 57\nEssential reading . . . . . . . . . . . . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 272, "end_char_idx": 485, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9c9aaa41-6e2a-42e3-a15e-478694e5ae94": {"__data__": {"id_": "9c9aaa41-6e2a-42e3-a15e-478694e5ae94", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2984b406-27ce-4e64-b48c-bcfb6f8e51af", "node_type": "1", "metadata": {}, "hash": "309e46a12dd03387005880475c73c73ae65a0aaf3204c9164f499e356138805c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "2f0134f0-97f4-4add-bf9d-8f93c7a723f5", "node_type": "1", "metadata": {}, "hash": "79eee0d2074bf953923828d9e1ddc2cda16a0acfd771d0e3f2f2c3700a76996f", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . 57\nRecommended reading . . . . . . . . . . . . . . . . . . . . . . . . . . . 57\nAdditional reading . . . . . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 466, "end_char_idx": 630, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "560218bd-4a6f-469a-b570-969eaee48eb4": {"__data__": {"id_": "560218bd-4a6f-469a-b570-969eaee48eb4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9c9aaa41-6e2a-42e3-a15e-478694e5ae94", "node_type": "1", "metadata": {}, "hash": "1675ecf8ffee539fb298ca436bc8443e3e87104ebffbb943257f89668b81c66e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "2f0134f0-97f4-4add-bf9d-8f93c7a723f5", "node_type": "1", "metadata": {}, "hash": "79eee0d2074bf953923828d9e1ddc2cda16a0acfd771d0e3f2f2c3700a76996f", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . . . . . . 57\n5.1 Learning outcomes . . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 611, "end_char_idx": 707, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5871c2f5-3dda-4d51-a698-bc10d3b29e7f": {"__data__": {"id_": "5871c2f5-3dda-4d51-a698-bc10d3b29e7f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "d43edd0d-285e-4d1d-9f48-510ba80a26b2", "node_type": "1", "metadata": {}, "hash": "faad69882e5b9030eb7806200c07ff676d53716f30c6a3a56ea37c9292f9d577", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . . . . . . . . . 57\n5.2 Introduction . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 85, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "de6b7fe5-6c58-4dd7-84e9-cbfbda6c9fc3": {"__data__": {"id_": "de6b7fe5-6c58-4dd7-84e9-cbfbda6c9fc3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "d05612d5-1fc2-4b4e-8b23-b654fac5eb54", "node_type": "1", "metadata": {}, "hash": "9d2f1c6e95fa9ed74a3ef6798aa9e8524de38ae4f859f2879eeb50b43ce3b5ad", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 58\n5.3 Some fundamentals of machine learning . . . . . . . . . . . . . . . . . 58\n5.3.1 Naive Bayes classi\ufb01ers . .", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 178, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9f9ccbdd-b443-4a1e-a064-d00ed892e2c2": {"__data__": {"id_": "9f9ccbdd-b443-4a1e-a064-d00ed892e2c2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "de6b7fe5-6c58-4dd7-84e9-cbfbda6c9fc3", "node_type": "1", "metadata": {}, "hash": "c7108554f7d7ab1638a55d7b90df0499cece48f3c90663f5a29455c202003639", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "d05612d5-1fc2-4b4e-8b23-b654fac5eb54", "node_type": "1", "metadata": {}, "hash": "9d2f1c6e95fa9ed74a3ef6798aa9e8524de38ae4f859f2879eeb50b43ce3b5ad", "class_name": "RelatedNodeInfo"}}, "text": "58\n5.3.1 Naive Bayes classi\ufb01ers . . . . . . . . . . . . . . . . . . . . . . . 58\nActivity: Bayes\u2019 rule . . . . . . . . . . . . . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 143, "end_char_idx": 301, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e4fa705e-1106-45fc-9489-340890dcfaba": {"__data__": {"id_": "e4fa705e-1106-45fc-9489-340890dcfaba", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9f9ccbdd-b443-4a1e-a064-d00ed892e2c2", "node_type": "1", "metadata": {}, "hash": "7dc3826f5eaf1630d614f83b8881d239b1b3d652e6afe330b11705ed09c7d0de", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "d05612d5-1fc2-4b4e-8b23-b654fac5eb54", "node_type": "1", "metadata": {}, "hash": "9d2f1c6e95fa9ed74a3ef6798aa9e8524de38ae4f859f2879eeb50b43ce3b5ad", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . 59\n5.3.2 Hidden Markov models . . . . . . . . . . . . . . . . . . . . . . 60\n5.3.3 Information and entropy . . . . . . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 282, "end_char_idx": 450, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0463259c-3c6d-4f6a-8b88-f293e8d9c284": {"__data__": {"id_": "0463259c-3c6d-4f6a-8b88-f293e8d9c284", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e4fa705e-1106-45fc-9489-340890dcfaba", "node_type": "1", "metadata": {}, "hash": "170b2ed43090e9a6fb7d66c71719d4bbfe3e5b5f5bc4cb32598f951e61609a7a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "d05612d5-1fc2-4b4e-8b23-b654fac5eb54", "node_type": "1", "metadata": {}, "hash": "9d2f1c6e95fa9ed74a3ef6798aa9e8524de38ae4f859f2879eeb50b43ce3b5ad", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . 61\n5.3.4 Decision trees and maximum entropy classi\ufb01ers . . . . . . . . . 62\nActivity: further reading . . . . . . . . . . . . . . . . . . . . . . . . . . 63\n5.3.5 Evaluation . .", "mimetype": "text/plain", "start_char_idx": 431, "end_char_idx": 630, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2dadce34-d2c0-4f3b-8820-3abe9728c4ff": {"__data__": {"id_": "2dadce34-d2c0-4f3b-8820-3abe9728c4ff", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0463259c-3c6d-4f6a-8b88-f293e8d9c284", "node_type": "1", "metadata": {}, "hash": "bd3850efb750f92f5ecdfdf31bed0b7569e26f662c125fa27333e9ba5d847b95", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "d05612d5-1fc2-4b4e-8b23-b654fac5eb54", "node_type": "1", "metadata": {}, "hash": "9d2f1c6e95fa9ed74a3ef6798aa9e8524de38ae4f859f2879eeb50b43ce3b5ad", "class_name": "RelatedNodeInfo"}}, "text": ". . . . 63\n5.3.5 Evaluation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 599, "end_char_idx": 686, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "918d4750-1e38-418c-b4eb-7d0354d5a8ee": {"__data__": {"id_": "918d4750-1e38-418c-b4eb-7d0354d5a8ee", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "12c6529e-5bfc-4cdb-ba1d-b346b537ddbd", "node_type": "1", "metadata": {}, "hash": "3cfe6a7eb28525e16afbbdb10d741e180e23b8795391c455f57008df81a7106e", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . 63\n5.4 Machine learning in action: document classi\ufb01cation . . . . . . . . . . . 64\n5.4.1 Summary: document classi\ufb01cation . . . . . . . . . . . . . . . . 65\nActivity: document classi\ufb01cation . . . . . .", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 220, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "abf9f6b0-2e3e-49a7-bf7d-50dd1ccb1516": {"__data__": {"id_": "abf9f6b0-2e3e-49a7-bf7d-50dd1ccb1516", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "918d4750-1e38-418c-b4eb-7d0354d5a8ee", "node_type": "1", "metadata": {}, "hash": "4676593295156fe832a24f43d907df75a2f02bf00414c9c8413fa6a932706a9f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "12c6529e-5bfc-4cdb-ba1d-b346b537ddbd", "node_type": "1", "metadata": {}, "hash": "3cfe6a7eb28525e16afbbdb10d741e180e23b8795391c455f57008df81a7106e", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . . . . . . . 66\n5.5 Machine learning in action: information extraction . . . . . . . . . . . 66\n5.5.1 Types of information extraction . . . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 211, "end_char_idx": 407, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0d8e16d3-3d05-4e62-87b0-fe9f42b6d973": {"__data__": {"id_": "0d8e16d3-3d05-4e62-87b0-fe9f42b6d973", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "abf9f6b0-2e3e-49a7-bf7d-50dd1ccb1516", "node_type": "1", "metadata": {}, "hash": "96b34ddebc862fa8933f12ac92a1825d2a94a534ca7a6f47dc7297366247dc5e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "12c6529e-5bfc-4cdb-ba1d-b346b537ddbd", "node_type": "1", "metadata": {}, "hash": "3cfe6a7eb28525e16afbbdb10d741e180e23b8795391c455f57008df81a7106e", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . 67\n5.5.2 Regular expressions for personal names . . . . . . . . . . . . . 67\nActivity: coding regular expressions for proper names . . . . . . . . . . 69\n5.5.3 Information extraction as sequential classi\ufb01cation: chunking\nand NE recognition . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 388, "end_char_idx": 663, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6060b617-9ae3-4a0c-a3d5-390ea3cc3217": {"__data__": {"id_": "6060b617-9ae3-4a0c-a3d5-390ea3cc3217", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0d8e16d3-3d05-4e62-87b0-fe9f42b6d973", "node_type": "1", "metadata": {}, "hash": "3786777868424c30d503ac8a2c3fee6906614215d492db9d09e4635aac45d1b4", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "12c6529e-5bfc-4cdb-ba1d-b346b537ddbd", "node_type": "1", "metadata": {}, "hash": "3cfe6a7eb28525e16afbbdb10d741e180e23b8795391c455f57008df81a7106e", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . . . . . . . . . . . 69\nActivity: chunking and NE recognition . . . . . . . . . . . . . . . . . . 71\n5.6 Limitations of statistical methods . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 650, "end_char_idx": 840, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "120d0e91-35df-4138-a074-ec81c23092f1": {"__data__": {"id_": "120d0e91-35df-4138-a074-ec81c23092f1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6060b617-9ae3-4a0c-a3d5-390ea3cc3217", "node_type": "1", "metadata": {}, "hash": "252c065819552034494b6e304eb1853f82933e1b062f7216774249bdd2108b4e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "12c6529e-5bfc-4cdb-ba1d-b346b537ddbd", "node_type": "1", "metadata": {}, "hash": "3cfe6a7eb28525e16afbbdb10d741e180e23b8795391c455f57008df81a7106e", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . . . . . . 71\n5.7 Summary . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 821, "end_char_idx": 903, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2fe89b2f-7919-4170-87f1-8299c2cb2d56": {"__data__": {"id_": "2fe89b2f-7919-4170-87f1-8299c2cb2d56", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5f9803e1-c78b-4516-9676-7c3d59f5e3c6", "node_type": "1", "metadata": {}, "hash": "f9edb7a28da6d820827977a86976aeec8ae917a1f663345ca26d7f8ab9416d80", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . . . . . . . . . . . . . . . . 72\n5.8 Sample examination question . . . . . . . . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 138, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9978d525-dba9-4008-b071-6c35d78df33f": {"__data__": {"id_": "9978d525-dba9-4008-b071-6c35d78df33f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2fe89b2f-7919-4170-87f1-8299c2cb2d56", "node_type": "1", "metadata": {}, "hash": "fd873d06f75a17892865f9967a56e5fd43599c7b702619bfdb67944d07af412b", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5f9803e1-c78b-4516-9676-7c3d59f5e3c6", "node_type": "1", "metadata": {}, "hash": "f9edb7a28da6d820827977a86976aeec8ae917a1f663345ca26d7f8ab9416d80", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . 72\n6 Analysing sentences: syntax and parsing 75\nEssential reading . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 75\nRecommended reading . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 119, "end_char_idx": 313, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fbd9b7db-b1a9-43a8-a451-08fb6d643d60": {"__data__": {"id_": "fbd9b7db-b1a9-43a8-a451-08fb6d643d60", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9978d525-dba9-4008-b071-6c35d78df33f", "node_type": "1", "metadata": {}, "hash": "fc49f1252e60dbafd8e497e3d608dac51f6e2301e83f064eea2c9d306e3685c3", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5f9803e1-c78b-4516-9676-7c3d59f5e3c6", "node_type": "1", "metadata": {}, "hash": "f9edb7a28da6d820827977a86976aeec8ae917a1f663345ca26d7f8ab9416d80", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . . . . . . . . . . . 75\nAdditional reading . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 75\n6.1 Learning outcomes . . . . .", "mimetype": "text/plain", "start_char_idx": 294, "end_char_idx": 456, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e1ed24ba-4878-4707-995a-2a2db33e9f4b": {"__data__": {"id_": "e1ed24ba-4878-4707-995a-2a2db33e9f4b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fbd9b7db-b1a9-43a8-a451-08fb6d643d60", "node_type": "1", "metadata": {}, "hash": "7c7de17e4831ce61d72f7e015b1f8b377877733ca829c091f830b4eaadd12a9b", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5f9803e1-c78b-4516-9676-7c3d59f5e3c6", "node_type": "1", "metadata": {}, "hash": "f9edb7a28da6d820827977a86976aeec8ae917a1f663345ca26d7f8ab9416d80", "class_name": "RelatedNodeInfo"}}, "text": ". 75\n6.1 Learning outcomes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 75\n6.2 Grammars and parsing . . . . . . . . . . . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 420, "end_char_idx": 584, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e7f5d47e-6f68-4fd3-9821-11d09d605a97": {"__data__": {"id_": "e7f5d47e-6f68-4fd3-9821-11d09d605a97", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e1ed24ba-4878-4707-995a-2a2db33e9f4b", "node_type": "1", "metadata": {}, "hash": "0c98e2c70d1bc491d02fde82351683082d14667d06e2f5707ea7b099b2651481", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5f9803e1-c78b-4516-9676-7c3d59f5e3c6", "node_type": "1", "metadata": {}, "hash": "f9edb7a28da6d820827977a86976aeec8ae917a1f663345ca26d7f8ab9416d80", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . 75\n6.3 Complicating CFGs . . . . . . . . . . . . . . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 565, "end_char_idx": 669, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2b37df9e-ebb8-46f7-a4fe-7d8202fe6bf4": {"__data__": {"id_": "2b37df9e-ebb8-46f7-a4fe-7d8202fe6bf4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "d5e7803c-fe7e-4397-9d57-b4d233d2940e", "node_type": "1", "metadata": {}, "hash": "8ef01e3092c28c9de37d43b5d2d2c860b5a3e19664aedd42b676c74989f81dd3", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . 76\n6.3.1 Verb categories . . . . . . . . . . . . . . . . . . . . . . . . . . . 76\nActivity: Verb categories . . . . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 165, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6855f5bc-64b0-4b6b-ab34-e53788bf8f35": {"__data__": {"id_": "6855f5bc-64b0-4b6b-ab34-e53788bf8f35", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2b37df9e-ebb8-46f7-a4fe-7d8202fe6bf4", "node_type": "1", "metadata": {}, "hash": "6e9bce2d44eeb92049c0443c933a2327d6130a9779aaadb6bc4364c44acf788c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "d5e7803c-fe7e-4397-9d57-b4d233d2940e", "node_type": "1", "metadata": {}, "hash": "8ef01e3092c28c9de37d43b5d2d2c860b5a3e19664aedd42b676c74989f81dd3", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . . . . 78\n6.3.2 Agreement . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 78\nActivity: feature-based grammar . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 146, "end_char_idx": 311, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8256fc98-9a3b-421b-b3da-95000240ef7c": {"__data__": {"id_": "8256fc98-9a3b-421b-b3da-95000240ef7c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6855f5bc-64b0-4b6b-ab34-e53788bf8f35", "node_type": "1", "metadata": {}, "hash": "368e73e5c10727974472024d2b4001219a4896da65d6472a7c3b50d146ad251f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "d5e7803c-fe7e-4397-9d57-b4d233d2940e", "node_type": "1", "metadata": {}, "hash": "8ef01e3092c28c9de37d43b5d2d2c860b5a3e19664aedd42b676c74989f81dd3", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . . . . . . . 80\n6.3.3 Unbounded dependencies . . . . . . . . . . . . . . . . . . . . . 80\n6.3.4 Ambiguity and probabilistic grammars . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 294, "end_char_idx": 473, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c87f47d9-d453-4bfe-b661-4fd3e2cbd006": {"__data__": {"id_": "c87f47d9-d453-4bfe-b661-4fd3e2cbd006", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8256fc98-9a3b-421b-b3da-95000240ef7c", "node_type": "1", "metadata": {}, "hash": "5fa89b0902b98975ed650734e0cee793a34faa1afbcff3e65ae2f5c66afeb083", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "d5e7803c-fe7e-4397-9d57-b4d233d2940e", "node_type": "1", "metadata": {}, "hash": "8ef01e3092c28c9de37d43b5d2d2c860b5a3e19664aedd42b676c74989f81dd3", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . 82\nActivity: probabilistic grammar . . . . . . . . . . . . . . . . . . . . . . 85\n6.4 Parsing . . . . . . . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 456, "end_char_idx": 619, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4a56225c-2b25-4147-b844-ef6abd62a017": {"__data__": {"id_": "4a56225c-2b25-4147-b844-ef6abd62a017", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c87f47d9-d453-4bfe-b661-4fd3e2cbd006", "node_type": "1", "metadata": {}, "hash": "480011eff8eccd039f5198156bf073a384bd53d2e222120411905ea9b15ce818", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "d5e7803c-fe7e-4397-9d57-b4d233d2940e", "node_type": "1", "metadata": {}, "hash": "8ef01e3092c28c9de37d43b5d2d2c860b5a3e19664aedd42b676c74989f81dd3", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . . . . . . . . . . . 85\n6.4.1 Recursive descent parsing . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 600, "end_char_idx": 704, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "faf247df-7443-4d8f-a985-71ebc163312d": {"__data__": {"id_": "faf247df-7443-4d8f-a985-71ebc163312d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a86fa115-9666-4413-803a-f9bdc2b3c705", "node_type": "1", "metadata": {}, "hash": "15af1985d1c780c7b9bad6385dd4bb41f9c91cd230587884202a69412169ef91", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . . . . . . . 86\n6.4.2 Shift-reduce parsing . . . . . . . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 113, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5398bc70-9a11-4af4-903b-f987868ba4fa": {"__data__": {"id_": "5398bc70-9a11-4af4-903b-f987868ba4fa", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "64248c25-68be-4d86-9036-2bc5ebf5087f", "node_type": "1", "metadata": {}, "hash": "fa837a258fe5a5ab220e1684ce17d1a346b6d55f51409633f50889e950769f2b", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . 87\n6.4.3 Parsing with a well-formed substring table . . . . . . . . . . . . 87\n6.4.4 Finite-state machines and context-free parsing . . . . . . . . . . 89\nActivity: Parsing . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 222, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bd399c66-11dd-4b30-be36-f1e2f6b27af1": {"__data__": {"id_": "bd399c66-11dd-4b30-be36-f1e2f6b27af1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5398bc70-9a11-4af4-903b-f987868ba4fa", "node_type": "1", "metadata": {}, "hash": "e69990783b5918889bab8da9cb4814c041587d4a14eaa1ea85076e54ba2f52cc", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "64248c25-68be-4d86-9036-2bc5ebf5087f", "node_type": "1", "metadata": {}, "hash": "fa837a258fe5a5ab220e1684ce17d1a346b6d55f51409633f50889e950769f2b", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . . . . . . . . . . . . . . 90\n6.5 Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 203, "end_char_idx": 339, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dfce174b-daee-43c6-a72c-512302fc000a": {"__data__": {"id_": "dfce174b-daee-43c6-a72c-512302fc000a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bd399c66-11dd-4b30-be36-f1e2f6b27af1", "node_type": "1", "metadata": {}, "hash": "4ef19f7c92c26491975f03d1e164e7b872507f480889ae90fdd7d4e70002fe40", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "64248c25-68be-4d86-9036-2bc5ebf5087f", "node_type": "1", "metadata": {}, "hash": "fa837a258fe5a5ab220e1684ce17d1a346b6d55f51409633f50889e950769f2b", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . 90\niii\n\nCO3354 Introduction to natural language processing\n6.6 Sample examination question . . . . . . . . . . . . . . . . . . . . . . . 91\nA Bibliography 93\nB Glossary 95\nC Answers to selected activities 97\nChapter 2: Introducing NLP: patterns and structure in natural language . . .", "mimetype": "text/plain", "start_char_idx": 320, "end_char_idx": 624, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2ad1e2ea-cf46-4abd-9551-a0f66bbbfae9": {"__data__": {"id_": "2ad1e2ea-cf46-4abd-9551-a0f66bbbfae9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dfce174b-daee-43c6-a72c-512302fc000a", "node_type": "1", "metadata": {}, "hash": "f249231994b22174d9d324e920bd7971cca833878aad469140e23be8d4c3d54c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "64248c25-68be-4d86-9036-2bc5ebf5087f", "node_type": "1", "metadata": {}, "hash": "fa837a258fe5a5ab220e1684ce17d1a346b6d55f51409633f50889e950769f2b", "class_name": "RelatedNodeInfo"}}, "text": ". . 97\nIdentify parts of speech, page 14 . . . . . . . . . . . . . . . . . . . . . 97\nOperation of a \ufb01nite-state machine, page 17 . . . . . . . . . . . . . . . 97\nCoding regular expressions, page 19 . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 621, "end_char_idx": 837, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c5ce600f-9ea6-473b-a6fd-4d9476db96a2": {"__data__": {"id_": "c5ce600f-9ea6-473b-a6fd-4d9476db96a2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2ad1e2ea-cf46-4abd-9551-a0f66bbbfae9", "node_type": "1", "metadata": {}, "hash": "5e36eacfd1b1b2df0592b4a965f38dbb5e8c9c2656f578e767c350a23d776bf2", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "64248c25-68be-4d86-9036-2bc5ebf5087f", "node_type": "1", "metadata": {}, "hash": "fa837a258fe5a5ab220e1684ce17d1a346b6d55f51409633f50889e950769f2b", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . . . . . 97\nRegular grammars, page 21 . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 822, "end_char_idx": 902, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c39b45bd-812f-4b22-aa30-6a2745260e8e": {"__data__": {"id_": "c39b45bd-812f-4b22-aa30-6a2745260e8e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "3ef22783-da6f-428d-bb12-7e6c2273dd61", "node_type": "1", "metadata": {}, "hash": "c3fed5b0cc4a4680b72a2e2203a2cb8512d67d80011a3bc7653f7fb2c58b7d49", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . . . . . . . . . . 98\nPast tense forms, page 25 . . . . . . . . . . . . . . . . . . . . . . . . . 98\nChapter 3: Getting to grips with natural language data . . . . .", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 192, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b9b89874-b531-48fd-b901-b17ba4a6b4a7": {"__data__": {"id_": "b9b89874-b531-48fd-b901-b17ba4a6b4a7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c39b45bd-812f-4b22-aa30-6a2745260e8e", "node_type": "1", "metadata": {}, "hash": "c270fd2629d5586ce525f4d1b33b226a17a163b258e29d7315f9a2a4800064c3", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "3ef22783-da6f-428d-bb12-7e6c2273dd61", "node_type": "1", "metadata": {}, "hash": "c3fed5b0cc4a4680b72a2e2203a2cb8512d67d80011a3bc7653f7fb2c58b7d49", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . 98\nOnline corpus queries, page 37 . . . . . . . . . . . . . . . . . . . . . . 98\nUsing NLTK tools, page 39 . . . . . . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 185, "end_char_idx": 355, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0d4e1258-834f-4fbc-864a-69bb958f0250": {"__data__": {"id_": "0d4e1258-834f-4fbc-864a-69bb958f0250", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b9b89874-b531-48fd-b901-b17ba4a6b4a7", "node_type": "1", "metadata": {}, "hash": "d76719e14ca104b582df0ec1c0a392a2ddf071aeac4eeb1c7b5bf0b51b6bbb18", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "3ef22783-da6f-428d-bb12-7e6c2273dd61", "node_type": "1", "metadata": {}, "hash": "c3fed5b0cc4a4680b72a2e2203a2cb8512d67d80011a3bc7653f7fb2c58b7d49", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . . . . . 99\nChapter 4: Computational tools for text analysis . . . . . . . . . . . . . . . . 100\nComparing stemmers, page 48 . . . . . . . . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 336, "end_char_idx": 525, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e9e87a31-e521-4f26-add5-1fa5cc83b2b1": {"__data__": {"id_": "e9e87a31-e521-4f26-add5-1fa5cc83b2b1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0d4e1258-834f-4fbc-864a-69bb958f0250", "node_type": "1", "metadata": {}, "hash": "3c500ed1765ec9c38a642af87623cd3927a7a11580085259760b61dd70c30a48", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "3ef22783-da6f-428d-bb12-7e6c2273dd61", "node_type": "1", "metadata": {}, "hash": "c3fed5b0cc4a4680b72a2e2203a2cb8512d67d80011a3bc7653f7fb2c58b7d49", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . 100\nTagging with REs, page 51 . . . . . . . . . . . . . . . . . . . . . . . . . 101\nChapter 5: Statistically-based techniques for text analysis . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 506, "end_char_idx": 691, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "71dd5542-5b9c-446e-93bc-c61f1a8f5111": {"__data__": {"id_": "71dd5542-5b9c-446e-93bc-c61f1a8f5111", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e9e87a31-e521-4f26-add5-1fa5cc83b2b1", "node_type": "1", "metadata": {}, "hash": "bd7e20f74cb4a4f531cda9afee6b27aef4ffe945c0ee03476c5c76af7655d94c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "3ef22783-da6f-428d-bb12-7e6c2273dd61", "node_type": "1", "metadata": {}, "hash": "c3fed5b0cc4a4680b72a2e2203a2cb8512d67d80011a3bc7653f7fb2c58b7d49", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . 101\nActivity: Bayes\u2019 Rule, page 59 . . . . . . . . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 672, "end_char_idx": 772, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9244f949-3dae-4948-b254-8f330087c636": {"__data__": {"id_": "9244f949-3dae-4948-b254-8f330087c636", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5f4ecab5-ad1b-47e9-822c-0f54cdd8ccdd", "node_type": "1", "metadata": {}, "hash": "4537fbe0fc02fa713a70e270b3c52354b6c29cc126d249ed98e9364ee99bc7ab", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . 101\nChapter 6: Analysing sentences: syntax and parsing . . . . . . . . . . . . . . 102\nActivity: Verb categories, page 78 . . . . . . . . . . . . . . . . . . . . . 102\nActivity: Feature-based grammar, page 80 .", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 230, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2a33f8c6-0e04-45a3-bb0b-86c970d3818d": {"__data__": {"id_": "2a33f8c6-0e04-45a3-bb0b-86c970d3818d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9244f949-3dae-4948-b254-8f330087c636", "node_type": "1", "metadata": {}, "hash": "be13b7bb7dbc6999a3dff46a8629f284c27596648f2fcf4596a43130e4a06e4e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5f4ecab5-ad1b-47e9-822c-0f54cdd8ccdd", "node_type": "1", "metadata": {}, "hash": "4537fbe0fc02fa713a70e270b3c52354b6c29cc126d249ed98e9364ee99bc7ab", "class_name": "RelatedNodeInfo"}}, "text": ". . . 102\nActivity: Feature-based grammar, page 80 . . . . . . . . . . . . . . . . 102\nD Trace of recursive descent parse 105\nE Sample examination paper with answering guidelines 107\nE.1 Sample examination questions . . . . . . . . . . . . . . . . . . . . . .", "mimetype": "text/plain", "start_char_idx": 178, "end_char_idx": 437, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f40885d9-9854-4777-8807-233cea9865a7": {"__data__": {"id_": "f40885d9-9854-4777-8807-233cea9865a7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2a33f8c6-0e04-45a3-bb0b-86c970d3818d", "node_type": "1", "metadata": {}, "hash": "5c1211785ba3413f3a59246bf87856302895642334d49357e510b440f0adf2d4", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5f4ecab5-ad1b-47e9-822c-0f54cdd8ccdd", "node_type": "1", "metadata": {}, "hash": "4537fbe0fc02fa713a70e270b3c52354b6c29cc126d249ed98e9364ee99bc7ab", "class_name": "RelatedNodeInfo"}}, "text": ". . . . . . . . . . 108\nE.2 Answering guidelines for sample examination questions . . . . . . . . 113\niv\n\nPreface\nAbout this half unit\nThis half unit course combines a critical introduction to key topics in theoretical and\ncomputational linguistics with hands-on practical experience of using existing\nsoftware tools and developing applications to process texts and access linguistic\nresources. The aims of the course and learning outcomes are listed in Chapter 1.", "mimetype": "text/plain", "start_char_idx": 418, "end_char_idx": 882, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cea7d83e-ca48-4300-b6b5-ae05af4f579a": {"__data__": {"id_": "cea7d83e-ca48-4300-b6b5-ae05af4f579a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f40885d9-9854-4777-8807-233cea9865a7", "node_type": "1", "metadata": {}, "hash": "31c25c7f6cb64ef22a009e4eaab8c799ffc6439e7b9dc54c893c29d2edbd7f91", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5f4ecab5-ad1b-47e9-822c-0f54cdd8ccdd", "node_type": "1", "metadata": {}, "hash": "4537fbe0fc02fa713a70e270b3c52354b6c29cc126d249ed98e9364ee99bc7ab", "class_name": "RelatedNodeInfo"}}, "text": "The aims of the course and learning outcomes are listed in Chapter 1.\nThis course has no speci\ufb01c prerequisites. There will be some programming involved\nand you will need to acquire some familiarity with the Python language, but you will\nnot be expected to develop substantial original code or to encode specialised\nalgorithms. The course involves some statistical techniques, but the only\nmathematical knowledge assumed is an understanding of elementary probability\nand familiarity with the concept of logarithms.", "mimetype": "text/plain", "start_char_idx": 813, "end_char_idx": 1326, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0a490115-33d4-46ff-85cc-d13f0cffeb5d": {"__data__": {"id_": "0a490115-33d4-46ff-85cc-d13f0cffeb5d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cea7d83e-ca48-4300-b6b5-ae05af4f579a", "node_type": "1", "metadata": {}, "hash": "5ff1eccda033dea6b71d64979be105f03e56c8fe5f8138b4fadd59056f48e529", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5f4ecab5-ad1b-47e9-822c-0f54cdd8ccdd", "node_type": "1", "metadata": {}, "hash": "4537fbe0fc02fa713a70e270b3c52354b6c29cc126d249ed98e9364ee99bc7ab", "class_name": "RelatedNodeInfo"}}, "text": "Before the advent of the world wide web, most machine-readable information was\nstored in structured databases and accessed via specialised query languages such as\nStructured Query Language (SQL). Nowadays the situation is reversed: most\ninformation is found in unstructured or semi-structured natural language documents\nand there is increasing demand for techniques to \u2018unlock\u2019 this data.", "mimetype": "text/plain", "start_char_idx": 1327, "end_char_idx": 1715, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "97565d28-5833-425b-a97f-2ad351d486a4": {"__data__": {"id_": "97565d28-5833-425b-a97f-2ad351d486a4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "9ff3ce2c-0379-406c-a8eb-1ab0013304fc", "node_type": "1", "metadata": {}, "hash": "0de2d960139de5c49efc6193d9fe47968bd392d9e594b465437d305dccc8a328", "class_name": "RelatedNodeInfo"}}, "text": "Computing\ngraduates with knowledge of natural language processing techniques are \ufb01nding\nemployment in areas such as text analytics, sentiment analysis, topic detection and\ninformation extraction.\nAssessment\nThe course is assessed via an unseen written examination. A sample examination\npaper is provided in the Appendix at the end of this subject guide, with some\nguidelines on how to answer the questions. You will be required to attempt three\nquestions out of a choice of \ufb01ve. The questions will cover \u2018book knowledge\u2019, problem\nsolving and short essays on more theoretical topics.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 582, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "554d8454-664e-4d02-99a8-dc445b231738": {"__data__": {"id_": "554d8454-664e-4d02-99a8-dc445b231738", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "97565d28-5833-425b-a97f-2ad351d486a4", "node_type": "1", "metadata": {}, "hash": "9327f9dc0d4b91530847332e7feb27f0eb67595219c61d033f66a3613e9a639e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "9ff3ce2c-0379-406c-a8eb-1ab0013304fc", "node_type": "1", "metadata": {}, "hash": "0de2d960139de5c49efc6193d9fe47968bd392d9e594b465437d305dccc8a328", "class_name": "RelatedNodeInfo"}}, "text": "The examination is not a\nmemory test but will be designed to assess your understanding of the course\ncontent. There will also be coursework which will include a similar mix of questions,\nbut with a stronger focus on practical problem-solving.\nYou will be expected to provide electronic copies of your coursework for plagiarism\nchecking purposes. It is very important that any material that is not original to you\nshould be properly attributed and placed in quotation marks, with a full list of\nreferences at the end of your submission.", "mimetype": "text/plain", "start_char_idx": 583, "end_char_idx": 1118, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "90dfb582-199b-4336-8561-af7f3d222930": {"__data__": {"id_": "90dfb582-199b-4336-8561-af7f3d222930", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "554d8454-664e-4d02-99a8-dc445b231738", "node_type": "1", "metadata": {}, "hash": "093df1345f3344e3b566b34bcfc3cac4196976f37fe6a29b0ae89ba5e65ec936", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "9ff3ce2c-0379-406c-a8eb-1ab0013304fc", "node_type": "1", "metadata": {}, "hash": "0de2d960139de5c49efc6193d9fe47968bd392d9e594b465437d305dccc8a328", "class_name": "RelatedNodeInfo"}}, "text": "You should follow the style used in this\nsubject guide for citing references, for example:\nSegaran (2007, pp.117\u2013118) discusses some problems with rule-based spam \ufb01lters.\nAnswers which consist entirely or mostly of quoted material are unlikely to get many\nmarks even if properly attributed, as simply reproducing an answer in someone\nelse\u2019s words does not demonstrate that you have fully understood the material.\nIn order to give you some practice in problem-solving and writing short essays, there\n1\n\nCO3354 Introduction to natural language processing\nare a number of Activities throughout this subject guide.", "mimetype": "text/plain", "start_char_idx": 1119, "end_char_idx": 1729, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bed6bc18-235d-4127-8e52-08f2ded50876": {"__data__": {"id_": "bed6bc18-235d-4127-8e52-08f2ded50876", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "90dfb582-199b-4336-8561-af7f3d222930", "node_type": "1", "metadata": {}, "hash": "a5cc5218088ef568f0393bd3a6c12eecb245f326286c73fab6074ae74125e8f8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "9ff3ce2c-0379-406c-a8eb-1ab0013304fc", "node_type": "1", "metadata": {}, "hash": "0de2d960139de5c49efc6193d9fe47968bd392d9e594b465437d305dccc8a328", "class_name": "RelatedNodeInfo"}}, "text": "The Appendix includes a\nsection \u2018Answers to selected activities\u2019, although these will not always provide\ncomplete answers to the questions but are intended to indicate how particular types\nof questions should be approached. Sample examination questions are provided at\nthe end of each chapter. Some, but not all, of these are included in the sample\nexamination paper with suggested answers at the end of the guide.\nThe subject guide and other learning resources\nThis subject guide is not intended as a self-contained textbook but sets out speci\ufb01c\ntopics for study in the CO3354 half unit.", "mimetype": "text/plain", "start_char_idx": 1730, "end_char_idx": 2318, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "01541a09-2aee-4102-bffa-e8171960cb7c": {"__data__": {"id_": "01541a09-2aee-4102-bffa-e8171960cb7c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bed6bc18-235d-4127-8e52-08f2ded50876", "node_type": "1", "metadata": {}, "hash": "8c654d0b4d2d7feb0513c341ecbf1b0f8f06e7e4538f7008e58003b991f1330c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "9ff3ce2c-0379-406c-a8eb-1ab0013304fc", "node_type": "1", "metadata": {}, "hash": "0de2d960139de5c49efc6193d9fe47968bd392d9e594b465437d305dccc8a328", "class_name": "RelatedNodeInfo"}}, "text": "There is a recommended textbook and a\nnumber of other readings are listed at appropriate places.", "mimetype": "text/plain", "start_char_idx": 2319, "end_char_idx": 2415, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5fef8831-14d6-4bc7-8579-8d2ac35bce09": {"__data__": {"id_": "5fef8831-14d6-4bc7-8579-8d2ac35bce09", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "bd41e00a-7043-4f68-bb92-5ffc9c4dc1ec", "node_type": "1", "metadata": {}, "hash": "30c796154cf6a6acd40d3d356d68b7503ecb1a6a333b3d102bedb324418ab51c", "class_name": "RelatedNodeInfo"}}, "text": "There is a recommended textbook and a\nnumber of other readings are listed at appropriate places. There are also links to\nwebsites providing useful resources such as software tools and access to online\nlinguistic data. The learning outcomes listed in the next chapter assume that you are\nworking through the recommended readings, activities and sample examination\nquestions. It will not be possible to pass this half unit by reading only the subject\nguide.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 455, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "167676cb-c620-4532-959f-b490a6cec2a4": {"__data__": {"id_": "167676cb-c620-4532-959f-b490a6cec2a4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "73d1e212-4483-441d-bac3-f8be01007682", "node_type": "1", "metadata": {}, "hash": "91a2eb3fc8e8bab9c3c512f1de6728ef628ab8f34a6e4bc16921de2a7f382d53", "class_name": "RelatedNodeInfo"}}, "text": "It will not be possible to pass this half unit by reading only the subject\nguide. Please refer to the Computing VLE for other resources, which should be used\nas an aid to your learning.\nSuggested study time\nThe Student Handbook states that \u2018To be able to gain the most bene\ufb01t from the\nprogramme, it is likely that you will have to spend at least 300 hours studying for\neach full unit, though you are likely to bene\ufb01t from spending up to twice this time\u2019.\nNote that this subject is a half unit.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 493, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3ca598c6-14e2-4e21-bc64-9086965962e3": {"__data__": {"id_": "3ca598c6-14e2-4e21-bc64-9086965962e3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "167676cb-c620-4532-959f-b490a6cec2a4", "node_type": "1", "metadata": {}, "hash": "497ef461c0dfc54f5fb4ad9ce9a092029aa4523a1a74bbb30063ebbd04613391", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "73d1e212-4483-441d-bac3-f8be01007682", "node_type": "1", "metadata": {}, "hash": "91a2eb3fc8e8bab9c3c512f1de6728ef628ab8f34a6e4bc16921de2a7f382d53", "class_name": "RelatedNodeInfo"}}, "text": "Note that this subject is a half unit.\nThe course is designed to be delivered over a ten-week term as one of four\nconcurrent modules, and this guide has six chapters. Chapter 1 goes into more detail\nabout the structure of the guide and the course, while Chapters 2 to 6 are each\ndedicated to a particular topic. It is suggested that you spend about two weeks on\nChapters 1 and 2 together and each of Chapters 3 to 6, including the associated\nreading and web-based material, and work through the activities and sample\nexamination questions during this time.", "mimetype": "text/plain", "start_char_idx": 455, "end_char_idx": 1011, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2c4e9599-0dc3-422c-b512-819573a121f4": {"__data__": {"id_": "2c4e9599-0dc3-422c-b512-819573a121f4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3ca598c6-14e2-4e21-bc64-9086965962e3", "node_type": "1", "metadata": {}, "hash": "9585eb2653a7399ae3d777ab10cb2ecef4798c03342ca0e6052153bb7ec9d91a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "73d1e212-4483-441d-bac3-f8be01007682", "node_type": "1", "metadata": {}, "hash": "91a2eb3fc8e8bab9c3c512f1de6728ef628ab8f34a6e4bc16921de2a7f382d53", "class_name": "RelatedNodeInfo"}}, "text": "2\n\nContents\nAcknowledgement\nThis subject guide draws closely on:\nBird, S., E. Klein and E. Loper, Natural Language Processing with Python . (O\u2019Reilly\nMedia 2009) [ISBN 9780596516499; http://nltk.org/book].\nYou will be expected to draw on it in your studies and to use the accompanying\nsoftware package, the Natural Language Toolkit, which requires the Python\nlanguage.", "mimetype": "text/plain", "start_char_idx": 1012, "end_char_idx": 1380, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a2792d4a-2701-44a1-af5f-1ab791bfc156": {"__data__": {"id_": "a2792d4a-2701-44a1-af5f-1ab791bfc156", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2c4e9599-0dc3-422c-b512-819573a121f4", "node_type": "1", "metadata": {}, "hash": "a13bbb926635577fb2a455c27e5ca2aea0a3903263ef64553018f75c1b7ba45c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "73d1e212-4483-441d-bac3-f8be01007682", "node_type": "1", "metadata": {}, "hash": "91a2eb3fc8e8bab9c3c512f1de6728ef628ab8f34a6e4bc16921de2a7f382d53", "class_name": "RelatedNodeInfo"}}, "text": "Natural language processing with Python has been made available under\nthe terms of the Creative Commons Attribution Noncommercial No-Derivative-Works\n3.0 US License: http://creativecommons.org/licenses/by-nc-nd.3.0/us/legalcode (last\nvisited 13th April 2013).", "mimetype": "text/plain", "start_char_idx": 1381, "end_char_idx": 1640, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9d6866a2-a9ab-4dc8-a062-3ffc0769bb09": {"__data__": {"id_": "9d6866a2-a9ab-4dc8-a062-3ffc0769bb09", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a2792d4a-2701-44a1-af5f-1ab791bfc156", "node_type": "1", "metadata": {}, "hash": "90ae58eacd3637315f7705056d897146e3e3af1db6c3396112d9e9118aa3f14b", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "73d1e212-4483-441d-bac3-f8be01007682", "node_type": "1", "metadata": {}, "hash": "91a2eb3fc8e8bab9c3c512f1de6728ef628ab8f34a6e4bc16921de2a7f382d53", "class_name": "RelatedNodeInfo"}}, "text": "3\n\nCO3354 Introduction to natural language processing\n4\n\nChapter 1\nIntroduction: how to use this subject guide\n1.1 Introduction\nThe idea of computers being able to understand ordinary languages and hold\nconversations with human beings has been a staple of science \ufb01ction since the \ufb01rst\nhalf of the twentieth century and was envisaged in a classic paper by Alan Turing\n(1950) as a hallmark of computational intelligence.", "mimetype": "text/plain", "start_char_idx": 1641, "end_char_idx": 2060, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d2fabb62-79ba-4704-9f1a-bbbac7b4eb55": {"__data__": {"id_": "d2fabb62-79ba-4704-9f1a-bbbac7b4eb55", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "17985ccc-408f-4d6e-a15e-a1062fce4a0c", "node_type": "1", "metadata": {}, "hash": "703ea9cbae100392fee7a4a770d5b53423c594dba37ee9f44b50a34d0098e4ed", "class_name": "RelatedNodeInfo"}}, "text": "Since the start of the\ntwenty-\ufb01rst century this vision has been starting to look more plausible: arti\ufb01cial\nintelligence techniques allied with the scienti\ufb01c study of language have emerged\nfrom universities and research laboratories to inform a variety of industrial and\ncommercial applications. Many websites now offer automatic translation; mobile\nphones can appear to understand spoken questions and commands; search engines\nlike Google use basic linguistic techniques for automatically completing or\n\u2018correcting\u2019 your queries and for \ufb01nding relevant results that are closely matched to\nyour search terms.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 607, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8330253a-e2eb-4418-86cb-ff01133b90a7": {"__data__": {"id_": "8330253a-e2eb-4418-86cb-ff01133b90a7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d2fabb62-79ba-4704-9f1a-bbbac7b4eb55", "node_type": "1", "metadata": {}, "hash": "a7aca842a5984ec286c52374a9434396d8563b29010f08a7b7bd6867c75bb735", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "17985ccc-408f-4d6e-a15e-a1062fce4a0c", "node_type": "1", "metadata": {}, "hash": "703ea9cbae100392fee7a4a770d5b53423c594dba37ee9f44b50a34d0098e4ed", "class_name": "RelatedNodeInfo"}}, "text": "We are still some way from full machine understanding of natural\nlanguage, however. Automated translations still need to be reviewed and edited by\nskilled human translators while no computer system has yet come close to passing\nthe \u2018Turing Test\u2019 of convincingly simulating human conversation. Indeed it has been\nargued that the Turing Test is a blind alley and that research should focus on\nproducing effective applications for speci\ufb01c requirements without seeking to\ngenerate an illusion that users are interacting with a human rather than a machine\n(Hayes and Ford, 1995).", "mimetype": "text/plain", "start_char_idx": 608, "end_char_idx": 1182, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "980359f5-2bd7-4682-aec2-4d17b6a17be2": {"__data__": {"id_": "980359f5-2bd7-4682-aec2-4d17b6a17be2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8330253a-e2eb-4418-86cb-ff01133b90a7", "node_type": "1", "metadata": {}, "hash": "40c8051e8950d005bc1a4e487ae3c0d60b20314e1c73000a8a9e155f2bea6e5a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "17985ccc-408f-4d6e-a15e-a1062fce4a0c", "node_type": "1", "metadata": {}, "hash": "703ea9cbae100392fee7a4a770d5b53423c594dba37ee9f44b50a34d0098e4ed", "class_name": "RelatedNodeInfo"}}, "text": "Hopefully, by the time you \ufb01nish this course you will have\ncome to appreciate some of the challenges posed by full understanding of natural\nlanguage as well as the very real achievements that have resulted from focusing on a\nrange of speci\ufb01c, well-de\ufb01ned tasks.\n1.2 Aims of the course\nThis course combines a critical introduction to key topics in theoretical linguistics\nwith hands-on practical experience of developing applications to process texts and\naccess linguistic resources.", "mimetype": "text/plain", "start_char_idx": 1183, "end_char_idx": 1665, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "06c2a17b-c2c1-46c5-a542-eedc4da933ff": {"__data__": {"id_": "06c2a17b-c2c1-46c5-a542-eedc4da933ff", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "980359f5-2bd7-4682-aec2-4d17b6a17be2", "node_type": "1", "metadata": {}, "hash": "df160b04b9fb830ddc607f6509bbe6c141e1d49c9599b9178840afc9b13e401e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "17985ccc-408f-4d6e-a15e-a1062fce4a0c", "node_type": "1", "metadata": {}, "hash": "703ea9cbae100392fee7a4a770d5b53423c594dba37ee9f44b50a34d0098e4ed", "class_name": "RelatedNodeInfo"}}, "text": "The main topics covered are:\naccessing text corpora and lexical resources\nprocessing raw text\ncategorising and tagging\nextracting information from text\nanalysing sentence structure.", "mimetype": "text/plain", "start_char_idx": 1666, "end_char_idx": 1847, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "407d5142-618f-4e0d-b085-f2bc1e42f049": {"__data__": {"id_": "407d5142-618f-4e0d-b085-f2bc1e42f049", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5408125b-8b32-4b98-b9cd-05fc3aaa7fbd", "node_type": "1", "metadata": {}, "hash": "47ca26199ec87dac70556888b2494d416460fc4e184d6f6d41eb193b6b00fb55", "class_name": "RelatedNodeInfo"}}, "text": "5\n\nCO3354 Introduction to natural language processing\n1.3 Learning outcomes\nOn successful completion of this course, including recommended readings, exercises\nand activities, you should be able to:\n1. utilise and explain the function of software tools such as corpus readers,\nstemmers, taggers and parsers\n2. explain the difference between regular and context-free grammars and de\ufb01ne\nformal grammars for fragments of a natural language\n3. critically appraise existing Natural Language Processing (NLP) applications such\nas chatbots and translation systems\n4. describe some applications of statistical techniques to natural language analysis,", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 641, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5f38e1cc-7ed0-40de-bcac-e0ee086e6eb9": {"__data__": {"id_": "5f38e1cc-7ed0-40de-bcac-e0ee086e6eb9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "407d5142-618f-4e0d-b085-f2bc1e42f049", "node_type": "1", "metadata": {}, "hash": "eee24890d8b46a518365bbfad267397c0d17b2c94dbf6baa0e31ae3556302191", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5408125b-8b32-4b98-b9cd-05fc3aaa7fbd", "node_type": "1", "metadata": {}, "hash": "47ca26199ec87dac70556888b2494d416460fc4e184d6f6d41eb193b6b00fb55", "class_name": "RelatedNodeInfo"}}, "text": "describe some applications of statistical techniques to natural language analysis,\nsuch as classi\ufb01cation and probabilistic parsing.\nEach main chapter contains a list of learning outcomes speci\ufb01c to that chapter at the\nbeginning, as well as a summary at the end of the chapter.\n1.4 Reading list and other learning resources\nThis is a list of textbooks and other resources which will be useful for all or most\nparts of the course. Additional readings will be given at the start of each chapter. See\nthe bibliography for a full list of books and articles referred to, including all ISBNs.", "mimetype": "text/plain", "start_char_idx": 559, "end_char_idx": 1144, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "970789e4-2146-4bbe-a23e-0f66749b44ef": {"__data__": {"id_": "970789e4-2146-4bbe-a23e-0f66749b44ef", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5f38e1cc-7ed0-40de-bcac-e0ee086e6eb9", "node_type": "1", "metadata": {}, "hash": "c2de031cfd3b334e8890a99253767a4c688c729102b46e75964c2e701748de5c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5408125b-8b32-4b98-b9cd-05fc3aaa7fbd", "node_type": "1", "metadata": {}, "hash": "47ca26199ec87dac70556888b2494d416460fc4e184d6f6d41eb193b6b00fb55", "class_name": "RelatedNodeInfo"}}, "text": "See\nthe bibliography for a full list of books and articles referred to, including all ISBNs.\nIn some cases several different books will be listed: you are not expected to read all\nof them, rather the intention is to give you some alternatives in case particular texts\nare hard to obtain.\nEssential reading\nBird, Klein, and Loper (2009): Natural Language Processing with Python . The full\ntext including diagrams is freely available online at http://nltk.org/book (last\nvisited 13th April 2013).", "mimetype": "text/plain", "start_char_idx": 1052, "end_char_idx": 1546, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1b2bcf9b-d898-4068-a91c-8ceebe18ba17": {"__data__": {"id_": "1b2bcf9b-d898-4068-a91c-8ceebe18ba17", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "970789e4-2146-4bbe-a23e-0f66749b44ef", "node_type": "1", "metadata": {}, "hash": "f6b2774725da8079366ff0980d977615daa3d034087db0d44946050a020f749e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5408125b-8b32-4b98-b9cd-05fc3aaa7fbd", "node_type": "1", "metadata": {}, "hash": "47ca26199ec87dac70556888b2494d416460fc4e184d6f6d41eb193b6b00fb55", "class_name": "RelatedNodeInfo"}}, "text": "The main textbook for this course, Natural Language\nProcessing with Python is the outcome of a project extending over several years\nto develop the Natural Language Toolkit (NLTK), which is a set of tools and\nresources for teaching computational linguistics. The NLTK comprises a suite of\nsoftware modules written in Python and a collection of corpora and other\nresources. See section 1.5 below for advice on installing the NLTK and other\nsoftware packages.", "mimetype": "text/plain", "start_char_idx": 1547, "end_char_idx": 2003, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d64513af-c80b-4871-a8cd-6a12bb499b55": {"__data__": {"id_": "d64513af-c80b-4871-a8cd-6a12bb499b55", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1b2bcf9b-d898-4068-a91c-8ceebe18ba17", "node_type": "1", "metadata": {}, "hash": "643d5df793288289b5f71546bada064bd50830728a3099821a34d93745dfa8d6", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5408125b-8b32-4b98-b9cd-05fc3aaa7fbd", "node_type": "1", "metadata": {}, "hash": "47ca26199ec87dac70556888b2494d416460fc4e184d6f6d41eb193b6b00fb55", "class_name": "RelatedNodeInfo"}}, "text": "See section 1.5 below for advice on installing the NLTK and other\nsoftware packages.\nIn the course of working through this text you will gain some experience and\nfamiliarity with the Python language, though you will not be expected to\nproduce substantial original code as part of the learning outcomes of the course.\nRecommended reading\nPinker (2007). The Language Instinct . This book is aimed at non-specialists and\ndeals with many psychological and cultural aspects of language.", "mimetype": "text/plain", "start_char_idx": 1919, "end_char_idx": 2400, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3c7f1760-8315-4a5d-9021-0409b727c3f8": {"__data__": {"id_": "3c7f1760-8315-4a5d-9021-0409b727c3f8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e686929c-2133-4304-86df-a8dd0e707731", "node_type": "1", "metadata": {}, "hash": "dd161576442b509e696fb450d2f53954335722303c8c11039df93097c821bf5c", "class_name": "RelatedNodeInfo"}}, "text": "Chapter 4 is\nparticularly relevant to this course as it provides a clear and accessible\npresentation of two standard techniques for modelling linguistic structure:\n\ufb01nite-state machines and context-free grammars (though Pinker does not in fact\nuse these terms, as we will see in Chapter 2 of the subject guide).\n6\n\nReading list and other learning resources\nJurafsky and Martin (2009): Speech and Language Processing , second edition.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 432, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "aec98491-a6aa-4682-8156-5d56d2ed8ff8": {"__data__": {"id_": "aec98491-a6aa-4682-8156-5d56d2ed8ff8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3c7f1760-8315-4a5d-9021-0409b727c3f8", "node_type": "1", "metadata": {}, "hash": "58cf950a50a7bff54f16d05c30419af9b2ac6784a6bd33be98fd7499c0a93181", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e686929c-2133-4304-86df-a8dd0e707731", "node_type": "1", "metadata": {}, "hash": "dd161576442b509e696fb450d2f53954335722303c8c11039df93097c821bf5c", "class_name": "RelatedNodeInfo"}}, "text": "Currently the de\ufb01nitive introductory textbook in this \ufb01eld, covering the major\ntopics in a way which combines theoretical issues with presentations of key\ntechnologies, formalisms and mathematical techniques. Much of this book goes\nbeyond what you will need to pass this course, but it is always worth turning to\nif you\u2019re looking for a more in-depth discussion of any particular topics.\nPerkins (2010): Python Text Processing with NLTK 2.0 Cookbook . This book will be\nsuitable for students who want to get more practice in applying Python\nprogramming to natural language processing.", "mimetype": "text/plain", "start_char_idx": 433, "end_char_idx": 1017, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5e1191cb-b28a-4fd5-a978-4e2dbe1b2759": {"__data__": {"id_": "5e1191cb-b28a-4fd5-a978-4e2dbe1b2759", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aec98491-a6aa-4682-8156-5d56d2ed8ff8", "node_type": "1", "metadata": {}, "hash": "01120960ebe159bf6aedb57c7ab5685c047c4ba4500b84b6484c0d2af28cfd44", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e686929c-2133-4304-86df-a8dd0e707731", "node_type": "1", "metadata": {}, "hash": "dd161576442b509e696fb450d2f53954335722303c8c11039df93097c821bf5c", "class_name": "RelatedNodeInfo"}}, "text": "Perkins explains several\ntechniques and algorithms in more technical detail than Bird et al. (2009) and\nprovides a variety of worked examples and code snippets.\nSegaran (2007) Programming Collective Intelligence . This highly readable and\ninformative text includes tutorial material on machine learning techniques using\nthe Python language.\nAdditional reading\nRussell and Norvig (2010) Arti\ufb01cial Intelligence: a modern approach , third edition.", "mimetype": "text/plain", "start_char_idx": 1018, "end_char_idx": 1462, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f9427b1e-ad15-4d30-9936-105fba22f021": {"__data__": {"id_": "f9427b1e-ad15-4d30-9936-105fba22f021", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5e1191cb-b28a-4fd5-a978-4e2dbe1b2759", "node_type": "1", "metadata": {}, "hash": "f7accca1dff5404e268dacc797cc094679c34d6c80c0550708ac8e093a8d03a2", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e686929c-2133-4304-86df-a8dd0e707731", "node_type": "1", "metadata": {}, "hash": "dd161576442b509e696fb450d2f53954335722303c8c11039df93097c821bf5c", "class_name": "RelatedNodeInfo"}}, "text": "This book is currently regarded as the de\ufb01nitive textbook in Arti\ufb01cial\nIntelligence, and includes useful material on natural language processing as well\nas on machine learning, which has many applications in NLP.\nMitkov (2003) The Oxford Handbook of Computational Linguistics . Edited by Ruslan\nMitkov. A collection of short articles on major topics in the \ufb01eld, contributed by\nacknowledged experts in their respective disciplines.\nPartee et al. (1990) Mathematical Methods in Linguistics .", "mimetype": "text/plain", "start_char_idx": 1463, "end_char_idx": 1953, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0bdeb975-a17d-4f48-83cc-118021032748": {"__data__": {"id_": "0bdeb975-a17d-4f48-83cc-118021032748", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f9427b1e-ad15-4d30-9936-105fba22f021", "node_type": "1", "metadata": {}, "hash": "31641413684648a77c163a066a091d5f411daf89766f0d7a548ac55d410d7ff1", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e686929c-2133-4304-86df-a8dd0e707731", "node_type": "1", "metadata": {}, "hash": "dd161576442b509e696fb450d2f53954335722303c8c11039df93097c821bf5c", "class_name": "RelatedNodeInfo"}}, "text": "Partee et al. (1990) Mathematical Methods in Linguistics . A classic text, whose\ncontents indicate how much the \ufb01eld has changed since its publication. A book\nwith such a title nowadays would be expected to include substantial coverage of\nstatistics, probability and information theory, but this text is devoted exclusively\nto discrete mathematics including set theory, formal logic, algebra and automata.\nThese topics are particularly applicable to the content of Chapters 2 and 6.", "mimetype": "text/plain", "start_char_idx": 1895, "end_char_idx": 2377, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "95e8f49f-3498-45ef-ab1e-b6b84862fc33": {"__data__": {"id_": "95e8f49f-3498-45ef-ab1e-b6b84862fc33", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a47fea3a-8340-432c-ae40-5a848af88020", "node_type": "1", "metadata": {}, "hash": "101c5eccc70b21942290f1c7d69a95e689975b1a389f7958179aa96348693205", "class_name": "RelatedNodeInfo"}}, "text": "These topics are particularly applicable to the content of Chapters 2 and 6.\nWebsites\nIntroductory/Reference The Internet Grammar of English is a clear and informative\nintroductory guide to English grammar which also serves as a tutorial in\ngrammatical terminology and concepts. The site is hosted by the Survey of\nEnglish Usage at University College London\n(http://www.ucl.ac.uk/internet-grammar/home.htm, last visited 27th May\n2013).", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 435, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4e0742d5-a291-464e-bae1-6e36b6257a69": {"__data__": {"id_": "4e0742d5-a291-464e-bae1-6e36b6257a69", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "95e8f49f-3498-45ef-ab1e-b6b84862fc33", "node_type": "1", "metadata": {}, "hash": "52be2707b86c6341e2f8855567ebe8857fd9496d26032d3206aa5a4929007648", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a47fea3a-8340-432c-ae40-5a848af88020", "node_type": "1", "metadata": {}, "hash": "101c5eccc70b21942290f1c7d69a95e689975b1a389f7958179aa96348693205", "class_name": "RelatedNodeInfo"}}, "text": "Hands-on corpus analysis\nBNCWeb is a web-based interface to the British National Corpus hosted at Lancaster\nUniversity which supports a variety of online queries for corpus analysis\n(http://bncweb.info/; last visited 27th May 2013).\nThe Bank of English forms part of the Collins Corpus, developed by Collins\nDictionaries and the University of Birmingham.", "mimetype": "text/plain", "start_char_idx": 436, "end_char_idx": 790, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "82045510-e880-4e6f-9687-1b57f30c03f2": {"__data__": {"id_": "82045510-e880-4e6f-9687-1b57f30c03f2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "73aa9fd4-cd64-4cb7-bc2f-382239d749a9", "node_type": "1", "metadata": {}, "hash": "e83b76f4d16e7656448d9a8c9d6bbfead4924e82dbc687d7ed3ca16406d46c7b", "class_name": "RelatedNodeInfo"}}, "text": "Used as a basis for Collins\nAdvanced Learner\u2019s Dictionary, grammars and various tutorial materials for\nlearners of English. Limited online access at\nhttp://www.collinslanguage.com/wordbanks; (last visited 27th May 2013).\nJournals and conferences\nComputational Linguistics is the leading journal in this \ufb01eld and is freely available at\nhttp://www.mitpressjournals.org/loi/coli (last visited 27th May 2013).", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 405, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c2ace729-61f6-4231-8048-6b2c1942e13d": {"__data__": {"id_": "c2ace729-61f6-4231-8048-6b2c1942e13d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "82045510-e880-4e6f-9687-1b57f30c03f2", "node_type": "1", "metadata": {}, "hash": "3542e6c20064a7b04e484eceea0803513b710ce05e46d9043b170fe6f56ee277", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "73aa9fd4-cd64-4cb7-bc2f-382239d749a9", "node_type": "1", "metadata": {}, "hash": "e83b76f4d16e7656448d9a8c9d6bbfead4924e82dbc687d7ed3ca16406d46c7b", "class_name": "RelatedNodeInfo"}}, "text": "Conference Proceedings are often freely downloadable and many of these are\nhosted by the ACL Anthology at http://aclweb.org/anthology-new/ (last visited\n27th May 2013).\n7\n\nCO3354 Introduction to natural language processing\n1.5 Software requirements\nThis course assumes you have access to the Natural Language Toolkit (NLTK) either\non your own computer or at your institution.", "mimetype": "text/plain", "start_char_idx": 406, "end_char_idx": 781, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "740360e6-b35f-4722-ad2a-18a58664e540": {"__data__": {"id_": "740360e6-b35f-4722-ad2a-18a58664e540", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c2ace729-61f6-4231-8048-6b2c1942e13d", "node_type": "1", "metadata": {}, "hash": "d952e0ba03a2a028f171effc0dccf4179ab6f87f8644b26b93f19c202e545849", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "73aa9fd4-cd64-4cb7-bc2f-382239d749a9", "node_type": "1", "metadata": {}, "hash": "e83b76f4d16e7656448d9a8c9d6bbfead4924e82dbc687d7ed3ca16406d46c7b", "class_name": "RelatedNodeInfo"}}, "text": "The NLTK can be freely downloaded\nand it is strongly recommended that you install it on your own machine: Windows,\nMac OSX and Linux distributions are available from http://nltk.org (last visited\nApril 10th 2013) and some distributions of Linux have it in their package/software\nmanagers. Full instructions are available at the cited website along with details of\nassociated packages which should also be installed, including Python itself which is\nalso freely available. Once you have installed the software you should also download\nthe required datasets as explained in the textbook (Bird et al., 2009, p.", "mimetype": "text/plain", "start_char_idx": 782, "end_char_idx": 1389, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1f5d39fe-327c-40d2-9f66-b14f3c9dd024": {"__data__": {"id_": "1f5d39fe-327c-40d2-9f66-b14f3c9dd024", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "740360e6-b35f-4722-ad2a-18a58664e540", "node_type": "1", "metadata": {}, "hash": "a7a19157c4c1f988fcd0266370d6d294fbdbed2b4122ec644ae1805d26906240", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "73aa9fd4-cd64-4cb7-bc2f-382239d749a9", "node_type": "1", "metadata": {}, "hash": "e83b76f4d16e7656448d9a8c9d6bbfead4924e82dbc687d7ed3ca16406d46c7b", "class_name": "RelatedNodeInfo"}}, "text": "3).\nYou should check the NLTK website to determine what versions of Python are\nsupported. Current stable releases of NLTK are compatible with Python 2.6 and 2.7.\nA version supporting Python 3 is under development and may be available for\ntesting by the time you read this guide (as of April 2013).\n1.6 How to use the guide/structure of the course\nThis section gives a brief summary of each chapter. These learning outcomes are\nlisted at the beginning of each main chapter and assume that you have worked\nthrough the recommended readings and activities for that chapter.", "mimetype": "text/plain", "start_char_idx": 1390, "end_char_idx": 1959, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4b9cc138-7e25-4618-a514-96ab2282041e": {"__data__": {"id_": "4b9cc138-7e25-4618-a514-96ab2282041e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c12f4d5f-a272-44f4-b3e0-9523ae6c5611", "node_type": "1", "metadata": {}, "hash": "66f8d9c6d5676141b54b9695bf1c54588ae3fb2cc12cb01c16ac02768116c130", "class_name": "RelatedNodeInfo"}}, "text": "1.6.1 Chapter 2: Introducing NLP: patterns and structures in language\nThis chapter looks at different approaches to analysing texts, ranging from \u2018shallow\u2019\ntechniques that focus on individual words and phrases to \u2018deeper\u2019 methods that\nproduce a full representation of the grammatical structure of a sentence as a\nhierarchical tree diagram. The chapter introduces two important formalisms:\nregular expressions , which will play an important part throughout the course, and\ncontext-free grammars which we return to in Chapter 6 of the subject guide.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 547, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "95dd6837-438b-4c0d-9bfc-258350d215ca": {"__data__": {"id_": "95dd6837-438b-4c0d-9bfc-258350d215ca", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4b9cc138-7e25-4618-a514-96ab2282041e", "node_type": "1", "metadata": {}, "hash": "c14cb4f7c44d91f319d2e0da25ec26713244911b0b4d17fe9dd3b6361278d82d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c12f4d5f-a272-44f4-b3e0-9523ae6c5611", "node_type": "1", "metadata": {}, "hash": "66f8d9c6d5676141b54b9695bf1c54588ae3fb2cc12cb01c16ac02768116c130", "class_name": "RelatedNodeInfo"}}, "text": "1.6.2 Chapter 3: Getting to grips with natural language data\nThis chapter looks at the different kinds of data resources that can be used for\ndeveloping tools to harvest information that has been published as machine-readable\ndocuments. In particular, we introduce the notion of a \u2018corpus\u2019 (plural corpora ) \u2013 for\nthe purposes of this course, a computer-readable collection of text or speech. The\nNLTK includes a selection of excerpts from several well-known corpora and we\nprovide brief descriptions of the most important of these and of the different formats\nin which corpora are stored.", "mimetype": "text/plain", "start_char_idx": 548, "end_char_idx": 1137, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "256eb066-8499-4edf-ab79-41fc5deb103f": {"__data__": {"id_": "256eb066-8499-4edf-ab79-41fc5deb103f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "95dd6837-438b-4c0d-9bfc-258350d215ca", "node_type": "1", "metadata": {}, "hash": "c93a9067786248681a79f56ebe9f30860726717fc9ce4795ca5533a1e98079d8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c12f4d5f-a272-44f4-b3e0-9523ae6c5611", "node_type": "1", "metadata": {}, "hash": "66f8d9c6d5676141b54b9695bf1c54588ae3fb2cc12cb01c16ac02768116c130", "class_name": "RelatedNodeInfo"}}, "text": "8\n\nWhat the course does not cover\n1.6.3 Chapter 4: Computational tools for text analysis\nThe previous chapter introduced some relatively super\ufb01cial techniques for language\nanalysis such as concordancing and collocations. This chapter covers some\nfundamental operations in text analysis:\ntokenisation: breaking up a character string into words, punctuation marks and\nother meaningful expressions;\nstemming: removing af\ufb01xes from words, e.g. mean+ing ,distribut+ion ;\ntagging: associating each word in a text with a grammatical category or part of\nspeech.", "mimetype": "text/plain", "start_char_idx": 1138, "end_char_idx": 1690, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "92df3f81-936b-4e93-a147-3f14704be827": {"__data__": {"id_": "92df3f81-936b-4e93-a147-3f14704be827", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "256eb066-8499-4edf-ab79-41fc5deb103f", "node_type": "1", "metadata": {}, "hash": "7e50716400427ad1f45bbf4279e93908374282301419dbba8e2685ede1e049b5", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c12f4d5f-a272-44f4-b3e0-9523ae6c5611", "node_type": "1", "metadata": {}, "hash": "66f8d9c6d5676141b54b9695bf1c54588ae3fb2cc12cb01c16ac02768116c130", "class_name": "RelatedNodeInfo"}}, "text": "1.6.4 Chapter 5: Statistically-based techniques for text analysis\nStatistical and probabilistic methods are pervasive in modern computational\nlinguistics. These methods generally do not aim at complete understanding or\nanalysis of a text, but at producing reliable answers to well-de\ufb01ned problems such as\nsentiment analysis, topic detection or recognising named entities and relations\nbetween them in a text.", "mimetype": "text/plain", "start_char_idx": 1691, "end_char_idx": 2099, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6a2652a2-f5e5-4a3b-81a8-89aacf398731": {"__data__": {"id_": "6a2652a2-f5e5-4a3b-81a8-89aacf398731", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "41954dcf-ce49-439a-bc62-a757a53c772d", "node_type": "1", "metadata": {}, "hash": "0c5a2da3fef54b73b79b1b3e4ec425d5d2b0dd493c6a88ca740888cec2709b0b", "class_name": "RelatedNodeInfo"}}, "text": "1.6.5 Chapter 6: Analysing sentences: syntax and parsing\nThis chapter resumes the discussion of natural language syntax that was introduced\nin Chapter 2, concentrating on context-free grammar formalisms and various ways\nthey need to be modi\ufb01ed and extended beyond the model that was presented in that\nchapter. Formal grammars do not encode any kind of processing strategy but simply\nprovide a declarative speci\ufb01cation of the well-formed sentences in a language.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 461, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7ee67fdb-fcd5-4ece-b603-8742cf3619a2": {"__data__": {"id_": "7ee67fdb-fcd5-4ece-b603-8742cf3619a2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6a2652a2-f5e5-4a3b-81a8-89aacf398731", "node_type": "1", "metadata": {}, "hash": "07994db5ee9132d3d8a64f587c6e6e55d3800cc2c3551b6424a8265d92f59c66", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "41954dcf-ce49-439a-bc62-a757a53c772d", "node_type": "1", "metadata": {}, "hash": "0c5a2da3fef54b73b79b1b3e4ec425d5d2b0dd493c6a88ca740888cec2709b0b", "class_name": "RelatedNodeInfo"}}, "text": "Parsers are computer programs that use grammar rules to analyse sentences, and\nthis chapter introduces some fundamental approaches to syntactic parsing.\n1.6.6 Appendices\nThe Appendices include:\nA. A bibliography listing all works referenced in the subject guide, including\npublication details and ISBNs.\nB. A glossary of technical terms used in this subject guide.\nC. Answers to selected activities.\nD. A trace of a recursive descent parse as described in Chapter 6 of the subject guide.\nE. A sample examination paper with guidelines on how to answer questions.", "mimetype": "text/plain", "start_char_idx": 462, "end_char_idx": 1023, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8c281032-c249-42de-b36c-d8ee871b3803": {"__data__": {"id_": "8c281032-c249-42de-b36c-d8ee871b3803", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7ee67fdb-fcd5-4ece-b603-8742cf3619a2", "node_type": "1", "metadata": {}, "hash": "3f2e85962308851455e8e1458cf08a338dc35f784e807a2ff0f7de623cbaee5e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "41954dcf-ce49-439a-bc62-a757a53c772d", "node_type": "1", "metadata": {}, "hash": "0c5a2da3fef54b73b79b1b3e4ec425d5d2b0dd493c6a88ca740888cec2709b0b", "class_name": "RelatedNodeInfo"}}, "text": "E. A sample examination paper with guidelines on how to answer questions.\n1.7 What the course does not cover\nThe \ufb01eld of natural language processing or computational linguistics is a large and\ndiverse one, and includes many topics we will not be able to address in this course.\nSome of these are listed below:\n9\n\nCO3354 Introduction to natural language processing\nspeech recognition and synthesis\ndialogue and question answering\nmachine translation\nsemantic analysis, including word meanings and logical structure\ngenerating text or speech from non-linguistic inputs.", "mimetype": "text/plain", "start_char_idx": 950, "end_char_idx": 1517, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0b969fd4-c137-4acd-b272-208d00f7d49a": {"__data__": {"id_": "0b969fd4-c137-4acd-b272-208d00f7d49a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8c281032-c249-42de-b36c-d8ee871b3803", "node_type": "1", "metadata": {}, "hash": "2f7acf75a70f89948840f5b900a03583b51d48089afbfaf5700a18e1765e7ba8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "41954dcf-ce49-439a-bc62-a757a53c772d", "node_type": "1", "metadata": {}, "hash": "0c5a2da3fef54b73b79b1b3e4ec425d5d2b0dd493c6a88ca740888cec2709b0b", "class_name": "RelatedNodeInfo"}}, "text": "However, the course should provide you with a basis for investigating some of these\nareas for your \ufb01nal year project. Some of these topics are dealt with in the later\nchapters of Bird et al. (2009) and most of them are touched on by Jurafsky and\nMartin (2009).\n10\n\nChapter 2\nIntroducing NLP: patterns and structure in\nlanguage\nEssential reading\nSteven Pinker (2007), The Language Instinct , Chapter 4.", "mimetype": "text/plain", "start_char_idx": 1518, "end_char_idx": 1919, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4930c93a-230d-403c-9675-1eb74ea812f5": {"__data__": {"id_": "4930c93a-230d-403c-9675-1eb74ea812f5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0b969fd4-c137-4acd-b272-208d00f7d49a", "node_type": "1", "metadata": {}, "hash": "5870fbf2ff23bd814cb71cbb7c0abdb3940f6d163ef3a334f30a60576755cb65", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "41954dcf-ce49-439a-bc62-a757a53c772d", "node_type": "1", "metadata": {}, "hash": "0c5a2da3fef54b73b79b1b3e4ec425d5d2b0dd493c6a88ca740888cec2709b0b", "class_name": "RelatedNodeInfo"}}, "text": "Recommended reading\nJurafsky and Martin (2009), Speech and Language Processing second edition,\nChapters/Sections 2 \u2018Regular Expressions and Automata\u2019, 5.1 \u2018(Mostly) English Word\nClasses\u2019, 12.1 \u2018Constituency\u2019, 12.2 \u2018Context-Free Grammars\u2019, 12.3 \u2018Some Grammar\nRules for English\u2019.", "mimetype": "text/plain", "start_char_idx": 1920, "end_char_idx": 2197, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "46791f14-864d-4812-b012-f1984b15435a": {"__data__": {"id_": "46791f14-864d-4812-b012-f1984b15435a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a7e422d7-7aa7-4dfc-b049-68e45ff08ab2", "node_type": "1", "metadata": {}, "hash": "1d4c3756b4c390d4ccff607265ae24c12c9fda9f9cfb93b0ceaf7751df9ae0b2", "class_name": "RelatedNodeInfo"}}, "text": "Additional reading\nThe Internet Grammar of English;\nhttp://www.ucl.ac.uk/internet-grammar/home.htm especially sections \u2018Word\nClasses\u2019 and \u2018Introducing Phrases\u2019.\nPartee, ter Meulen and Wall, (1990), Mathematical Methods in Linguistics ,\nChapters/Sections 16.1\u20134, 17.1\u20133 (omitting 17.1.2\u20135, 17.2.1), 18.2, 18.6.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 309, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4cfeb977-af54-41b0-b681-681f662dfb8c": {"__data__": {"id_": "4cfeb977-af54-41b0-b681-681f662dfb8c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "46791f14-864d-4812-b012-f1984b15435a", "node_type": "1", "metadata": {}, "hash": "aa44c3b0b1901c40faed347fc9b1902bdfd94c7e902a20ca553093d8e0ae306b", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a7e422d7-7aa7-4dfc-b049-68e45ff08ab2", "node_type": "1", "metadata": {}, "hash": "1d4c3756b4c390d4ccff607265ae24c12c9fda9f9cfb93b0ceaf7751df9ae0b2", "class_name": "RelatedNodeInfo"}}, "text": "2.1 Learning outcomes\nBy the end of this chapter, and having completed the Essential reading and activities,\nyou should be able to:\nexplain the concept of \ufb01nite state machines (FSMs) and their connections with\nregular expressions; work through simple FSMs\nwrite regular expressions for well-de\ufb01ned patterns of symbols\nanalyse sentences in terms of parts of speech (POS) and constituent structure,\nincluding the use of tree diagrams\nwrite regular and context-free grammars for small fragments of natural language\nexplain the concept of stemming and specify word-formation rules for given\nexamples.", "mimetype": "text/plain", "start_char_idx": 310, "end_char_idx": 906, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "815b3681-02eb-4dd1-9194-de2466b9b063": {"__data__": {"id_": "815b3681-02eb-4dd1-9194-de2466b9b063", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4cfeb977-af54-41b0-b681-681f662dfb8c", "node_type": "1", "metadata": {}, "hash": "82376a6b7e4bba639ecdc56fc9d2f48422f62dcc17d53c36540a9f6207b9aa76", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a7e422d7-7aa7-4dfc-b049-68e45ff08ab2", "node_type": "1", "metadata": {}, "hash": "1d4c3756b4c390d4ccff607265ae24c12c9fda9f9cfb93b0ceaf7751df9ae0b2", "class_name": "RelatedNodeInfo"}}, "text": "11\n\nCO3354 Introduction to natural language processing\n2.2 Introduction\nPeople communicate in many different ways: through speaking and listening,\nmaking gestures, using specialised hand signals (such as when driving or directing\ntraf\ufb01c), using sign languages for the deaf, or through various forms of text.\nBy text we mean words that are written or printed on a \ufb02at surface (paper, card,\nstreet signs and so on) or displayed on a screen or electronic device in order to be\nread by their intended recipient (or by whoever happens to be passing by).", "mimetype": "text/plain", "start_char_idx": 907, "end_char_idx": 1455, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e370a1da-7e9f-4f52-af87-ee2e34a1a22b": {"__data__": {"id_": "e370a1da-7e9f-4f52-af87-ee2e34a1a22b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "815b3681-02eb-4dd1-9194-de2466b9b063", "node_type": "1", "metadata": {}, "hash": "42f383a9de43867f9dbbd91a8641263cfa373b93fa80a51de44578f62b31d060", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a7e422d7-7aa7-4dfc-b049-68e45ff08ab2", "node_type": "1", "metadata": {}, "hash": "1d4c3756b4c390d4ccff607265ae24c12c9fda9f9cfb93b0ceaf7751df9ae0b2", "class_name": "RelatedNodeInfo"}}, "text": "This course will focus only on the last of these: we will be concerned with various\nways in which computer systems can analyse and interpret texts, and we will assume\nfor convenience that these texts are presented in an electronic format. This is of\ncourse quite a reasonable assumption, given the huge amount of text we can access\nvia the World Wide Web and the increasing availability of electronic versions of\nnewspapers, novels, textbooks and indeed subject guides. This chapter introduces\nsome essential concepts, techniques and terminology that will be applied in the rest\nof the course.", "mimetype": "text/plain", "start_char_idx": 1456, "end_char_idx": 2049, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e449ba67-6b3f-467c-9c37-aa87fb81e168": {"__data__": {"id_": "e449ba67-6b3f-467c-9c37-aa87fb81e168", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e370a1da-7e9f-4f52-af87-ee2e34a1a22b", "node_type": "1", "metadata": {}, "hash": "039b77e9dadb397516149b9894e50b7ff4eb9f7440c5812ef7710d7b59ed4692", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a7e422d7-7aa7-4dfc-b049-68e45ff08ab2", "node_type": "1", "metadata": {}, "hash": "1d4c3756b4c390d4ccff607265ae24c12c9fda9f9cfb93b0ceaf7751df9ae0b2", "class_name": "RelatedNodeInfo"}}, "text": "Some material in this chapter is a little technical but no programming\nis involved at this stage.", "mimetype": "text/plain", "start_char_idx": 2050, "end_char_idx": 2147, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b224ec18-c917-4558-8912-0c340d682004": {"__data__": {"id_": "b224ec18-c917-4558-8912-0c340d682004", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "8cafad7a-b7ee-486a-96f3-35f93d97a364", "node_type": "1", "metadata": {}, "hash": "2d934263d2f854b0fb3df1aeafc4c696772474204adfe9f1a72a64a981a9e585", "class_name": "RelatedNodeInfo"}}, "text": "Some material in this chapter is a little technical but no programming\nis involved at this stage.\nWe will begin in section 2.3 by considering texts as strings of characters which can\nbe broken up into sub-strings, and introduce some techniques for informally\ndescribing patterns of various kinds that occur in texts. Subsequently in section 2.4\nwe will begin to motivate the analysis of texts in terms of hierarchical structures in\nwhich elements of various kinds can be embedded within each other, in a\ncomparable way to the elements that make up an HTML web document.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 569, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "718b7258-497f-4a7b-9fd3-c897e2b71787": {"__data__": {"id_": "718b7258-497f-4a7b-9fd3-c897e2b71787", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b224ec18-c917-4558-8912-0c340d682004", "node_type": "1", "metadata": {}, "hash": "b57ed09626e56b0a8023442884d74247cf41f90739dbf3300d74fe184ce5fa29", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "8cafad7a-b7ee-486a-96f3-35f93d97a364", "node_type": "1", "metadata": {}, "hash": "2d934263d2f854b0fb3df1aeafc4c696772474204adfe9f1a72a64a981a9e585", "class_name": "RelatedNodeInfo"}}, "text": "This section\nintroduces some technical machinery such as: \ufb01nite-state machines (FSMs), regular\nexpressions, regular grammars and context-free grammars.", "mimetype": "text/plain", "start_char_idx": 570, "end_char_idx": 721, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9e177f37-6ba2-4e79-9c7a-d1e9127c901d": {"__data__": {"id_": "9e177f37-6ba2-4e79-9c7a-d1e9127c901d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "d2fc6b8a-3b33-42b3-820d-a7b3ad8d0304", "node_type": "1", "metadata": {}, "hash": "5fe440ce89fd78f5ef25ab4ac66b6d3edd50705f2475fcf8f6a872e76af119bd", "class_name": "RelatedNodeInfo"}}, "text": "2.3 Basic concepts\n2.3.1 Tokenised text and pattern matching\nOne of the more basic operations that can be applied to a text is tokenising :\nbreaking up a stream of characters into words, punctuation marks, numbers and\nother discrete items. So for example the character string\n\u201cDr. Watson, Mr. Sherlock Holmes\u201d, said Stamford, introducing us.\ncan be tokenised as in the following example, where each token is enclosed in single\nquotation marks:\n`\"' `Dr.' `Watson' `,' `Mr.'", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 472, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6336db00-0236-439c-91c2-48c301597882": {"__data__": {"id_": "6336db00-0236-439c-91c2-48c301597882", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9e177f37-6ba2-4e79-9c7a-d1e9127c901d", "node_type": "1", "metadata": {}, "hash": "f7a18439f19eeeacaad28d4adcd16af5a194b8698028000696d26c5f7514808e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "d2fc6b8a-3b33-42b3-820d-a7b3ad8d0304", "node_type": "1", "metadata": {}, "hash": "5fe440ce89fd78f5ef25ab4ac66b6d3edd50705f2475fcf8f6a872e76af119bd", "class_name": "RelatedNodeInfo"}}, "text": "`Watson' `,' `Mr.' `Sherlock' `Holmes' `\"' `,'\n`said' `Stamford' `,' `introducing' `us' `.'\nAt this level, words have not been classi\ufb01ed into grammatical categories and we\nhave very little indication of syntactic structure. Still, a fair amount of information\nmay be obtained from relatively shallow analysis of tokenised text. For example,\nsuppose we want to develop a procedure for \ufb01nding all personal names in a given\ntext.", "mimetype": "text/plain", "start_char_idx": 454, "end_char_idx": 880, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "aab24697-8302-44fa-a871-ded25764baa4": {"__data__": {"id_": "aab24697-8302-44fa-a871-ded25764baa4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6336db00-0236-439c-91c2-48c301597882", "node_type": "1", "metadata": {}, "hash": "7b0b5c6d9f8c8135fc87676bad0f1168e7216228f57454fee03f81f418389555", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "d2fc6b8a-3b33-42b3-820d-a7b3ad8d0304", "node_type": "1", "metadata": {}, "hash": "5fe440ce89fd78f5ef25ab4ac66b6d3edd50705f2475fcf8f6a872e76af119bd", "class_name": "RelatedNodeInfo"}}, "text": "We know that personal names always start with capital letters, but that is not\nenough to distinguish them from names of countries, cities, companies, racehorses\n12\n\nBasic concepts\nand so on, or from capitalisation at the start of a sentence. Some additional ways to\nidentify personal names include:\nUse of a title Dr.,Mr.,Mrs.,Miss,Professor and so on.", "mimetype": "text/plain", "start_char_idx": 881, "end_char_idx": 1233, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f0b77da9-5853-468f-b7f6-98c97632501e": {"__data__": {"id_": "f0b77da9-5853-468f-b7f6-98c97632501e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aab24697-8302-44fa-a871-ded25764baa4", "node_type": "1", "metadata": {}, "hash": "acf84e38930a85fd92d5186a9c4e5f24120b3aa8569e1f29c58abac28ff3fb85", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "d2fc6b8a-3b33-42b3-820d-a7b3ad8d0304", "node_type": "1", "metadata": {}, "hash": "5fe440ce89fd78f5ef25ab4ac66b6d3edd50705f2475fcf8f6a872e76af119bd", "class_name": "RelatedNodeInfo"}}, "text": "A capitalised word or words followed by a comma and a number, usually below\n100: this is a common way of referring to people in news reports, where the\nnumber stands for their age \u2013 for example Pierre Vinken, 61, . . .\nA capitalised word followed by a verb that usually applies to humans: said,\nreported ,claimed ,thought ,argued . . . This can over-generate in the case of\ncountry or organisation names as in the Crown argues orBritain claimed .", "mimetype": "text/plain", "start_char_idx": 1234, "end_char_idx": 1680, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cf0bf3b5-c0ba-4867-b730-a052a5a9a319": {"__data__": {"id_": "cf0bf3b5-c0ba-4867-b730-a052a5a9a319", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f0b77da9-5853-468f-b7f6-98c97632501e", "node_type": "1", "metadata": {}, "hash": "dc8f15d04c800d19469cb23b738b5c7cc8a96a4e2aa96bcf5fd4357ba57eb3c9", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "d2fc6b8a-3b33-42b3-820d-a7b3ad8d0304", "node_type": "1", "metadata": {}, "hash": "5fe440ce89fd78f5ef25ab4ac66b6d3edd50705f2475fcf8f6a872e76af119bd", "class_name": "RelatedNodeInfo"}}, "text": "We can express these more concisely as follows, where jis the disjunction symbol,\nWord stands for a capitalised word and Intis an integer:\n(Dr.jProfessorjMr.jMrs.jMissjMs)Word\nWord Word ,Int\nWord (saidjthoughtjbelievedjclaimedjarguedj...)\nLearning activity\n1. Write down your own examples of names that match each of the above patterns.\n2.", "mimetype": "text/plain", "start_char_idx": 1681, "end_char_idx": 2020, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6941ba64-e39a-4bb1-a9c2-816bce61d0b5": {"__data__": {"id_": "6941ba64-e39a-4bb1-a9c2-816bce61d0b5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "f97a944c-98e7-45e4-b396-0b516221ce32", "node_type": "1", "metadata": {}, "hash": "4e221cd2495ad8b3ff6c75af95cff601afabfc21e12b084770049bdb77f2d15a", "class_name": "RelatedNodeInfo"}}, "text": "Write down your own examples of names that match each of the above patterns.\n2. Pick a newspaper article or webpage that provides a variety of examples of people\u2019s names. Do they\nmatch the patterns we have encoded above? If not, see if you can devise additional rules for\nrecognising names and write them out in a similar format.\n2.3.2 Parts of speech\nA further stage in analysing text is to associate every token with a grammatical\ncategory or part of speech (POS).", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 466, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "14ffb241-7518-4acf-9a91-daf76ad4bacf": {"__data__": {"id_": "14ffb241-7518-4acf-9a91-daf76ad4bacf", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6941ba64-e39a-4bb1-a9c2-816bce61d0b5", "node_type": "1", "metadata": {}, "hash": "c340eea4b0533db0d056b8fc0cc8849fa97babd441be38475d2d68e640b776a9", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "f97a944c-98e7-45e4-b396-0b516221ce32", "node_type": "1", "metadata": {}, "hash": "4e221cd2495ad8b3ff6c75af95cff601afabfc21e12b084770049bdb77f2d15a", "class_name": "RelatedNodeInfo"}}, "text": "A number of different POS classi\ufb01cations have\nbeen developed within computational linguistics and we will see some examples in\nsubsequent chapters. The following is a list of categories that are often encountered\nin general linguistics: you will be familiar with many of them already from learning\nthe grammar of English or other languages, though some terms such as Determiner\norConjunction may be new to you.\nNoun \ufb01sh, book, house, pen, procrastination, language\nProper noun John, France, Barack, Goldsmiths, Python\nVerb loves, hates, studies, sleeps,", "mimetype": "text/plain", "start_char_idx": 467, "end_char_idx": 1020, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4c3bc92f-712b-4f5b-9e3c-5c6ca73ea05b": {"__data__": {"id_": "4c3bc92f-712b-4f5b-9e3c-5c6ca73ea05b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "14ffb241-7518-4acf-9a91-daf76ad4bacf", "node_type": "1", "metadata": {}, "hash": "a9dc9c9c3968364946da03eccea6d4223b05ab92be83b70e68ae26791c72638c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "f97a944c-98e7-45e4-b396-0b516221ce32", "node_type": "1", "metadata": {}, "hash": "4e221cd2495ad8b3ff6c75af95cff601afabfc21e12b084770049bdb77f2d15a", "class_name": "RelatedNodeInfo"}}, "text": "France, Barack, Goldsmiths, Python\nVerb loves, hates, studies, sleeps, thinks, is, has\nAdjective grumpy, sleepy, happy, bashful\nAdverb slowly, quickly, now, here, there\nPronoun I, you, he, she, we, us, it, they\nPreposition in, on, at, by, around, with, without\nConjunction and, but, or, unless\nDeterminer the, a, an, some, many, few, 100\n13\n\nCO3354 Introduction to natural language processing\nBird et al.", "mimetype": "text/plain", "start_char_idx": 950, "end_char_idx": 1354, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2a4374e1-c0a7-415d-9b59-162d89743850": {"__data__": {"id_": "2a4374e1-c0a7-415d-9b59-162d89743850", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4c3bc92f-712b-4f5b-9e3c-5c6ca73ea05b", "node_type": "1", "metadata": {}, "hash": "a2a55b188589b9e11d31f90b0e948e244a4f7ba8d1cbf1a020dd63c0554897c8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "f97a944c-98e7-45e4-b396-0b516221ce32", "node_type": "1", "metadata": {}, "hash": "4e221cd2495ad8b3ff6c75af95cff601afabfc21e12b084770049bdb77f2d15a", "class_name": "RelatedNodeInfo"}}, "text": "100\n13\n\nCO3354 Introduction to natural language processing\nBird et al. (2009, pp. 184\u20135) make the standard distinction that nouns \u2018generally\nrefer to people, places, things or concepts\u2019 while verbs \u2018describe events or actions\u2019.\nThis may be helpful when one is starting to learn grammatical terminology but is\nsomething of an over-simpli\ufb01cation. One can easily \ufb01nd or construct examples\nwhere the same concept can be expressed by a noun or a verb, or by an adjective or\nan adverb.", "mimetype": "text/plain", "start_char_idx": 1284, "end_char_idx": 1763, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b8187973-a78d-47b2-aa0f-20ffac8499ea": {"__data__": {"id_": "b8187973-a78d-47b2-aa0f-20ffac8499ea", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2a4374e1-c0a7-415d-9b59-162d89743850", "node_type": "1", "metadata": {}, "hash": "924886e042cd0e8715e9ab36115cb08894238aecca3bbb0126dfe3b234cadaf9", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "f97a944c-98e7-45e4-b396-0b516221ce32", "node_type": "1", "metadata": {}, "hash": "4e221cd2495ad8b3ff6c75af95cff601afabfc21e12b084770049bdb77f2d15a", "class_name": "RelatedNodeInfo"}}, "text": "And on the other hand, there are many words that can take different\nparts of speech depending on what they do in a sentence:\n1. Rome fell swiftly .\n2. The fallof Rome was swift.\n3. The enemy completely destroyed the city.\n4.", "mimetype": "text/plain", "start_char_idx": 1764, "end_char_idx": 1988, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "da0bb457-8323-4e05-a99a-e584ff4d81e3": {"__data__": {"id_": "da0bb457-8323-4e05-a99a-e584ff4d81e3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "471f0d14-6eb0-42cf-9816-a59b40804092", "node_type": "1", "metadata": {}, "hash": "3b9a2b848a54594d712243bebe6cab2ea5cc1645610b0d9f0ada1a9f9eaec44c", "class_name": "RelatedNodeInfo"}}, "text": "3. The enemy completely destroyed the city.\n4. The enemy\u2019s destruction of the city was complete .\n5. John likes to \ufb01shon the river bank.\n6. John caught a \ufb01sh.\nAdditionally, some types of verbs do not correspond to any particular action but\nserve a purely grammatical function: these include the auxiliary verbs such as did,\nshall and so on. So in summary, we can often only assign a part of speech to a word\ndepending on its function in context rather than how it relates to real things or\nevents in the world.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 510, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b38f1308-86a3-4ce3-bc01-f4d1d22f5787": {"__data__": {"id_": "b38f1308-86a3-4ce3-bc01-f4d1d22f5787", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "da0bb457-8323-4e05-a99a-e584ff4d81e3", "node_type": "1", "metadata": {}, "hash": "a399bc5380abca8ea4147cb22a2fe004797bd369dd6080d1a440bfdd359fabe1", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "471f0d14-6eb0-42cf-9816-a59b40804092", "node_type": "1", "metadata": {}, "hash": "3b9a2b848a54594d712243bebe6cab2ea5cc1645610b0d9f0ada1a9f9eaec44c", "class_name": "RelatedNodeInfo"}}, "text": "Learning activity\nIdentify parts of speech in these examples:\n1. The cat sat on the mat.\n2. John sat on the chair.\n3. The dog saw the rabbit.\n4. Jack and Jill went up the hill.\n5. The owl and the pussycat went to sea.\n6. The train travelled slowly.\n2.3.3 Constituent structure\nYou will have noticed several recurring patterns in the above examples: Det Noun ,\nPrep Det Noun and so on.", "mimetype": "text/plain", "start_char_idx": 511, "end_char_idx": 895, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "23f7d6e1-b956-406a-a334-555ffa2f7847": {"__data__": {"id_": "23f7d6e1-b956-406a-a334-555ffa2f7847", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b38f1308-86a3-4ce3-bc01-f4d1d22f5787", "node_type": "1", "metadata": {}, "hash": "dbdab219169fbce4797e681f684617c07c2acf3f4f1bcada98af667c7181a8fc", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "471f0d14-6eb0-42cf-9816-a59b40804092", "node_type": "1", "metadata": {}, "hash": "3b9a2b848a54594d712243bebe6cab2ea5cc1645610b0d9f0ada1a9f9eaec44c", "class_name": "RelatedNodeInfo"}}, "text": "You may also have noticed that some types of phrase can\noccur in similar contexts: (Johnjthe cat) sat , aProper Noun or a sequence Det Noun\ncan come before a Verb.", "mimetype": "text/plain", "start_char_idx": 896, "end_char_idx": 1059, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dc70475a-13f2-473c-a551-7e10b5cd8562": {"__data__": {"id_": "dc70475a-13f2-473c-a551-7e10b5cd8562", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "23f7d6e1-b956-406a-a334-555ffa2f7847", "node_type": "1", "metadata": {}, "hash": "a860275924f5434643784ae1dd50202f04a147bbd56bac2c4cef702709291b00", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "471f0d14-6eb0-42cf-9816-a59b40804092", "node_type": "1", "metadata": {}, "hash": "3b9a2b848a54594d712243bebe6cab2ea5cc1645610b0d9f0ada1a9f9eaec44c", "class_name": "RelatedNodeInfo"}}, "text": "Some of these possibilities can be captured using the\npattern-matching notation introduced above, for example:\n(((theja)(catjdog))(JohnjJackjSusan))(barkedjslept)\nThis will match any sequence which ends in a verb barked orslept preceded by\neither a Determiner aorthefollowed by a Noun catordogora proper name John,\nJack orSusan .", "mimetype": "text/plain", "start_char_idx": 1060, "end_char_idx": 1389, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bb8df131-75d7-4feb-a496-b145e1c25cc6": {"__data__": {"id_": "bb8df131-75d7-4feb-a496-b145e1c25cc6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dc70475a-13f2-473c-a551-7e10b5cd8562", "node_type": "1", "metadata": {}, "hash": "6c384560f8f6e93eaec78f530571a5c63d39900e3b3139485328073757b65a64", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "471f0d14-6eb0-42cf-9816-a59b40804092", "node_type": "1", "metadata": {}, "hash": "3b9a2b848a54594d712243bebe6cab2ea5cc1645610b0d9f0ada1a9f9eaec44c", "class_name": "RelatedNodeInfo"}}, "text": "Patterns that have similar distributions (meaning that they can occur in similar\ncontexts) are standardly identi\ufb01ed by phrasal categories such as Noun Phrase orVerb\n14\n\nA closer look at syntax\nPhrase . A common way to represent information about constituent structure is by\nmeans of production rules of the form X!A;B;C::: .", "mimetype": "text/plain", "start_char_idx": 1390, "end_char_idx": 1714, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5259bdf5-5c8a-4d53-8091-f40757bccae3": {"__data__": {"id_": "5259bdf5-5c8a-4d53-8091-f40757bccae3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "1e840b1d-d004-4bef-b8d7-b3e8c18e24a5", "node_type": "1", "metadata": {}, "hash": "1bc29fe514ee289d8322444be9cebc694f50d2660962fab127cf23f604bd8221", "class_name": "RelatedNodeInfo"}}, "text": "Using rules of this form,\ngrammatical sentences can be broken down into constituent phrases consisting of\nvarious combinations of POS:\nSentence!Noun Phrase, Verb Phrase\nNoun Phrase!Determiner, Noun ( Example: the, dog)\nNoun Phrase!Proper Noun ( Example: Jack)\nNoun Phrase!Noun Phrase, Conj, Noun Phrase ( Examples: Jack and Jill, the owl and the pussycat)\nVerb Phrase!Verb, Noun Phrase ( Example: saw the rabbit)\nVerb Phrase!Verb, Preposition, Noun Phrase ( Examples: went up the hill,", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 485, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8b015bda-90e9-41c3-ab02-c938c58fb6ff": {"__data__": {"id_": "8b015bda-90e9-41c3-ab02-c938c58fb6ff", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5259bdf5-5c8a-4d53-8091-f40757bccae3", "node_type": "1", "metadata": {}, "hash": "8e027b7238d66c7812ddacf0ca120c1bb2cfbd80c93911842b866e8e15368775", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "1e840b1d-d004-4bef-b8d7-b3e8c18e24a5", "node_type": "1", "metadata": {}, "hash": "1bc29fe514ee289d8322444be9cebc694f50d2660962fab127cf23f604bd8221", "class_name": "RelatedNodeInfo"}}, "text": "Preposition, Noun Phrase ( Examples: went up the hill, sat on the mat)\nLearning activity\nRead through the recommended sections of the UCL \u2018Internet Grammar of English\u2019. Write production rules\nthat cover some of the examples in these sections.\n2.4 A closer look at syntax\nThis section aims to motivate the idea that texts can be analysed as hierarchical\nstructures rather than \u2018\ufb02at\u2019 sequences whose elements are organised in various\npatterns.", "mimetype": "text/plain", "start_char_idx": 431, "end_char_idx": 872, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "86e24653-2bc6-4c23-9e68-cac4d9860fc5": {"__data__": {"id_": "86e24653-2bc6-4c23-9e68-cac4d9860fc5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8b015bda-90e9-41c3-ab02-c938c58fb6ff", "node_type": "1", "metadata": {}, "hash": "ec68bbc5375abd77a9c3265c92a6d6dab59432746759550b020bff19e199b309", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "1e840b1d-d004-4bef-b8d7-b3e8c18e24a5", "node_type": "1", "metadata": {}, "hash": "1bc29fe514ee289d8322444be9cebc694f50d2660962fab127cf23f604bd8221", "class_name": "RelatedNodeInfo"}}, "text": "The Essential reading for this chapter by Steven Pinker gives a concise and\naccessible introduction to some fundamental distinctions we will make in this\nsection, from the point of view of Chomskyan linguistics (compare Chomsky,\n1957/2002). Chomsky and his followers argue that some components of our\nknowledge of language are innate, and Pinker (2007, chapter 4) sketches some\narguments in support of this claim. This position is considered to be contentious by\nmany linguists and we will not address it in this course.", "mimetype": "text/plain", "start_char_idx": 873, "end_char_idx": 1393, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f19bc2b5-0c7e-4ae6-937a-2ee3992c4c44": {"__data__": {"id_": "f19bc2b5-0c7e-4ae6-937a-2ee3992c4c44", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "86e24653-2bc6-4c23-9e68-cac4d9860fc5", "node_type": "1", "metadata": {}, "hash": "8c1aa6fc3c1c8add70b503fb107d330353db77872d6e942cf923a2d74b99f2b4", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "1e840b1d-d004-4bef-b8d7-b3e8c18e24a5", "node_type": "1", "metadata": {}, "hash": "1bc29fe514ee289d8322444be9cebc694f50d2660962fab127cf23f604bd8221", "class_name": "RelatedNodeInfo"}}, "text": "However, Pinker\u2019s chapter\nprovides a useful introduction to syntactic analysis and clearly distinguishes between\ntwo formal techniques for modelling grammatical knowledge, which underlie\nregular andcontext-free grammars respectively (these terms will be explained as\nwe go along).\nLearning activity\nIf you have access to it, read through the recommended chapter by Pinker and make notes, and have it to\nhand while working through the remainder of this section.\nPinker notes that language makes \u2018in\ufb01nite use of \ufb01nite means\u2019, in Humboldt\u2019s\nphrase1.", "mimetype": "text/plain", "start_char_idx": 1394, "end_char_idx": 1940, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "403368a7-2415-49ec-994d-76585cfb4e8f": {"__data__": {"id_": "403368a7-2415-49ec-994d-76585cfb4e8f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f19bc2b5-0c7e-4ae6-937a-2ee3992c4c44", "node_type": "1", "metadata": {}, "hash": "b1706244cd1c798c1cb0c97ec6f6460cfc82d77d0a8a68bc861ab38748ba4ada", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "1e840b1d-d004-4bef-b8d7-b3e8c18e24a5", "node_type": "1", "metadata": {}, "hash": "1bc29fe514ee289d8322444be9cebc694f50d2660962fab127cf23f604bd8221", "class_name": "RelatedNodeInfo"}}, "text": "That is, there is no principled upper limit to the length of a grammatical\nsentence: we can always add another phrase, even if it\u2019s a banal one like \u2018one could\nsay that\u2019, \u2018and that\u2019s a fact\u2019 or \u2018and you can tell that to the Marines\u2019.", "mimetype": "text/plain", "start_char_idx": 1941, "end_char_idx": 2174, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6e49e5fa-9a4e-48ca-823d-7d8cc9f1d32d": {"__data__": {"id_": "6e49e5fa-9a4e-48ca-823d-7d8cc9f1d32d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e483f6e7-c8cd-4cc5-88fd-128fac2f4344", "node_type": "1", "metadata": {}, "hash": "9e355dcd99cf72a9ca3457b0571ac39ec8201b386973ab0021c21b9c977a96b6", "class_name": "RelatedNodeInfo"}}, "text": "A large\n1\u2018Sie [die Sprache] muss daher von endlichen Mitteln einen unendlichen Gebrauch machen\u2019 (von Hum-\nboldt, 1836, p. 122).\n15\n\nCO3354 Introduction to natural language processing\nproportion, perhaps most of the sentences we read, hear or speak every day may be\nentirely novel, at least to us.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 296, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "86247504-f35f-4815-b90d-15724fdf2818": {"__data__": {"id_": "86247504-f35f-4815-b90d-15724fdf2818", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4735e27b-8cdd-4d13-999a-53a4a9b63e9b", "node_type": "1", "metadata": {}, "hash": "5a9da08b6c0dd122a1c32c70d8a38b0e52a7a590fa80a0beef4fde41958073b6", "class_name": "RelatedNodeInfo"}}, "text": "Consequently, knowledge of a language seems to\nconsist in knowing rules that specify what sentences belong to the language, rather\nthan memorising long lists of sentences to be produced on appropriate occasions.\nPinker considers two different formal systems for generating or recognising\nsentences in English:\n\u2018wordchain\u2019 devices, equivalent to \ufb01nite state machines. These devices\nincorporate three distinct operations: sequence ,selection anditeration .\nPhrase structure grammars, which include the additional operation of recursion .", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 535, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6c32c346-1a71-4aae-aa9b-5e79d4a44bbe": {"__data__": {"id_": "6c32c346-1a71-4aae-aa9b-5e79d4a44bbe", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "86247504-f35f-4815-b90d-15724fdf2818", "node_type": "1", "metadata": {}, "hash": "a6834073e8eaf4f32de200c0475eb9e252a1d1b73d80d8b3f760f36a4e0b00ea", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4735e27b-8cdd-4d13-999a-53a4a9b63e9b", "node_type": "1", "metadata": {}, "hash": "5a9da08b6c0dd122a1c32c70d8a38b0e52a7a590fa80a0beef4fde41958073b6", "class_name": "RelatedNodeInfo"}}, "text": "Phrase structure grammars, which include the additional operation of recursion .\nNote that Pinker deliberately uses the more descriptive expression \u2018wordchain\u2019 as he\nis concerned to avoid the use of forbidding technical terminology. In what follows\nwe will stick to the standard term \ufb01nite-state machine which you are more likely to\n\ufb01nd in textbooks. You may also encounter the terms \ufb01nite-state automaton or just\n\ufb01nite automaton .", "mimetype": "text/plain", "start_char_idx": 455, "end_char_idx": 886, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1bc3c084-6786-4408-bc4a-707a37147411": {"__data__": {"id_": "1bc3c084-6786-4408-bc4a-707a37147411", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6c32c346-1a71-4aae-aa9b-5e79d4a44bbe", "node_type": "1", "metadata": {}, "hash": "2e247eee8b91c715482978afce220ac2547161a7fce440c0b2a3898986a505ed", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4735e27b-8cdd-4d13-999a-53a4a9b63e9b", "node_type": "1", "metadata": {}, "hash": "5a9da08b6c0dd122a1c32c70d8a38b0e52a7a590fa80a0beef4fde41958073b6", "class_name": "RelatedNodeInfo"}}, "text": "2.4.1 Operation of a \ufb01nite-state machine\nA wordchain device or \ufb01nite-state machine (FSM) can be seen as a set of lists of\nsymbols (such as words or \ufb01xed phrases) and rules for going from list to list. A\nsimple example:\nWord lists\n1. The, a, one\n2. Cat, dog, \ufb01sh\n3. Barked, slept, swam\nRules\nIt is important to keep in mind that FSMs are neutral between accepting and\ngenerating strings.", "mimetype": "text/plain", "start_char_idx": 887, "end_char_idx": 1273, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a4d224a7-8779-4f00-92f3-67fab5c0f57d": {"__data__": {"id_": "a4d224a7-8779-4f00-92f3-67fab5c0f57d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1bc3c084-6786-4408-bc4a-707a37147411", "node_type": "1", "metadata": {}, "hash": "79af4c5199dc78df731a9757ca60ae20278f507caa39544130505db6c14a92a8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4735e27b-8cdd-4d13-999a-53a4a9b63e9b", "node_type": "1", "metadata": {}, "hash": "5a9da08b6c0dd122a1c32c70d8a38b0e52a7a590fa80a0beef4fde41958073b6", "class_name": "RelatedNodeInfo"}}, "text": "That is to say, one way to operate a FSM is to read a string, one\nsymbol at a time, and determine whether the symbol is found in the list at the\ncurrent state of the machine. If it is, we advance to the next state and read the next\nsymbol. Alternatively, this FSM could be used to generate strings by picking one\nword from each list in sequence. Some possible matching strings are:\nThe dog swam\nA cat barked\nA \ufb01sh slept\n. . .", "mimetype": "text/plain", "start_char_idx": 1274, "end_char_idx": 1699, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1ffe2f44-9a64-45d7-94d1-e5e35f2aa788": {"__data__": {"id_": "1ffe2f44-9a64-45d7-94d1-e5e35f2aa788", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a4d224a7-8779-4f00-92f3-67fab5c0f57d", "node_type": "1", "metadata": {}, "hash": "2d3b5846b539eb49b71a2c64f5e6c78d9eaa0f9facb2a88c42bcf308b9a8d74c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4735e27b-8cdd-4d13-999a-53a4a9b63e9b", "node_type": "1", "metadata": {}, "hash": "5a9da08b6c0dd122a1c32c70d8a38b0e52a7a590fa80a0beef4fde41958073b6", "class_name": "RelatedNodeInfo"}}, "text": ". .\nA more complex example:\n1.John/Mary/Fred OR\n1a.the/a/one\n1b.cat/dog/\ufb01sh\n16\n\nA closer look at syntax\n2. (optional): and/or GO TO 1\n3.slept/barked/swam OR\n3a.sat/walked\n3b.on\n3c.a/the\n3d.mat/hill\n4.", "mimetype": "text/plain", "start_char_idx": 1696, "end_char_idx": 1896, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4774d2f4-7a1d-430e-80fc-d7d1a533c6e4": {"__data__": {"id_": "4774d2f4-7a1d-430e-80fc-d7d1a533c6e4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "67c202fa-af61-477f-8edc-b4ec0a297225", "node_type": "1", "metadata": {}, "hash": "7e538b934cfde5d78eaf36667496764f9c31efa06c905573cd9bc167c03a0cfa", "class_name": "RelatedNodeInfo"}}, "text": "(optional) and/or GO TO 3\n5. (optional) and/or/but GO TO 1 .\nThis formulation involves the basic operations of sequence, selection and iteration as\nfollows:\nSEQUENCE\nMoving from list to list in numerical order: 1, 2, 3 . . .\nSELECTION\nChoosing an item from a list, for example cat,dogor\ufb01sh; choosing between lists.\nITERATION\nRepeating particular sequences, for example:\nJohn and Mary or a \ufb01sh (repeats step 1.)\nThe cat barked but Fred walked on the hill.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 454, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "671c6db6-989a-4d6c-ba8d-813f1cf28d43": {"__data__": {"id_": "671c6db6-989a-4d6c-ba8d-813f1cf28d43", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4774d2f4-7a1d-430e-80fc-d7d1a533c6e4", "node_type": "1", "metadata": {}, "hash": "465a7d91468de22174435666c19c30482da01536c1d0978cb099ffb525bfe72c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "67c202fa-af61-477f-8edc-b4ec0a297225", "node_type": "1", "metadata": {}, "hash": "7e538b934cfde5d78eaf36667496764f9c31efa06c905573cd9bc167c03a0cfa", "class_name": "RelatedNodeInfo"}}, "text": "The cat barked but Fred walked on the hill. (Repeats steps 1\u20135, omitting step 4.)\nLearning activity\n1. Find the shortest sentence generated or accepted by the above FSM.\n2. Write out four sentences between six and 20 words long which are accepted by the FSM.\n2.4.2 Representing \ufb01nite-state machines\nThere are various conventional ways of representing a non-deterministic FSM in\nterms of a number of states and the permissible transitions between states.", "mimetype": "text/plain", "start_char_idx": 411, "end_char_idx": 864, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8f3695c2-c2c6-45df-9d4a-eb3d9fc42145": {"__data__": {"id_": "8f3695c2-c2c6-45df-9d4a-eb3d9fc42145", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "671c6db6-989a-4d6c-ba8d-813f1cf28d43", "node_type": "1", "metadata": {}, "hash": "45ecd1bf829ae80156d2d3b017067b02d64276b421d2255177de84ebc0bc0fdb", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "67c202fa-af61-477f-8edc-b4ec0a297225", "node_type": "1", "metadata": {}, "hash": "7e538b934cfde5d78eaf36667496764f9c31efa06c905573cd9bc167c03a0cfa", "class_name": "RelatedNodeInfo"}}, "text": "In our\ninformal exposition above, the numbered steps represent states and each symbol or\nword in a list counts as a possible transition to the next state. Pinker adopts a\ngraphical convention where states are depicted as nodes in a graph and transitions\nare directed, labelled arcs between the nodes; see also Partee et al. (1990, p. 457\nand following).", "mimetype": "text/plain", "start_char_idx": 865, "end_char_idx": 1218, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f5652d7b-099e-488d-b3bd-b535717b8d11": {"__data__": {"id_": "f5652d7b-099e-488d-b3bd-b535717b8d11", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8f3695c2-c2c6-45df-9d4a-eb3d9fc42145", "node_type": "1", "metadata": {}, "hash": "3b0c28499afc1a0d582a145cc51b3717a4f81185cfe3f07b20d0ef88c90f4c4c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "67c202fa-af61-477f-8edc-b4ec0a297225", "node_type": "1", "metadata": {}, "hash": "7e538b934cfde5d78eaf36667496764f9c31efa06c905573cd9bc167c03a0cfa", "class_name": "RelatedNodeInfo"}}, "text": "(1990, p. 457\nand following). Alternatively, the states and transitions can be shown in tabular form\nas in Table 2.1 where q1is the initial state and q4the \ufb01nal state:\n17\n\nCO3354 Introduction to natural language processing\nq1 john q2\nq1 mary q2\nq1 the q1a\nq1 a q1a\nq1a cat q2\nq1a dog q2\nq2 slept q3\nq2 barked q3\nq2 swam q3\nq3 and q1\nq3 or q1\nq3 .", "mimetype": "text/plain", "start_char_idx": 1189, "end_char_idx": 1535, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7e2dd0f7-0710-4a9c-ae47-f678af2db31c": {"__data__": {"id_": "7e2dd0f7-0710-4a9c-ae47-f678af2db31c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f5652d7b-099e-488d-b3bd-b535717b8d11", "node_type": "1", "metadata": {}, "hash": "b5081bb21288ecec5634f3d88f15e214c074cacf38647b674c1e8f8301437588", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "67c202fa-af61-477f-8edc-b4ec0a297225", "node_type": "1", "metadata": {}, "hash": "7e538b934cfde5d78eaf36667496764f9c31efa06c905573cd9bc167c03a0cfa", "class_name": "RelatedNodeInfo"}}, "text": "q4\nTable 2.1: A \ufb01nite-state machine represented as a state-transition table.\n2.4.3 Declarative alternatives to \ufb01nite-state machines\nThe FSMs shown above combine a formal speci\ufb01cation of a language with a\nprocessing strategy.", "mimetype": "text/plain", "start_char_idx": 1536, "end_char_idx": 1760, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5d281fb2-c324-4701-a337-8240cb7822e7": {"__data__": {"id_": "5d281fb2-c324-4701-a337-8240cb7822e7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b3a1ad44-d0df-403a-a8a6-296508bf145e", "node_type": "1", "metadata": {}, "hash": "13e353d16e9c41ad3710c208d22361d6c49f5a6787511c6cf0a575c8cd33eddb", "class_name": "RelatedNodeInfo"}}, "text": "It is often convenient to separate the two and de\ufb01ne the\nlanguage using expressions from a declarative formalism which can be manipulated\nusing various different algorithms. This section considers two such formalisms:\nregular expressions andregular grammars .\nRegular expressions (REs) provide a simple but powerful means of identifying\npatterns in text and are widely used in various applications of computer science.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 418, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fd1b1502-9383-41ca-b597-4e9a41308d2d": {"__data__": {"id_": "fd1b1502-9383-41ca-b597-4e9a41308d2d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5d281fb2-c324-4701-a337-8240cb7822e7", "node_type": "1", "metadata": {}, "hash": "241ae51683730b184ba7531150a7001e7d436e4d10a96144d9b4fca2a08dc020", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b3a1ad44-d0df-403a-a8a6-296508bf145e", "node_type": "1", "metadata": {}, "hash": "13e353d16e9c41ad3710c208d22361d6c49f5a6787511c6cf0a575c8cd33eddb", "class_name": "RelatedNodeInfo"}}, "text": "REs\nare based on three fundamental concepts which as we have seen are characteristic of\n\ufb01nite-state machines:\nsequence \u2013 to do with the order in which items occur: may include a wildcard\ncharacter which is written as the period or full stop \u2018.\u2019 and may be replaced by\nany character.\nselection \u2013 specifying a choice between alternative items or sequences, indicated by\nthe \u2018j\u2019 operator\niteration \u2013 repetition of items or sequences, indicated by the \u2018*\u2019 operator, meaning\nzero or more occurrences of whatever precedes the star.", "mimetype": "text/plain", "start_char_idx": 419, "end_char_idx": 944, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "81052675-e1c4-4182-880e-2aafe5249b0e": {"__data__": {"id_": "81052675-e1c4-4182-880e-2aafe5249b0e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fd1b1502-9383-41ca-b597-4e9a41308d2d", "node_type": "1", "metadata": {}, "hash": "47d05ea16e94f827dd42fec50f91ebf268bb9eb3fa4e6cdf949b196216976b4e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b3a1ad44-d0df-403a-a8a6-296508bf145e", "node_type": "1", "metadata": {}, "hash": "13e353d16e9c41ad3710c208d22361d6c49f5a6787511c6cf0a575c8cd33eddb", "class_name": "RelatedNodeInfo"}}, "text": "Some simple examples:\na*matches sequences of zero or more a\u2019s:a,aaaa ,aaaaaaaaaaa and so on. A\nsequence of zero elements is known as the \u2018empty string\u2019 and conventionally\ndenoted by the Greek letter epsilon or\u000f.\naa* sequences of one or more a\u2019s\nab* sequences of one afollowed by zero or more b\u2019s:a,ab,abbbb , . . .\n(ab)* sequences of zero or more pairs ab:\u000f,ab,abab ,ababab . . .", "mimetype": "text/plain", "start_char_idx": 945, "end_char_idx": 1324, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "872fc097-e9f2-4f05-a136-f2f6c5567d28": {"__data__": {"id_": "872fc097-e9f2-4f05-a136-f2f6c5567d28", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "81052675-e1c4-4182-880e-2aafe5249b0e", "node_type": "1", "metadata": {}, "hash": "aa937223ec23d1080d2ca1d16c5756f8bdcd86b6dbf699387e9f12c9047fe062", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b3a1ad44-d0df-403a-a8a6-296508bf145e", "node_type": "1", "metadata": {}, "hash": "13e353d16e9c41ad3710c208d22361d6c49f5a6787511c6cf0a575c8cd33eddb", "class_name": "RelatedNodeInfo"}}, "text": ". .\n(ab)j(ba) ab orba\n((ab)j(ba))* possibly empty sequences of abandbapairs:\u000f,ab,abab ,baab ,\nbababa ,abba . . . Note that parentheses operate in the usual manner as in\nmathematical or logical expressions, to denote the scope of operators.\nb.*a all strings that start with band end with a:ba,bbbaaaa ,bcccccccca . . .", "mimetype": "text/plain", "start_char_idx": 1321, "end_char_idx": 1638, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3fe385e7-def3-453f-92a1-0930a281e0c5": {"__data__": {"id_": "3fe385e7-def3-453f-92a1-0930a281e0c5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "1ca2d322-aa94-4004-9761-cea3350d9aa0", "node_type": "1", "metadata": {}, "hash": "269f21e66baf08f88e8d328c9980b6b72955224c62a7013e63ff9f9f7db2ca17", "class_name": "RelatedNodeInfo"}}, "text": ". .\n18\n\nA closer look at syntax\nProgramming languages such as Java, Perl and Python implement extensions of REs\nwith operators which are mostly redundant in that they can be reduced to\ncombinations of the above operations, but can make programs much more compact\nand readable, including:\n+\u2013 one or more of the previous item\n?\u2013 the previous item is optional\n[A-Z], [0-9] \u2013 this expression matches one of a range of characters\n\u02c6abc \u2013 matches pattern abcat the start of a string\nabc$ \u2013 matches pattern abcat the end of a string.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 525, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6f193061-b494-4f7e-947f-f5a9b649aff7": {"__data__": {"id_": "6f193061-b494-4f7e-947f-f5a9b649aff7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3fe385e7-def3-453f-92a1-0930a281e0c5", "node_type": "1", "metadata": {}, "hash": "476951c62ab756d42db8d6f9169d1a011376389efee5d4faf928b6f1545c89dc", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "1ca2d322-aa94-4004-9761-cea3350d9aa0", "node_type": "1", "metadata": {}, "hash": "269f21e66baf08f88e8d328c9980b6b72955224c62a7013e63ff9f9f7db2ca17", "class_name": "RelatedNodeInfo"}}, "text": "See also Bird et al. (2009, Table 3.3) and the other recommended readings on this\ntopic.\nHere are some examples of our suggested ways of recognising personal names coded\nas regular expressions. These are intended to be applied to tokenised text and every\nsequence enclosed by angled brackets <:::> stands for an individual token. In\nExamples 1, 3 and 4 below, the material within parentheses represents the target\nstring and sequences outside parentheses provide the context.\n1.<Mrs?>(<.+>) matches \u2018Mr\u2019 or \u2018Mrs\u2019 followed by any string.", "mimetype": "text/plain", "start_char_idx": 526, "end_char_idx": 1062, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "70af6a8f-207d-45b5-958a-37a61f1089e2": {"__data__": {"id_": "70af6a8f-207d-45b5-958a-37a61f1089e2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6f193061-b494-4f7e-947f-f5a9b649aff7", "node_type": "1", "metadata": {}, "hash": "57c7fa11433d780151e798268be65cef36fb07e19b61bf8483e1a072cee811d9", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "1ca2d322-aa94-4004-9761-cea3350d9aa0", "node_type": "1", "metadata": {}, "hash": "269f21e66baf08f88e8d328c9980b6b72955224c62a7013e63ff9f9f7db2ca17", "class_name": "RelatedNodeInfo"}}, "text": "The \ufb01rst token\nconsists of the sequence Mrfollowed optionally by the character s. The second\nconsists of a sequence of one or more characters: any character may occur in\nplace of the wildcard \u2018.\u2019.\n2.<[A-Z][a-z]+ >+ matches any sequence of one or more capitalised words.\n3. (<[A-Z][a-z]+ >+)<,><[0-9]+>matches capitalised word(s) followed by a\ncomma and a number (age).\n4. (<[A-Z][a-z]+ >+)<saidjreportedjclaimed>.", "mimetype": "text/plain", "start_char_idx": 1063, "end_char_idx": 1476, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8beb6183-79ce-4665-815c-3e730e9b4b35": {"__data__": {"id_": "8beb6183-79ce-4665-815c-3e730e9b4b35", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "70af6a8f-207d-45b5-958a-37a61f1089e2", "node_type": "1", "metadata": {}, "hash": "83c0febd08cffaa93a29a14f3b578933cfa03239ba90bb925fce7578872e555a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "1ca2d322-aa94-4004-9761-cea3350d9aa0", "node_type": "1", "metadata": {}, "hash": "269f21e66baf08f88e8d328c9980b6b72955224c62a7013e63ff9f9f7db2ca17", "class_name": "RelatedNodeInfo"}}, "text": "4. (<[A-Z][a-z]+ >+)<saidjreportedjclaimed>.\nLearning activity\n1. Write a regular expression for all strings consisting of an odd number of a\u2019s followed by an even\nnumber of b\u2019s.\n2. Write a regular expression for all sequences of a\u2019s and b\u2019s of length 3.\n3. Write a regular expression for all strings that contain abba somewhere within them.", "mimetype": "text/plain", "start_char_idx": 1432, "end_char_idx": 1773, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "29cbfbad-6e66-467d-aa95-21513953c63c": {"__data__": {"id_": "29cbfbad-6e66-467d-aa95-21513953c63c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8beb6183-79ce-4665-815c-3e730e9b4b35", "node_type": "1", "metadata": {}, "hash": "b84296581397cb5242641a04fe1c34201cdfd5aad843b8f0f3fddbed413f56f4", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "1ca2d322-aa94-4004-9761-cea3350d9aa0", "node_type": "1", "metadata": {}, "hash": "269f21e66baf08f88e8d328c9980b6b72955224c62a7013e63ff9f9f7db2ca17", "class_name": "RelatedNodeInfo"}}, "text": "3. Write a regular expression for all strings that contain abba somewhere within them.\nAs you have probably observed, the pattern-matching notation we used in section\n2.3 employed a subset of the RE syntax, and we could in principle use regular\nexpressions to encode simple grammars as presented in that section.", "mimetype": "text/plain", "start_char_idx": 1687, "end_char_idx": 1999, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a702ded8-e037-4848-a285-e54b1847e555": {"__data__": {"id_": "a702ded8-e037-4848-a285-e54b1847e555", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5427e50c-c0d5-47ab-843d-455abb2954c3", "node_type": "1", "metadata": {}, "hash": "ce8f059d8bc5109badb6885004452be574830beb1ab7de904d3a894f19902c65", "class_name": "RelatedNodeInfo"}}, "text": "For example:\n( (JohnjMaryjFred)j( (theja)(catjdogj\ufb01sh) )\n(barkedjsleptjswam)\n((andjor) (barkedjsleptjswam))*\nmatches sentences like:\n1. John slept\n2. The cat barked or swam\n3. Mary swam and barked or slept\n19\n\nCO3354 Introduction to natural language processing\n4. . . .\nIt can be seen that even conceptually simple REs can rapidly become almost\nunreadable.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 356, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5dc9b70d-b063-4af6-9863-ca2b6dccc113": {"__data__": {"id_": "5dc9b70d-b063-4af6-9863-ca2b6dccc113", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "46c06b8b-f6e7-4470-86dc-f4c7fe815a21", "node_type": "1", "metadata": {}, "hash": "4acc9b66afa8fce868817561f2f574f602de3e07a4c0ab80015768e8aee8f930", "class_name": "RelatedNodeInfo"}}, "text": "It can be seen that even conceptually simple REs can rapidly become almost\nunreadable.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 86, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7c2ba3e2-47ea-4554-b721-9af4cdd285e0": {"__data__": {"id_": "7c2ba3e2-47ea-4554-b721-9af4cdd285e0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5dc9b70d-b063-4af6-9863-ca2b6dccc113", "node_type": "1", "metadata": {}, "hash": "a477f64ff98882c766429a16e31e28fb3b60fc8f17e9c284b80e218cf8edc0f7", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "46c06b8b-f6e7-4470-86dc-f4c7fe815a21", "node_type": "1", "metadata": {}, "hash": "4acc9b66afa8fce868817561f2f574f602de3e07a4c0ab80015768e8aee8f930", "class_name": "RelatedNodeInfo"}}, "text": "It can be seen that even conceptually simple REs can rapidly become almost\nunreadable. A more manageable formalism is a regular grammar , made up of\nproduction rules or rewrite rules of the kind you have seen in the previous section:\nS!JohnjMaryjFred VP\nS!theja S1\nS1!catjdogj\ufb01sh VP\nVP!barkedjsleptjswam VP1\nVP1!andjor VP\nVP1!\u000f\nA sequence of words forms a grammatical sentence according to a grammar of this\ntype if one can draw a tree diagram like Figure 2.1 such that:\n1.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 473, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "36933eab-897a-4425-8eed-6d28bb6b3316": {"__data__": {"id_": "36933eab-897a-4425-8eed-6d28bb6b3316", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7c2ba3e2-47ea-4554-b721-9af4cdd285e0", "node_type": "1", "metadata": {}, "hash": "2ce52e54d5f75387bc5b81adb588a6aad490615661745bb05ff9a191dcb1444a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "46c06b8b-f6e7-4470-86dc-f4c7fe815a21", "node_type": "1", "metadata": {}, "hash": "4acc9b66afa8fce868817561f2f574f602de3e07a4c0ab80015768e8aee8f930", "class_name": "RelatedNodeInfo"}}, "text": "The root node is SorSentence .\n2. For every node that matches the left hand side (LHS) of a grammar rule, one can\ndraw a subtree with the items on the right hand side (RHS) as daughter nodes.\n3. When no more grammar rules can be applied, every leaf node of the tree\nmatches a word in the language or the empty string \u000f.\nS\ntheS1\ncatVP\nbarkedVP1\norVP\nswamVP1\n\u000f\nFigure 2.1: A right-branching tree.", "mimetype": "text/plain", "start_char_idx": 474, "end_char_idx": 868, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "87293727-9af4-4642-bdba-a7c88ee9644e": {"__data__": {"id_": "87293727-9af4-4642-bdba-a7c88ee9644e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "36933eab-897a-4425-8eed-6d28bb6b3316", "node_type": "1", "metadata": {}, "hash": "c387ee31f07ae37203bfc4273ca100ba0bdc6c535fea98e002a0634eb636c207", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "46c06b8b-f6e7-4470-86dc-f4c7fe815a21", "node_type": "1", "metadata": {}, "hash": "4acc9b66afa8fce868817561f2f574f602de3e07a4c0ab80015768e8aee8f930", "class_name": "RelatedNodeInfo"}}, "text": "Symbols which only occur on the right-hand side of rules, and so can only appear as\nleaf-nodes in a tree, are known as terminal symbols . Regular grammars have the\nrestriction that when non-terminal symbols appear on the RHS they must either\nalways be the rightmost symbol, or always the leftmost. These classes of grammars\nare known as right-linear andleft-linear respectively. A right-linear grammar will\nalways result in a right-branching tree as in the above example.", "mimetype": "text/plain", "start_char_idx": 869, "end_char_idx": 1340, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6e4bf59b-c6b1-43a8-9fd7-7c43c0c0ecee": {"__data__": {"id_": "6e4bf59b-c6b1-43a8-9fd7-7c43c0c0ecee", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "87293727-9af4-4642-bdba-a7c88ee9644e", "node_type": "1", "metadata": {}, "hash": "0132f0dc9f9d7d5c8ba5dfac09fe5dec421ca275160fcf4305a58c18e5c0770e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "46c06b8b-f6e7-4470-86dc-f4c7fe815a21", "node_type": "1", "metadata": {}, "hash": "4acc9b66afa8fce868817561f2f574f602de3e07a4c0ab80015768e8aee8f930", "class_name": "RelatedNodeInfo"}}, "text": "20\n\nA closer look at syntax\nLearning activity\nDraw tree diagrams according to the above grammar for the sentences:\n1. The dog slept.\n2. Mary swam and barked or slept.\n2.4.4 Limitations of \ufb01nite-state methods \u2013 introducing context-free grammars\nPinker (2007, p.86) gives an example of a \u2018wordchain device\u2019 or FSM which is\nintended to show the limitations of \ufb01nite-state methods for handling natural\nlanguage. The procedure is apparently designed to deal with complex sentences\nincluding constructions like If. . .", "mimetype": "text/plain", "start_char_idx": 1341, "end_char_idx": 1853, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "93ad73da-b930-4bbb-8070-f5d2a27a8388": {"__data__": {"id_": "93ad73da-b930-4bbb-8070-f5d2a27a8388", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6e4bf59b-c6b1-43a8-9fd7-7c43c0c0ecee", "node_type": "1", "metadata": {}, "hash": "f1b028ce05ca705d90b513b0c4c831c1381d961e05ba785e7b9a91fc96366150", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "46c06b8b-f6e7-4470-86dc-f4c7fe815a21", "node_type": "1", "metadata": {}, "hash": "4acc9b66afa8fce868817561f2f574f602de3e07a4c0ab80015768e8aee8f930", "class_name": "RelatedNodeInfo"}}, "text": ". . then. . . andEither. . . or . .", "mimetype": "text/plain", "start_char_idx": 1850, "end_char_idx": 1885, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "17a433fa-2bdd-4738-9c48-0849bf149dc4": {"__data__": {"id_": "17a433fa-2bdd-4738-9c48-0849bf149dc4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "83bff032-4712-45a6-8a31-ba9c65fa698b", "node_type": "1", "metadata": {}, "hash": "41d9739c35b957d659800e6de08200b62985682eed784df6424e21d306615785", "class_name": "RelatedNodeInfo"}}, "text": "then. . . andEither. . . or . . . . If we look at a few\npossible matching strings, we see clearly that some are grammatical sentences but\nothers are nonsensical. (Following a standard convention in linguistics, the\nunacceptable cases are marked with an asterisk \u2018*\u2019.)\nEither a happy girl eats ice cream or the boy eats hot dogs.\n*Either a happy girl eats ice cream then one dog eats candy.\nIf a girl eats ice cream then the boy eats candy.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 439, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2a017a14-2970-435d-83c2-eb867607a3e8": {"__data__": {"id_": "2a017a14-2970-435d-83c2-eb867607a3e8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "17a433fa-2bdd-4738-9c48-0849bf149dc4", "node_type": "1", "metadata": {}, "hash": "9c016b5909cb50c2ea35d8537f9aba1ee0879e46fb81bb1562d7f4c197291417", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "83bff032-4712-45a6-8a31-ba9c65fa698b", "node_type": "1", "metadata": {}, "hash": "41d9739c35b957d659800e6de08200b62985682eed784df6424e21d306615785", "class_name": "RelatedNodeInfo"}}, "text": "If a girl eats ice cream then the boy eats candy.\n*If a girl eats ice cream or the boy eats candy.\nLearning activity\n1. Write a regular grammar that is equivalent to the FSM in Pinker (2007, p. 86).\n2. Convince yourself that it allows you to draw well-formed trees for the ungrammatical examples above.\n3. What characteristic of the grammar prevents it from ruling out the ill-formed examples?\nSee \u2018Answers to Activities\u2019 in Appendix C (p. 98) for further discussion.", "mimetype": "text/plain", "start_char_idx": 390, "end_char_idx": 857, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f1a413f3-f983-42f6-b543-dc49d1f90d3e": {"__data__": {"id_": "f1a413f3-f983-42f6-b543-dc49d1f90d3e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2a017a14-2970-435d-83c2-eb867607a3e8", "node_type": "1", "metadata": {}, "hash": "dd0b52e6c9f0c4e09883d3e23254b969d9aa383841cc59fd681f6c062c2ed0f0", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "83bff032-4712-45a6-8a31-ba9c65fa698b", "node_type": "1", "metadata": {}, "hash": "41d9739c35b957d659800e6de08200b62985682eed784df6424e21d306615785", "class_name": "RelatedNodeInfo"}}, "text": "See \u2018Answers to Activities\u2019 in Appendix C (p. 98) for further discussion.\nIn order to handle these kinds of sentences correctly we need to add new kinds of\nrewrite rules, going beyond the class of right- or left-linear grammars:\n1. To match pairs of words like if . . . then ,either . . . or , we need rules where a\nnon-terminal symbol on the RHS can have additional material on both sides as\nin the \ufb01rst two rules below.\n2.", "mimetype": "text/plain", "start_char_idx": 784, "end_char_idx": 1208, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9af72bcf-7b43-42d6-8cbb-d4b0d789b696": {"__data__": {"id_": "9af72bcf-7b43-42d6-8cbb-d4b0d789b696", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f1a413f3-f983-42f6-b543-dc49d1f90d3e", "node_type": "1", "metadata": {}, "hash": "d11587920a5506581224ddf0bfa1f0bbaab707f50cdf11b931cefce3d11b9b8a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "83bff032-4712-45a6-8a31-ba9c65fa698b", "node_type": "1", "metadata": {}, "hash": "41d9739c35b957d659800e6de08200b62985682eed784df6424e21d306615785", "class_name": "RelatedNodeInfo"}}, "text": "2. In order to allow for inde\ufb01nite nesting \u2013 if either John will come if Mary does, or\n. . .we need rules where the same symbol can occur on both sides of the arrow.\nThis is known as self-embedding orcentre-embedding .\nNote that centre-embedding is an instance of recursion in grammar; right-linear\ngrammars may also include recursive rules but they can always be processed\niteratively rather than recursively (Jurafsky and Martin, 2009, p. 447).", "mimetype": "text/plain", "start_char_idx": 1206, "end_char_idx": 1652, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5240c364-7eee-4d6a-babf-bc1aa82c208d": {"__data__": {"id_": "5240c364-7eee-4d6a-babf-bc1aa82c208d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "aeced65f-b145-4940-ab80-ede84f1c5d67", "node_type": "1", "metadata": {}, "hash": "fc8f39becf40de4706395c99b6110aba5771da619b6555979a56a93912cda787", "class_name": "RelatedNodeInfo"}}, "text": "447).\n21\n\nCO3354 Introduction to natural language processing\nS!Either S or S\nS!If S then S\nS!NP VP\nNP!Det N\nDet!ajthej\u000f\nN!girljboyjdogjcatjburgersjcandyjcreamjcake\nVP!V NP\nVP!V PP\nPP!P NP\nV!eatsjlikesjsat\nP!on\nThe above grammar handles these cases correctly as well as simple sentences like\nThe cat sat on the mat", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 313, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2ac7b8d8-3e28-47e0-adc2-ae9ffe25e0b9": {"__data__": {"id_": "2ac7b8d8-3e28-47e0-adc2-ae9ffe25e0b9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5240c364-7eee-4d6a-babf-bc1aa82c208d", "node_type": "1", "metadata": {}, "hash": "28ff200815e64473d9aa5bcaa711452525a0f9ac746cb0622870514f7c8a4761", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "aeced65f-b145-4940-ab80-ede84f1c5d67", "node_type": "1", "metadata": {}, "hash": "fc8f39becf40de4706395c99b6110aba5771da619b6555979a56a93912cda787", "class_name": "RelatedNodeInfo"}}, "text": "above grammar handles these cases correctly as well as simple sentences like\nThe cat sat on the mat :\nS\nNP\nDet\ntheN\ncatVP\nV\nsatPP\nP\nonNP\nDet\ntheN\nmat\nFigure 2.2: Tree diagram for The cat sat on the mat.", "mimetype": "text/plain", "start_char_idx": 214, "end_char_idx": 416, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "efb12073-71ce-42d8-a661-43a9af6c1f77": {"__data__": {"id_": "efb12073-71ce-42d8-a661-43a9af6c1f77", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2ac7b8d8-3e28-47e0-adc2-ae9ffe25e0b9", "node_type": "1", "metadata": {}, "hash": "04a952b5458a3d36de87ba14648a53bdcbcc271a3e58b27c56ba4fe7aadda36e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "aeced65f-b145-4940-ab80-ede84f1c5d67", "node_type": "1", "metadata": {}, "hash": "fc8f39becf40de4706395c99b6110aba5771da619b6555979a56a93912cda787", "class_name": "RelatedNodeInfo"}}, "text": "2.2: Tree diagram for The cat sat on the mat.\nIt is also acceptable to represent trees using labelled bracketed strings as in the\nexample below:\n(S\n(NP (Det the ) (N cat ))\n(VP (V sat )\n(PP\n(P on )\n(NP\n(Det the ) (N mat ) )\n)\n)\n)\n22\n\nA closer look at syntax\nFigure 2.3 is an example of self-embedding.", "mimetype": "text/plain", "start_char_idx": 371, "end_char_idx": 672, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8556518f-caba-4ca7-b8eb-c8ce3cd43b11": {"__data__": {"id_": "8556518f-caba-4ca7-b8eb-c8ce3cd43b11", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "efb12073-71ce-42d8-a661-43a9af6c1f77", "node_type": "1", "metadata": {}, "hash": "aa908748e6af0d772ed662a632ba0c2363278dbd295232b43f471e56d29f6a90", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "aeced65f-b145-4940-ab80-ede84f1c5d67", "node_type": "1", "metadata": {}, "hash": "fc8f39becf40de4706395c99b6110aba5771da619b6555979a56a93912cda787", "class_name": "RelatedNodeInfo"}}, "text": "S\nIf S\nNP\nDet\ntheN\ncatVP\nV\nlikesNP\nDet\n\u000fN\ncreamthen S\nNP\nDet\ntheN\nboyVP\nV\neatsNP\nDet\n\u000fN\nburgers\nFigure 2.3: Tree diagram with self-embedding.\nLearning activity\n1. Trace through the grammar rules and satisfy yourself that Figure 2.3 represents the structure of the\nsentence If the cat likes cream then the boy eats burgers according to the grammar.\n2. What is the shortest sentence generated by the above grammar?\n3.", "mimetype": "text/plain", "start_char_idx": 673, "end_char_idx": 1088, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c3a52247-2019-4de7-b58b-5ed8bf86d911": {"__data__": {"id_": "c3a52247-2019-4de7-b58b-5ed8bf86d911", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8556518f-caba-4ca7-b8eb-c8ce3cd43b11", "node_type": "1", "metadata": {}, "hash": "b57b387f5cca7be2552b2b3afd8fe716e5a31f5b96c6d416ac59d42bbd3b8aa7", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "aeced65f-b145-4940-ab80-ede84f1c5d67", "node_type": "1", "metadata": {}, "hash": "fc8f39becf40de4706395c99b6110aba5771da619b6555979a56a93912cda787", "class_name": "RelatedNodeInfo"}}, "text": "2. What is the shortest sentence generated by the above grammar?\n3. Using the above grammar, draw complete tree diagrams for:\n(a) If the girl likes cake then either the boy eats burgers or the boy eats candy.\n(b) If either the boy likes cake or the girl likes burgers then the dog eats candy.\n4. Think of ways to modify the grammar to generate more natural-sounding sentences.", "mimetype": "text/plain", "start_char_idx": 1021, "end_char_idx": 1397, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dd0717a7-018c-4692-9358-162d94e2c4fb": {"__data__": {"id_": "dd0717a7-018c-4692-9358-162d94e2c4fb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c3a52247-2019-4de7-b58b-5ed8bf86d911", "node_type": "1", "metadata": {}, "hash": "052a44b34635d058040a716ca5c7c4388a4c4285397e5016380367785b893c0b", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "aeced65f-b145-4940-ab80-ede84f1c5d67", "node_type": "1", "metadata": {}, "hash": "fc8f39becf40de4706395c99b6110aba5771da619b6555979a56a93912cda787", "class_name": "RelatedNodeInfo"}}, "text": "4. Think of ways to modify the grammar to generate more natural-sounding sentences.\n2.4.5 Looking ahead: some further uses of regular expressions\nIn this chapter we have so far looked at \ufb01nite-state formalisms as techniques for\ngenerating or recognising short phrases as well as whole sentences, and found them\nto be wanting.", "mimetype": "text/plain", "start_char_idx": 1314, "end_char_idx": 1639, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b3b5f4a2-db02-4456-b175-1f2ddcd3be3b": {"__data__": {"id_": "b3b5f4a2-db02-4456-b175-1f2ddcd3be3b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "cddeb800-4135-4ae7-b951-9c90c2298dee", "node_type": "1", "metadata": {}, "hash": "2e0a79bc50f2be4edc289a608024caa78f87e5e3eac840fad1c804db4b74979a", "class_name": "RelatedNodeInfo"}}, "text": "Many current applications in language technology do not, in fact,\nrequire complete analysis of sentences but proceed by looking for patterns of interest\nwithin a text and discarding what does not match these patterns. Finite-state\nmethods are often quite adequate for these applications and you will see many uses\nfor regular expressions in later chapters of this guide.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 370, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c69a266f-c626-4d99-83bd-ff09fcc1b0b9": {"__data__": {"id_": "c69a266f-c626-4d99-83bd-ff09fcc1b0b9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b3b5f4a2-db02-4456-b175-1f2ddcd3be3b", "node_type": "1", "metadata": {}, "hash": "bcbae901106e3ae1778bae040adcc6ff19781dfcf8de82c7bf1675797b08f7a0", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "cddeb800-4135-4ae7-b951-9c90c2298dee", "node_type": "1", "metadata": {}, "hash": "2e0a79bc50f2be4edc289a608024caa78f87e5e3eac840fad1c804db4b74979a", "class_name": "RelatedNodeInfo"}}, "text": "Some examples we will look at\nin more detail in later chapters are:\nstemming: extracting the \u2018base form\u2019 of a word as informally presented in\nsection 2.5 of this chapter\ntagging: automatically assigning POS or other forms of mark-up to elements in a\ntext\nchunking: grouping together a sequence of words as a phrase\ninformation extraction: identifying chunks that denote meaningful entities,\nevents or other items of interest.", "mimetype": "text/plain", "start_char_idx": 371, "end_char_idx": 796, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "013a9a2c-ecea-43fa-b052-c494c5e29610": {"__data__": {"id_": "013a9a2c-ecea-43fa-b052-c494c5e29610", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c69a266f-c626-4d99-83bd-ff09fcc1b0b9", "node_type": "1", "metadata": {}, "hash": "240a403fa539e5b018b8dca334faaae9d86757486508a310f1dceee57032075a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "cddeb800-4135-4ae7-b951-9c90c2298dee", "node_type": "1", "metadata": {}, "hash": "2e0a79bc50f2be4edc289a608024caa78f87e5e3eac840fad1c804db4b74979a", "class_name": "RelatedNodeInfo"}}, "text": "23\n\nCO3354 Introduction to natural language processing\n2.4.6 Looking ahead: grammars and parsing\nThe pseudocode and graphical representations of wordchains (FSMs) combine a\nspeci\ufb01cation of the well-formed sentences in a language fragment with a processing\nstrategy. It is important to keep in mind that formal grammars made up of a series of\nproduction rules do notencode a processing strategy.", "mimetype": "text/plain", "start_char_idx": 797, "end_char_idx": 1191, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3823b176-c3be-4141-8053-5479b17665ab": {"__data__": {"id_": "3823b176-c3be-4141-8053-5479b17665ab", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "013a9a2c-ecea-43fa-b052-c494c5e29610", "node_type": "1", "metadata": {}, "hash": "aefaa31ee337019a4683670e827cc416beff30fc24631ec75536c4f7f0153fa5", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "cddeb800-4135-4ae7-b951-9c90c2298dee", "node_type": "1", "metadata": {}, "hash": "2e0a79bc50f2be4edc289a608024caa78f87e5e3eac840fad1c804db4b74979a", "class_name": "RelatedNodeInfo"}}, "text": "As stated above, a grammar is\na declarative speci\ufb01cation of the strings that make up a language while parsers use a\nvariety of algorithms to apply the grammar rules. We will look at some of these\nparsing strategies in Chapter 6 of this subject guide.\n2.5 Word structure\nWords combine in different orders to form sentences and phrases; they also have\ninternal structure.", "mimetype": "text/plain", "start_char_idx": 1192, "end_char_idx": 1561, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fc1a3efe-3115-4395-9f08-0ae732f9b52d": {"__data__": {"id_": "fc1a3efe-3115-4395-9f08-0ae732f9b52d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3823b176-c3be-4141-8053-5479b17665ab", "node_type": "1", "metadata": {}, "hash": "7e7b4133b1c0f5baf825505a087b7b88bd66333cc3dcabbfc5acdd0b46393564", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "cddeb800-4135-4ae7-b951-9c90c2298dee", "node_type": "1", "metadata": {}, "hash": "2e0a79bc50f2be4edc289a608024caa78f87e5e3eac840fad1c804db4b74979a", "class_name": "RelatedNodeInfo"}}, "text": "Nouns in English may have different endings according to\nwhether they are singular ( a box ) or plural ( some boxes ) while in some languages\nthis information may be expressed at the start of the word, for example Swahili ziwa\n(\u2018lake\u2019) vs maziwa (\u2018lakes\u2019). In English, endings of verbs can indicate person, number,\ntense and mood2, while other languages may make different dictinctions.", "mimetype": "text/plain", "start_char_idx": 1562, "end_char_idx": 1948, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d201cd31-b22d-4bc0-8356-60e87cee5f7e": {"__data__": {"id_": "d201cd31-b22d-4bc0-8356-60e87cee5f7e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fc1a3efe-3115-4395-9f08-0ae732f9b52d", "node_type": "1", "metadata": {}, "hash": "59009fc8800197b68ad9e058e9c07aa47189b1b02dfb5ae24d96b0abdcb13ee2", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "cddeb800-4135-4ae7-b951-9c90c2298dee", "node_type": "1", "metadata": {}, "hash": "2e0a79bc50f2be4edc289a608024caa78f87e5e3eac840fad1c804db4b74979a", "class_name": "RelatedNodeInfo"}}, "text": "Nouns and\nverbs are sometimes classi\ufb01ed as regular or irregular according to whether their\nin\ufb02ected forms can be derived by following simple rules. Table 2.2 shows examples\nof some common past tense forms in English.", "mimetype": "text/plain", "start_char_idx": 1949, "end_char_idx": 2165, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "66dd77ed-ce7b-4d16-93e3-549e5294de97": {"__data__": {"id_": "66dd77ed-ce7b-4d16-93e3-549e5294de97", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ad41c290-bd3e-4411-8ac2-5560c265bad6", "node_type": "1", "metadata": {}, "hash": "96d5d67812676381d4fea250702a342abbbbcef24fbb274484b764c4c4c42ffe", "class_name": "RelatedNodeInfo"}}, "text": "Table 2.2 shows examples\nof some common past tense forms in English.\nPresent Past\nbecome became\ncome came\nmistake mistook\nmisunderstand misunderstood\nring rang\nsell sold\nshake shook\nsing sang\nsink sank\nstand stood\ntake took\ntell told\ntravel travelled\nunderstand understood\nwithstand withstood\nTable 2.2: Past tense forms (1).", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 325, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "152ca561-b08e-430d-860c-3cc77f75e06b": {"__data__": {"id_": "152ca561-b08e-430d-860c-3cc77f75e06b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "66dd77ed-ce7b-4d16-93e3-549e5294de97", "node_type": "1", "metadata": {}, "hash": "8079a94164f22f4343555f03835c3f09b582dceeb7c6b05d110e9414f979ea74", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ad41c290-bd3e-4411-8ac2-5560c265bad6", "node_type": "1", "metadata": {}, "hash": "96d5d67812676381d4fea250702a342abbbbcef24fbb274484b764c4c4c42ffe", "class_name": "RelatedNodeInfo"}}, "text": "The sub\ufb01eld of linguistics known as morphology is concerned with the structure of\nwords and is concerned, among other things, with formulating rules for deriving\ndifferent forms of a word according to its grammatical role. Here are some rules\nwhich appear to cover the examples in the table:\n2See the Internet Grammar of English at http://www.ucl.ac.uk/internet-grammar/verbs/verbs.htm (last\nvisited 27th May 2013) for explanations of these terms.", "mimetype": "text/plain", "start_char_idx": 326, "end_char_idx": 773, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9ad32237-b460-4e9f-911c-89782c2afb80": {"__data__": {"id_": "9ad32237-b460-4e9f-911c-89782c2afb80", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ee009c33-67bd-4d9c-a8aa-a973b3866530", "node_type": "1", "metadata": {}, "hash": "e91fdcc120dd053bbf999c025bbe023bc3b7d11f505ae4dd0636cbc7badd4cc1", "class_name": "RelatedNodeInfo"}}, "text": "24\n\nA brief history of natural language processing\nSome rules for past-tense formation\n-come!-came\n-take!-took\n-ing!-ang\n-ink!-ank\n-ell!-old\n-and!-ood\n-el!-elled\nSome of these rules could be made more general: we could combine the -ingand\n-inkrules to a single rule, -in !-an.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 276, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "76604b30-b1c0-4490-929a-46fb3ee63b21": {"__data__": {"id_": "76604b30-b1c0-4490-929a-46fb3ee63b21", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9ad32237-b460-4e9f-911c-89782c2afb80", "node_type": "1", "metadata": {}, "hash": "b21b7823f29a4aaf556e328987ec1d81b33df8f291121d7bc7fb5415665b95e0", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ee009c33-67bd-4d9c-a8aa-a973b3866530", "node_type": "1", "metadata": {}, "hash": "e91fdcc120dd053bbf999c025bbe023bc3b7d11f505ae4dd0636cbc7badd4cc1", "class_name": "RelatedNodeInfo"}}, "text": "On the other hand, some rules which work for\nthese particular examples would fail if applied to a wider range of data: we have\ncome!came ,become!became but not welcome!*welcame . This is an example of\nrules over\ufb01tting the data.\nLearning activity\nModify the above rules so that they will account for the past tense forms in Table 2.3 as well as in Table 2.2.", "mimetype": "text/plain", "start_char_idx": 277, "end_char_idx": 634, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0885908d-c248-4e05-8ea8-67859b4b5422": {"__data__": {"id_": "0885908d-c248-4e05-8ea8-67859b4b5422", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "76604b30-b1c0-4490-929a-46fb3ee63b21", "node_type": "1", "metadata": {}, "hash": "909e1c22616a0f57e0d25e7e5c863cbe147f535fd270324dce1642f4d2b231e3", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ee009c33-67bd-4d9c-a8aa-a973b3866530", "node_type": "1", "metadata": {}, "hash": "e91fdcc120dd053bbf999c025bbe023bc3b7d11f505ae4dd0636cbc7badd4cc1", "class_name": "RelatedNodeInfo"}}, "text": "Present Past\nbake baked\ncommand commanded\nbring brought\nsling slung\nsmell smelt\nthink thought\nwake woke\nTable 2.3: Past tense forms (2).\nA natural language application such as a machine translation system will typically\ninclude a database of words or lexicon along with rules for deriving word endings:\nfor example, a translation from English into Dutch might handle the word brought as\nfollows:\n1. Find the stem of brought and interpret the in\ufb02ection: bring +past\n2. Find the Dutch equivalent of bring :brengen\n3.", "mimetype": "text/plain", "start_char_idx": 635, "end_char_idx": 1149, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "581a7858-6000-4910-abc5-d84bdbd8dc31": {"__data__": {"id_": "581a7858-6000-4910-abc5-d84bdbd8dc31", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0885908d-c248-4e05-8ea8-67859b4b5422", "node_type": "1", "metadata": {}, "hash": "393042cb646ff736280a26931b70da553b01f7d3df201f1da2bdc7ef0691a77e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ee009c33-67bd-4d9c-a8aa-a973b3866530", "node_type": "1", "metadata": {}, "hash": "e91fdcc120dd053bbf999c025bbe023bc3b7d11f505ae4dd0636cbc7badd4cc1", "class_name": "RelatedNodeInfo"}}, "text": "Find the Dutch equivalent of bring :brengen\n3. Find the past tense of brengen :bracht\nThe process of removing af\ufb01xes from words to derive the basic form is called\nstemming . We will look at some tools for doing this in Chapter 4, and you will also\nhave the opportunity to encode your own rules as regular expressions.", "mimetype": "text/plain", "start_char_idx": 1103, "end_char_idx": 1420, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fa8586d2-b9b1-493c-ab65-95dad19173f1": {"__data__": {"id_": "fa8586d2-b9b1-493c-ab65-95dad19173f1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "581a7858-6000-4910-abc5-d84bdbd8dc31", "node_type": "1", "metadata": {}, "hash": "b3e01ab22905198c89c2550f065d0158fed227693560ed86abf0c0ff32317465", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ee009c33-67bd-4d9c-a8aa-a973b3866530", "node_type": "1", "metadata": {}, "hash": "e91fdcc120dd053bbf999c025bbe023bc3b7d11f505ae4dd0636cbc7badd4cc1", "class_name": "RelatedNodeInfo"}}, "text": "2.6 A brief history of natural language processing\nThe \ufb01eld of natural language processing or computational linguistics builds on\ntechniques and insights from a number of different disciplines, principally\n25\n\nCO3354 Introduction to natural language processing\ntheoretical linguistics and computer science but with some input from mathematical\nlogic and psychology.\nThe notions of a \ufb01nite-state machine and context-free grammar (CFG) were \ufb01rst\nintroduced to linguistics by Chomsky (1957; see Pullum (2011) for a somewhat\ncritical reappraisal).", "mimetype": "text/plain", "start_char_idx": 1421, "end_char_idx": 1964, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "41fc52a8-32e6-4986-93bc-53e620dce770": {"__data__": {"id_": "41fc52a8-32e6-4986-93bc-53e620dce770", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a55c8c92-8ade-40a1-a42f-f008eda9d766", "node_type": "1", "metadata": {}, "hash": "195ca86935123f01807b6003a4113e6ef0aeda002aadd0578ed62fd9d78db553", "class_name": "RelatedNodeInfo"}}, "text": "Chomsky argued that both formalisms were inadequate for\nmodelling natural language and proposed an additional operation of\ntransformations, which could essentially permute the output string of a CFG in\nvarious ways. Chomsky\u2019s work introduced a methodology which was to dominate\ntheoretical linguistics for the next couple of decades: linguists concentrated on\npostulating formal rules of grammar which were tested against their own intuitions\nor those of native speakers of other languages, rather than seeking to induce rules\nfrom large collections of data.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 558, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7d9924c8-ad48-445a-a4cd-f4cdf3ffee0d": {"__data__": {"id_": "7d9924c8-ad48-445a-a4cd-f4cdf3ffee0d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "41fc52a8-32e6-4986-93bc-53e620dce770", "node_type": "1", "metadata": {}, "hash": "e3a453b039de2ecda97961029b1c707ee14156e60fa784a344229b30db9ceb03", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a55c8c92-8ade-40a1-a42f-f008eda9d766", "node_type": "1", "metadata": {}, "hash": "195ca86935123f01807b6003a4113e6ef0aeda002aadd0578ed62fd9d78db553", "class_name": "RelatedNodeInfo"}}, "text": "Part of the rationale for this was that native speakers\nof a language are able to recognise whether a sequence of words makes up an\nacceptable sentence in their language, even if they have never encountered those\nwords in that particular order before. Prior to what was to become known as the\nChomskyan revolution, corpus-based approaches had been the norm in general\nlinguistics.", "mimetype": "text/plain", "start_char_idx": 559, "end_char_idx": 939, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a3f8c9fd-3450-41db-b59d-330d73b0ec31": {"__data__": {"id_": "a3f8c9fd-3450-41db-b59d-330d73b0ec31", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7d9924c8-ad48-445a-a4cd-f4cdf3ffee0d", "node_type": "1", "metadata": {}, "hash": "e073418a69bc4671e7aeb7238a236274d0448fc3d496c4f48fc2bf1c0ce7913e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a55c8c92-8ade-40a1-a42f-f008eda9d766", "node_type": "1", "metadata": {}, "hash": "195ca86935123f01807b6003a4113e6ef0aeda002aadd0578ed62fd9d78db553", "class_name": "RelatedNodeInfo"}}, "text": "This tradition was overshadowed for a time by so-called \u2018generative\u2019\nlinguistics, but corpus-based research continued in some quarters until its resurgence\nin the 1980s, including the development of the \ufb01rst machine-readable corpus by the\nJesuit priest Fr Robert Busa. Busa developed a 10 million-word corpus of medieval\nphilosophy on punch-cards, with the support of Thomas Watson of IBM (McEnery\nand Wilson, 2001, pp. 20\u201321).", "mimetype": "text/plain", "start_char_idx": 940, "end_char_idx": 1367, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "19fe0c2d-71f5-40fa-8482-918b0b0f968f": {"__data__": {"id_": "19fe0c2d-71f5-40fa-8482-918b0b0f968f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a3f8c9fd-3450-41db-b59d-330d73b0ec31", "node_type": "1", "metadata": {}, "hash": "fcff46dd6262f20ed1c35b171c390b1af23da2602b570b6bed0442b1d1e5680e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a55c8c92-8ade-40a1-a42f-f008eda9d766", "node_type": "1", "metadata": {}, "hash": "195ca86935123f01807b6003a4113e6ef0aeda002aadd0578ed62fd9d78db553", "class_name": "RelatedNodeInfo"}}, "text": "20\u201321).\nWork in formal grammar tended to assume a \u2018backbone\u2019 of context-free rules,\naugmented with various mechanisms to handle data that appeared to go beyond the\ncontext-free model; some important developments were Generalised Phrase\nStructure Grammar (Gazdar et al., 1985) and Head-driven Phrase Structure\nGrammar (Pollard and Sag, 1994). We will see examples of these extra mechanisms\nin Chapter 6.", "mimetype": "text/plain", "start_char_idx": 1360, "end_char_idx": 1762, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d17b9b25-ebf5-4f4e-9feb-b7302e872e67": {"__data__": {"id_": "d17b9b25-ebf5-4f4e-9feb-b7302e872e67", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "19fe0c2d-71f5-40fa-8482-918b0b0f968f", "node_type": "1", "metadata": {}, "hash": "c84dc9bd0ab99bee762d53a65cf40a4ea689b552f37a120b6f857be8f5f093be", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a55c8c92-8ade-40a1-a42f-f008eda9d766", "node_type": "1", "metadata": {}, "hash": "195ca86935123f01807b6003a4113e6ef0aeda002aadd0578ed62fd9d78db553", "class_name": "RelatedNodeInfo"}}, "text": "We will see examples of these extra mechanisms\nin Chapter 6.\nEarly work on automated language processing was essentially procedural in its\nmethodology, working with a type of \ufb01nite-state machine called transition\nnetworks which were extended as augmented transition networks to cope with\nvarious linguistic constructions (Woods, 1970). Later work based on declarative\ngrammar formalisms employed techniques including deductive parsing (Pereira and\nWarren, 1983) and uni\ufb01cation (Kay, 1984).", "mimetype": "text/plain", "start_char_idx": 1702, "end_char_idx": 2191, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d7434bbe-9b5b-4929-87f4-09db6cc8e7fb": {"__data__": {"id_": "d7434bbe-9b5b-4929-87f4-09db6cc8e7fb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "27cb265c-8a30-4a47-a431-56e87c0a3422", "node_type": "1", "metadata": {}, "hash": "1ca2f1c7264d481213e290302dceb2bbd5a432e5efd3ecede18a32d82caf51ef", "class_name": "RelatedNodeInfo"}}, "text": "The former adopts techniques from the\nAI \ufb01eld of automated reasoning: the core idea is that parsing a sentence can be seen\nas constructing a logical proof that a particular sequence of words forms a proper\nsentence according to a given set of grammar rules. Uni\ufb01cation grammars treat\nlinguistic objects as sets of attributes or features with a \ufb01nite range of values, and\ngrammar rules specify that particular items in a sentence must have the same or\ncompatible values for certain features. For example, the subject and main verb of a\nsentence should have the same value for the number feature.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 594, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "aadcdf0a-70ed-40ce-8d19-5db48210be23": {"__data__": {"id_": "aadcdf0a-70ed-40ce-8d19-5db48210be23", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d7434bbe-9b5b-4929-87f4-09db6cc8e7fb", "node_type": "1", "metadata": {}, "hash": "210b316e22fc36a7f8b4933cd4c8c445dc669740b5b9f224effa4070b1cacfb5", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "27cb265c-8a30-4a47-a431-56e87c0a3422", "node_type": "1", "metadata": {}, "hash": "1ca2f1c7264d481213e290302dceb2bbd5a432e5efd3ecede18a32d82caf51ef", "class_name": "RelatedNodeInfo"}}, "text": "We will consider\ndetailed examples in Chapter 6.\nMeanwhile, substantial progress was made in lower-level tasks such as speech\nrecognition and morphological analysis using probabilistic techniques and\n\ufb01nite-state models. During the late 1990s these techniques were extended to cover\ntasks such as parsing, part-of-speech tagging and reference resolution (recognising\nwhether or not different expressions in a document referred to the same person or\nentity).", "mimetype": "text/plain", "start_char_idx": 595, "end_char_idx": 1051, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ba16a286-8169-4748-bdf5-bd143528bd5b": {"__data__": {"id_": "ba16a286-8169-4748-bdf5-bd143528bd5b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aadcdf0a-70ed-40ce-8d19-5db48210be23", "node_type": "1", "metadata": {}, "hash": "44e7b030d6c849dfd336644f13c2fb4d1e27e3705f995c2990f09e6d768b3e2b", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "27cb265c-8a30-4a47-a431-56e87c0a3422", "node_type": "1", "metadata": {}, "hash": "1ca2f1c7264d481213e290302dceb2bbd5a432e5efd3ecede18a32d82caf51ef", "class_name": "RelatedNodeInfo"}}, "text": "These developments were driven by a number of factors: the continuing\nincrease in the processing speed and memory capacity of computers; the availability\nof massive amounts of spoken and written material, both in unstructured form on\nthe world wide web and with various types of annotation in corpora such as the\n26\n\nSample examination questions\nPenn Treebank3or the British National Corpus4, and events such as the Message\nUnderstanding Conferences5which were initially sponsored by the US Department\nof Defense to measure and foster progress in extracting information from\nunstructured text.", "mimetype": "text/plain", "start_char_idx": 1052, "end_char_idx": 1645, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "36b790e2-6c14-4e47-9498-2fc10cca8ccc": {"__data__": {"id_": "36b790e2-6c14-4e47-9498-2fc10cca8ccc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ba16a286-8169-4748-bdf5-bd143528bd5b", "node_type": "1", "metadata": {}, "hash": "d0403f310f61f5744072e6beb9ffd5a76acb291c90836e2849ccf629f7d53a4a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "27cb265c-8a30-4a47-a431-56e87c0a3422", "node_type": "1", "metadata": {}, "hash": "1ca2f1c7264d481213e290302dceb2bbd5a432e5efd3ecede18a32d82caf51ef", "class_name": "RelatedNodeInfo"}}, "text": "Much work since around the year 2000 has involved the use of machine learning\ntechniques such as Bayesian models and maximum entropy (see Chapter 5). This\nhas involved using annotated corpora to train systems to segment and annotate texts\naccording to various morphological, syntactic or semantic criteria. These techniques\nhave been systematically applied to particular tasks such as parsing, word sense\ndisambiguation, question answering and summarisation.\n2.7 Summary\n1.", "mimetype": "text/plain", "start_char_idx": 1646, "end_char_idx": 2119, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "21604122-4632-4bda-b6ac-04338eb39fa9": {"__data__": {"id_": "21604122-4632-4bda-b6ac-04338eb39fa9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "36b790e2-6c14-4e47-9498-2fc10cca8ccc", "node_type": "1", "metadata": {}, "hash": "22170369958f999a67bc43b4b012d51319c0c7835727d895e39d95a0221a3cb7", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "27cb265c-8a30-4a47-a431-56e87c0a3422", "node_type": "1", "metadata": {}, "hash": "1ca2f1c7264d481213e290302dceb2bbd5a432e5efd3ecede18a32d82caf51ef", "class_name": "RelatedNodeInfo"}}, "text": "2.7 Summary\n1. This chapter has characterised the subject matter of the course as being\nconcerned with various ways of using computer programs to analyse text, by\nwhich we mean words, numbers, punctuation and other meaningful symbols\nthat are printed on paper or some other \ufb02at surface, or displayed on a screen.\n2.", "mimetype": "text/plain", "start_char_idx": 2105, "end_char_idx": 2420, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0216b818-22db-4fb6-937a-14fa96f19fa9": {"__data__": {"id_": "0216b818-22db-4fb6-937a-14fa96f19fa9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "fb053235-5ae2-4f9b-bd35-e0e6f22d0db6", "node_type": "1", "metadata": {}, "hash": "26e5eca3eeb1c0b5b89bef5b85d578bc273260ac2df965e1bf0f2dc802235239", "class_name": "RelatedNodeInfo"}}, "text": "2. Some fundamental operations in text analysis include tokenisation , which\ninvolves extracting these meaningful elements from a stream of electronic\ncharacters and discarding white space, line feed characters and other material\nwhich has no explicit meaning for a human reader, and using regular\nexpressions to identify patterns in a text.\n3. Regular expressions are composed of the three basic operations of sequence,\nselection and iteration, and have many applications in computational linguistics\nand computer science at large. A \ufb01nite-state machine is a process whose\noperations can be speci\ufb01ed by means of regular expressions.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 633, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dd931f2c-42c8-41bc-8f52-17abfea60410": {"__data__": {"id_": "dd931f2c-42c8-41bc-8f52-17abfea60410", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0216b818-22db-4fb6-937a-14fa96f19fa9", "node_type": "1", "metadata": {}, "hash": "c2795c27ae6aee30b35c8e832a41ad33232e1d0e31aaf668323df0af7420adad", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "fb053235-5ae2-4f9b-bd35-e0e6f22d0db6", "node_type": "1", "metadata": {}, "hash": "26e5eca3eeb1c0b5b89bef5b85d578bc273260ac2df965e1bf0f2dc802235239", "class_name": "RelatedNodeInfo"}}, "text": "A regular grammar\nis a set of production rules or rewrite rules that de\ufb01nes the sentences that make\nup a language, and any language de\ufb01ned by a regular grammar can be\nprocessed by a \ufb01nite state machine or described using a regular expression.\n4. A complete syntactic analysis of natural language sentences is generally held to\nrequire the additional operation of centre-embedded recursion, which is beyond\nthe power of \ufb01nite-state methods. Recursion is formally encoded in context-free\ngrammars.\n5.", "mimetype": "text/plain", "start_char_idx": 634, "end_char_idx": 1132, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "baa6ed80-a141-4a56-87ec-3aa0942bea82": {"__data__": {"id_": "baa6ed80-a141-4a56-87ec-3aa0942bea82", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dd931f2c-42c8-41bc-8f52-17abfea60410", "node_type": "1", "metadata": {}, "hash": "780f7937da92a220b0a5b84a5c750546e7e47be573afb6012e6eb1620e4a1609", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "fb053235-5ae2-4f9b-bd35-e0e6f22d0db6", "node_type": "1", "metadata": {}, "hash": "26e5eca3eeb1c0b5b89bef5b85d578bc273260ac2df965e1bf0f2dc802235239", "class_name": "RelatedNodeInfo"}}, "text": "Recursion is formally encoded in context-free\ngrammars.\n5. Not only do words combine in various patterns and structures to form sentences;\nthey also have internal structure which can be described to an extent using rules\nfor regular and irregular forms.\n6. The current state of NLP or computational linguistics builds on research results\nand concepts from many different \ufb01elds, and we have sketched some of the\nhighlights in a very short history of the discipline.\n2.8 Sample examination questions\nYou can expect a list of RE operators to be included as an appendix in the\nexamination paper.", "mimetype": "text/plain", "start_char_idx": 1074, "end_char_idx": 1665, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "19af1143-24c6-4309-8763-d8935d1c3e9c": {"__data__": {"id_": "19af1143-24c6-4309-8763-d8935d1c3e9c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "baa6ed80-a141-4a56-87ec-3aa0942bea82", "node_type": "1", "metadata": {}, "hash": "24763893b428259e96870b1f327280b7f650295278c42dae259f1991bf71682a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "fb053235-5ae2-4f9b-bd35-e0e6f22d0db6", "node_type": "1", "metadata": {}, "hash": "26e5eca3eeb1c0b5b89bef5b85d578bc273260ac2df965e1bf0f2dc802235239", "class_name": "RelatedNodeInfo"}}, "text": "3http://www.cis.upenn.edu/ \u0018treebank/; last visited 27th May 2013\n4http://www.natcorp.ox.ac.uk/; last visited 27th May 2013\n5http://www.itl.nist.gov/iaui/894.02/related projects/muc/; last visited 27th May 2013\n27\n\nCO3354 Introduction to natural language processing\n1.", "mimetype": "text/plain", "start_char_idx": 1666, "end_char_idx": 1934, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a32973a0-7e9a-4e42-a52a-4147979ce903": {"__data__": {"id_": "a32973a0-7e9a-4e42-a52a-4147979ce903", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b00aced5-cdc9-4bd1-ba06-97586566fc1e", "node_type": "1", "metadata": {}, "hash": "fbc212093bf77a0790d66ab228d1a3ab8e4cd0102c4d73dc944ee91b4334828b", "class_name": "RelatedNodeInfo"}}, "text": "S!NP VP\nNP!Det N\nNP!PN\nVP!V\nVP!V NP\nVP!V NP PP\nVP!VP Adv\nPP!P NP\nDet!theja\nN!waiterjchairsjtablesjhoteljmanager\nPN!OscarjParis\nV!diedjputjsawjcalled\nAdv!suddenlyjquicklyjslowly\nP!injon\n(a) Using the grammar rules above, draw syntax trees for:\ni. Oscar died suddenly.\nii. The waiter put the chairs on the tables.\niii.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 316, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ff78060e-f104-4259-aee1-17532036337c": {"__data__": {"id_": "ff78060e-f104-4259-aee1-17532036337c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ff5a7c25-0652-411a-93ed-b2bd0f2abd38", "node_type": "1", "metadata": {}, "hash": "58de69c4a65cb26857e3225e65c301dcf37befb40d1fd58fc29b011dfd90f8fb", "class_name": "RelatedNodeInfo"}}, "text": "ii. The waiter put the chairs on the tables.\niii. Oscar called the waiter.\n(b) Modify the grammar so that it generates the unstarred sentences below as\nwell as (i\u2013iii) above but not the starred ones. Explain the reasons for your\nmodi\ufb01cations.\ni. Oscar died in Paris.\nii. Oscar died in a hotel in Paris.\niii. The waiter came to the table when Oscar called him.\niv. When Oscar called him the waiter came to the table.\nv. * Oscar put\nvi.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 434, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ac898820-1258-41ac-b93c-ac110fef5484": {"__data__": {"id_": "ac898820-1258-41ac-b93c-ac110fef5484", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ff78060e-f104-4259-aee1-17532036337c", "node_type": "1", "metadata": {}, "hash": "224a36a29d1c8f7729ff65029a3fdd30aa33dcaeb1bf2a36d726582afeee5968", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ff5a7c25-0652-411a-93ed-b2bd0f2abd38", "node_type": "1", "metadata": {}, "hash": "58de69c4a65cb26857e3225e65c301dcf37befb40d1fd58fc29b011dfd90f8fb", "class_name": "RelatedNodeInfo"}}, "text": "v. * Oscar put\nvi. * The waiter saw on the tables\nvii. * The waiter put in the chairs\nviii. * The waiter put the chairs\nix. * Oscar died the table\nx. * When Oscar called him when the waiter came to the table.\n2. Write a regular expression that will identify male and female names in context,\nin an English-language text. Discuss ways in which this might over- or\nunder-generate.\n3.", "mimetype": "text/plain", "start_char_idx": 416, "end_char_idx": 797, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "06589271-a7a8-430e-80b5-4871e777c09a": {"__data__": {"id_": "06589271-a7a8-430e-80b5-4871e777c09a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ac898820-1258-41ac-b93c-ac110fef5484", "node_type": "1", "metadata": {}, "hash": "be264b882c9e07ca74ad47808287eec0105f9fbb1e2a50cb8241d4a8e1b5db80", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ff5a7c25-0652-411a-93ed-b2bd0f2abd38", "node_type": "1", "metadata": {}, "hash": "58de69c4a65cb26857e3225e65c301dcf37befb40d1fd58fc29b011dfd90f8fb", "class_name": "RelatedNodeInfo"}}, "text": "Discuss ways in which this might over- or\nunder-generate.\n3. Explain the difference between regular and context-free grammars and discuss\nthe claim that natural language grammars need at least context-free power.\n4. (a) Write a regular grammar which generates the following sentences:\ni. This is the kid that my father bought.\nii. This is the cat that killed the kid that my father bought.\niii. This is the dog that worried the cat that killed the kid that my father\nbought.\niv.", "mimetype": "text/plain", "start_char_idx": 737, "end_char_idx": 1215, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c3bd2232-629a-46a6-8332-63a2a0282e6d": {"__data__": {"id_": "c3bd2232-629a-46a6-8332-63a2a0282e6d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "06589271-a7a8-430e-80b5-4871e777c09a", "node_type": "1", "metadata": {}, "hash": "0b1639d84e658f93ed9c81d510ff6633eb81e1542ea4e8a55ac6e296ab97c143", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ff5a7c25-0652-411a-93ed-b2bd0f2abd38", "node_type": "1", "metadata": {}, "hash": "58de69c4a65cb26857e3225e65c301dcf37befb40d1fd58fc29b011dfd90f8fb", "class_name": "RelatedNodeInfo"}}, "text": "iv. This is the stick that beat the dog that worried the cat that killed the kid\nthat my father bought.\n(Brewer\u2019s Dictionary of Phrase and Fable , 1896)\n(b) Write out three more sentences generated by your grammar.\n28\n\nChapter 3\nGetting to grips with natural language data\nEssential reading\nBird et al. (2009) Natural Language Processing with Python Chapters 1 and 2\nparticularly: 1.1\u20131.3, 2.1\u20132.2, 2.5.", "mimetype": "text/plain", "start_char_idx": 1212, "end_char_idx": 1615, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "47a90958-3cec-429b-9d5b-520e7565fc09": {"__data__": {"id_": "47a90958-3cec-429b-9d5b-520e7565fc09", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c3bd2232-629a-46a6-8332-63a2a0282e6d", "node_type": "1", "metadata": {}, "hash": "6b178d54a96e5898ad79dbd6d78176095b10c95c69e7fc7f3db2848ddbcd3f10", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ff5a7c25-0652-411a-93ed-b2bd0f2abd38", "node_type": "1", "metadata": {}, "hash": "58de69c4a65cb26857e3225e65c301dcf37befb40d1fd58fc29b011dfd90f8fb", "class_name": "RelatedNodeInfo"}}, "text": "Recommended reading\nMcEnery (2003) \u2018Corpus Linguistics\u2019 in Mitkov (2003) is a succinct overview of the\ntopic from one of the leading scholars in the \ufb01eld.\nAdditional reading\nMcEnery and Wilson (2001) Corpus Linguistics is an established undergraduate\ntextbook; Chapters 2 and 3 are especially relevant for this topic.", "mimetype": "text/plain", "start_char_idx": 1616, "end_char_idx": 1933, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "77ba65a7-b4bc-4bc2-8658-6e63a698a6a6": {"__data__": {"id_": "77ba65a7-b4bc-4bc2-8658-6e63a698a6a6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a56a6a43-464c-40ce-b47d-5c91b46df98a", "node_type": "1", "metadata": {}, "hash": "16bcbbcd36e57bd3f492f095c8baf7be01cad110f7d0f8cf0dbe9f9fc8080c8f", "class_name": "RelatedNodeInfo"}}, "text": "McEnery and Hardie (2011) Corpus Linguistics: Method, Theory and Practice . Chapter\n3 addresses the important topic of research ethics for corpus linguistics, which is\noften neglected in technical or academic presentations of the subject.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 238, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b670b5f4-1316-47d7-a359-d11fb16188b0": {"__data__": {"id_": "b670b5f4-1316-47d7-a359-d11fb16188b0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "77ba65a7-b4bc-4bc2-8658-6e63a698a6a6", "node_type": "1", "metadata": {}, "hash": "9b3765e519ddda402bc704ee02000021261cab32911bbffe0c9b7f21193b725e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a56a6a43-464c-40ce-b47d-5c91b46df98a", "node_type": "1", "metadata": {}, "hash": "16bcbbcd36e57bd3f492f095c8baf7be01cad110f7d0f8cf0dbe9f9fc8080c8f", "class_name": "RelatedNodeInfo"}}, "text": "3.1 Learning outcomes\nBy the end of this chapter, and having completed the Essential reading and activities,\nyou should be able to:\nexplain what is meant by a corpus in the context of natural language processing,\nand describe some different types, structures and uses of corpora\ndescribe the characteristics of some well-known corpora and other language\nresources such as the Brown corpus, Penn treebank, Project Gutenberg and\nWordNet\nUse online interfaces and other software tools to do some basic corpus analysis,\nincluding concordancing and \ufb01nding collocations\nlocate and format raw text documents and analyse them using corpus tools.", "mimetype": "text/plain", "start_char_idx": 239, "end_char_idx": 876, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "53d4e5fd-1205-4e63-91ae-5568ff0f1d9e": {"__data__": {"id_": "53d4e5fd-1205-4e63-91ae-5568ff0f1d9e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b670b5f4-1316-47d7-a359-d11fb16188b0", "node_type": "1", "metadata": {}, "hash": "4dbbe1606cede05a08b8547a17983bd84f9416213a972cab35b1bf09a458c6d9", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a56a6a43-464c-40ce-b47d-5c91b46df98a", "node_type": "1", "metadata": {}, "hash": "16bcbbcd36e57bd3f492f095c8baf7be01cad110f7d0f8cf0dbe9f9fc8080c8f", "class_name": "RelatedNodeInfo"}}, "text": "3.2 Using the Natural Language Toolkit\nAs stated in Chapter 1, this subject guide is not intended as a stand-alone tutorial in\nusing the NLTK or the Python language. You are advised to read through the\nrecommended sections of Bird et al. (2009) and work through the exercises marked\n29\n\nCO3354 Introduction to natural language processing\nYour turn . You may also \ufb01nd it useful to attempt some of the exercises provided at\nthe end of each chapter.\nFrom this chapter onwards you will be running Python sessions and using the NLTK.", "mimetype": "text/plain", "start_char_idx": 877, "end_char_idx": 1405, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5f1a748d-647c-4d40-8eb8-1a026f7b61b9": {"__data__": {"id_": "5f1a748d-647c-4d40-8eb8-1a026f7b61b9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "53d4e5fd-1205-4e63-91ae-5568ff0f1d9e", "node_type": "1", "metadata": {}, "hash": "f45eca6f8d3e6f33707566cd5dc86606d55c54a9cd0fea3201ef7469aee76b32", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a56a6a43-464c-40ce-b47d-5c91b46df98a", "node_type": "1", "metadata": {}, "hash": "16bcbbcd36e57bd3f492f095c8baf7be01cad110f7d0f8cf0dbe9f9fc8080c8f", "class_name": "RelatedNodeInfo"}}, "text": "From this chapter onwards you will be running Python sessions and using the NLTK.\nYou should get into the habit of starting sessions with the following commands:\n>>> from __future__ import division\n>>> import nltk, re, pprint\nOne of the features that makes the Python language suitable for natural language\napplications is the very \ufb02exible treatment of data structures such as lists, strings and\nsequences. You should be familiar with these structures from previous programming\ncourses, but should ensure you understand the way they are handled in Python. For\nthis chapter, only lists are relevant and you should study Bird et al.", "mimetype": "text/plain", "start_char_idx": 1324, "end_char_idx": 1954, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9e36e5b2-0a08-4dac-aec3-2d1cecb75fae": {"__data__": {"id_": "9e36e5b2-0a08-4dac-aec3-2d1cecb75fae", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5f1a748d-647c-4d40-8eb8-1a026f7b61b9", "node_type": "1", "metadata": {}, "hash": "4eebd49112689cdbbbcbc1e7871491bb25f4194eb9b66d4f6f0386996b38331b", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a56a6a43-464c-40ce-b47d-5c91b46df98a", "node_type": "1", "metadata": {}, "hash": "16bcbbcd36e57bd3f492f095c8baf7be01cad110f7d0f8cf0dbe9f9fc8080c8f", "class_name": "RelatedNodeInfo"}}, "text": "For\nthis chapter, only lists are relevant and you should study Bird et al. (2009, section\n1.2) before trying any of the learning activities in this chapter.\n3.3 Corpora and other data resources\nAs explained in the previous chapter, much natural language processing relies on\nlarge collections of linguistic data known as corpora (plural of corpus ). A corpus can\nbe simply de\ufb01ned as no more than a collection of language data, composed of\nwritten texts, transcriptions of speech or a combination of recorded speech and\ntranscriptions.", "mimetype": "text/plain", "start_char_idx": 1880, "end_char_idx": 2414, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c8c9ade2-9ba8-46e8-8432-19155e5071cd": {"__data__": {"id_": "c8c9ade2-9ba8-46e8-8432-19155e5071cd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "663ec1f4-8deb-46d6-9e2e-da95ecf8e48d", "node_type": "1", "metadata": {}, "hash": "2f4a4c1b19c7cb7b80557590f8b8765af7514afd39b962820539cf7ad1d59293", "class_name": "RelatedNodeInfo"}}, "text": "Corpora fall into three broad categories (McEnery, 2003, p.450):\nMonolingual corpora consist, as the name suggests, of data from a single\nlanguage.\nComparable corpora include a range of monolingual corpora in different\nlanguages, preferably with a similar level of balance and representativeness, and\ncan be used for contrastive studies of those languages.\nParallel corpora include original texts in one language with translations of those\ntexts in one or more different languages. Parallel corpora can be used to train\nstatistical translation systems.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 552, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6397d877-6252-4cbf-a351-67b5640846c5": {"__data__": {"id_": "6397d877-6252-4cbf-a351-67b5640846c5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c8c9ade2-9ba8-46e8-8432-19155e5071cd", "node_type": "1", "metadata": {}, "hash": "cb2dcc7fcdf7db1b410481cb73a84986ac959c15175f6d88cfdf0777149a4b61", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "663ec1f4-8deb-46d6-9e2e-da95ecf8e48d", "node_type": "1", "metadata": {}, "hash": "2f4a4c1b19c7cb7b80557590f8b8765af7514afd39b962820539cf7ad1d59293", "class_name": "RelatedNodeInfo"}}, "text": "Parallel corpora can be used to train\nstatistical translation systems.\nA corpus is generally expected to have additional characteristics: corpora are usually\nconstructed so as to be balanced andrepresentative of a particular domain (McEnery\nand Wilson, 2001, pp. 29\u201330). (Sometimes the term is used more loosely to cover\nany large collection of language data which need not have been compiled\nsystematically, as in the phrase \u2018the web as corpus\u2019.)", "mimetype": "text/plain", "start_char_idx": 482, "end_char_idx": 929, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "84f89005-db53-4885-9dff-47b2f8c019bc": {"__data__": {"id_": "84f89005-db53-4885-9dff-47b2f8c019bc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6397d877-6252-4cbf-a351-67b5640846c5", "node_type": "1", "metadata": {}, "hash": "1b5a641542afc0518cc1cc8b7456e56adce6d076b565ca13055279aa9fd29ed5", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "663ec1f4-8deb-46d6-9e2e-da95ecf8e48d", "node_type": "1", "metadata": {}, "hash": "2f4a4c1b19c7cb7b80557590f8b8765af7514afd39b962820539cf7ad1d59293", "class_name": "RelatedNodeInfo"}}, "text": "Sampling theory is a branch of\nstatistics that deals with questions such as: how many respondents are needed in an\nopinion poll for the results to be considered to represent public opinion at large?\nSimilar considerations arise in corpus linguistics. This is particularly important if a\ncorpus is to be used for quantitative analysis of the kind described in Chapter 5: if\nthe corpus data is skewed or unrepresentative then results of the analysis may not be\nreliable.", "mimetype": "text/plain", "start_char_idx": 930, "end_char_idx": 1398, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1e3d5183-8d7e-4290-8a11-cd1347e02d15": {"__data__": {"id_": "1e3d5183-8d7e-4290-8a11-cd1347e02d15", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "84f89005-db53-4885-9dff-47b2f8c019bc", "node_type": "1", "metadata": {}, "hash": "9820348fa5fd535cb7eb4852189bdd8440c88307e8d4e0e31beaca7e62dc1971", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "663ec1f4-8deb-46d6-9e2e-da95ecf8e48d", "node_type": "1", "metadata": {}, "hash": "2f4a4c1b19c7cb7b80557590f8b8765af7514afd39b962820539cf7ad1d59293", "class_name": "RelatedNodeInfo"}}, "text": "These considerations may be less important if the corpus is collected for the\nliterary or historical interest of the documents that make it up, as is the case with\nProject Gutenberg for example.\nFor example, Bird et al. (2009, pp. 407\u2013412) refer to the TIMIT corpus, an annotated\nspeech corpus developed by Texas Instruments and MIT. To ensure\nrepresentativeness, it was designed to include a wide coverage of dialect variations.", "mimetype": "text/plain", "start_char_idx": 1399, "end_char_idx": 1828, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "89fb4bda-19de-4c9a-8784-6df5f48e49ee": {"__data__": {"id_": "89fb4bda-19de-4c9a-8784-6df5f48e49ee", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1e3d5183-8d7e-4290-8a11-cd1347e02d15", "node_type": "1", "metadata": {}, "hash": "3d6d0a330d7334914ebc68337621b53b6cb09c4c05661f3d2d2da41d3cb30bd9", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "663ec1f4-8deb-46d6-9e2e-da95ecf8e48d", "node_type": "1", "metadata": {}, "hash": "2f4a4c1b19c7cb7b80557590f8b8765af7514afd39b962820539cf7ad1d59293", "class_name": "RelatedNodeInfo"}}, "text": "To ensure\nrepresentativeness, it was designed to include a wide coverage of dialect variations.\nCorpus builders need to exercise expert judgment in deciding on the sampling frame ,\n30\n\nSome uses of corpora\nor \u2018the entire population of texts from which we will take our samples\u2019 (McEnery and\nWilson, 2001, p. 78) and calculating the size of the corpus that is necessary for it to\nbe maximally representative.", "mimetype": "text/plain", "start_char_idx": 1733, "end_char_idx": 2140, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "034df081-5a94-448a-bb61-b39c09845219": {"__data__": {"id_": "034df081-5a94-448a-bb61-b39c09845219", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6d41249a-c560-4f19-952c-9d4aef985451", "node_type": "1", "metadata": {}, "hash": "b3b8af9972925addc775cd5c1fb009de997b2d6f7f9a1027aacaf1dc3032e71f", "class_name": "RelatedNodeInfo"}}, "text": "The sampling frame may, for example, be bibliographic ,\nbased on some comprehensive index or the holdings of a particular library, or\ndemographic , selecting informants on the basis of various social categories as is often\ndone in public opinion research.\nCorpora have tended to be of a \ufb01nite size and to remain \ufb01xed once they have been\ncompiled. There are also what is known as monitor corpora which are continually\nupdated with new material.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 443, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b690e88c-8c69-43ef-ad68-83378fd77ba0": {"__data__": {"id_": "b690e88c-8c69-43ef-ad68-83378fd77ba0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "034df081-5a94-448a-bb61-b39c09845219", "node_type": "1", "metadata": {}, "hash": "9d2973f8ebcd3b0213eaf66478e1b62a62b9317b6463606ec93708338d0d57b4", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6d41249a-c560-4f19-952c-9d4aef985451", "node_type": "1", "metadata": {}, "hash": "b3b8af9972925addc775cd5c1fb009de997b2d6f7f9a1027aacaf1dc3032e71f", "class_name": "RelatedNodeInfo"}}, "text": "There are also what is known as monitor corpora which are continually\nupdated with new material. This is particularly useful for compilers of dictionaries\nwho need to be able to track new words entering the language and the changing or\ndeclining use of old ones. An example of a monitor corpus is the COBUILD Bank of\nEnglishTM, which had around 300 million words when it was referred to by McEnery\n(2003) and has since more than doubled in size to 650 million words.", "mimetype": "text/plain", "start_char_idx": 347, "end_char_idx": 813, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "25ce210f-0adb-4cfd-aeed-d40fea7f4d0a": {"__data__": {"id_": "25ce210f-0adb-4cfd-aeed-d40fea7f4d0a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b690e88c-8c69-43ef-ad68-83378fd77ba0", "node_type": "1", "metadata": {}, "hash": "dbe66bdac423153a0fc3d4d5a97acfe422f39cf22859b2f3ec6d003e377f14ef", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6d41249a-c560-4f19-952c-9d4aef985451", "node_type": "1", "metadata": {}, "hash": "b3b8af9972925addc775cd5c1fb009de997b2d6f7f9a1027aacaf1dc3032e71f", "class_name": "RelatedNodeInfo"}}, "text": "A further distinction is between corpora consisting solely of the original or \u2018raw\u2019 text\nand those that have been marked up with various annotations. One common\ntechnique is standoff annotation where the mark-up is stored in a different \ufb01le from\nthe original text (McEnery and Wilson, 2001, p.38); (Bird et al., 2009, p.415).\nFinally, corpora can be further classifed according to their structure:\nIsolated \u2013 an unorganised collection of individual texts such as the Gutenberg\nonline collection of literary works.", "mimetype": "text/plain", "start_char_idx": 814, "end_char_idx": 1327, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0f0ca2b9-ccad-457b-8a8a-f14a2b9bc03c": {"__data__": {"id_": "0f0ca2b9-ccad-457b-8a8a-f14a2b9bc03c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "25ce210f-0adb-4cfd-aeed-d40fea7f4d0a", "node_type": "1", "metadata": {}, "hash": "7e3311d6e64cc0c93800986d167fc2a23501fbbf17ea5da00f7c387b38c14cf5", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6d41249a-c560-4f19-952c-9d4aef985451", "node_type": "1", "metadata": {}, "hash": "b3b8af9972925addc775cd5c1fb009de997b2d6f7f9a1027aacaf1dc3032e71f", "class_name": "RelatedNodeInfo"}}, "text": "Categorised \u2013 texts are organised by categories such as genre; an example is the\nBrown corpus described below.\nOverlapping \u2013 some categories overlap. A news corpus such as Reuters may contain\nstories which cover both politics and sport, for example.\nTemporal \u2013 texts indicate language use over time. Examples are the Inaugural\ncorpus of all inaugural speeches by US Presidents, and the Helsinki Diachronic\ncorpus of about 1.6 million words of English dating from the early 9th century\nCE to 1710.", "mimetype": "text/plain", "start_char_idx": 1328, "end_char_idx": 1824, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2fc1a321-1097-44b9-9340-676f4bc0b449": {"__data__": {"id_": "2fc1a321-1097-44b9-9340-676f4bc0b449", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0f0ca2b9-ccad-457b-8a8a-f14a2b9bc03c", "node_type": "1", "metadata": {}, "hash": "145adeac6ce554fd9a9f1bc78794c6db4f9ebc293775a449ced1840f180318d2", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6d41249a-c560-4f19-952c-9d4aef985451", "node_type": "1", "metadata": {}, "hash": "b3b8af9972925addc775cd5c1fb009de997b2d6f7f9a1027aacaf1dc3032e71f", "class_name": "RelatedNodeInfo"}}, "text": "Some examples of corpora, which will be described in more detail later in the\nchapter, are:\nBrown Developed at Brown University in the early 1960s.\nBNC British National Corpus, created and managed by BNC consortium which\nincludes Oxford and Lancaster universities, dictionary publishers OUP,\nLongmans and Chambers, and the British Library.", "mimetype": "text/plain", "start_char_idx": 1825, "end_char_idx": 2164, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "26be25bc-cda0-46cc-98d4-e88e355e62e8": {"__data__": {"id_": "26be25bc-cda0-46cc-98d4-e88e355e62e8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4153621b-fc78-4b98-b9b3-e372de826ce8", "node_type": "1", "metadata": {}, "hash": "27d6f3f067c0e5a0dda788a93c26faa5b206226c4ac962d25fb2c39b2d3d8677", "class_name": "RelatedNodeInfo"}}, "text": "COBUILD (Bank of English) The Bank of EnglishTMforms part of the Collins\nCorpus, developed by Collins Dictionaries and the University of Birmingham,\nand contains 650 million words.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 180, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8db665e8-8f39-45e8-9fd6-2e49ce326b4a": {"__data__": {"id_": "8db665e8-8f39-45e8-9fd6-2e49ce326b4a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c57a2913-0d23-4354-ad83-71e73056ffc4", "node_type": "1", "metadata": {}, "hash": "fea12ba9dc0c56ce8a3822a2f505569236b118afdef626821dfaadfaaae7de5f", "class_name": "RelatedNodeInfo"}}, "text": "Gutenberg An archive of free electronic books in various formats hosted at\nhttp://www.gutenberg.org /\nPenn Treebank A corpus of reports from the Wall Street Journal and other sources\nin various different formats.\n3.4 Some uses of corpora\nMcEnery and Wilson (2001, Chapter 4) discuss a variety of uses for corpora, some of\nwhich are brie\ufb02y discussed below.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 355, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9c493a62-295b-461d-8956-150a6135e130": {"__data__": {"id_": "9c493a62-295b-461d-8956-150a6135e130", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8db665e8-8f39-45e8-9fd6-2e49ce326b4a", "node_type": "1", "metadata": {}, "hash": "42c9060d4adc1c2ee85708b6e6c4fa1b7a984f7f1e6de7fbc09c718f1bf4c4c5", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c57a2913-0d23-4354-ad83-71e73056ffc4", "node_type": "1", "metadata": {}, "hash": "fea12ba9dc0c56ce8a3822a2f505569236b118afdef626821dfaadfaaae7de5f", "class_name": "RelatedNodeInfo"}}, "text": "31\n\nCO3354 Introduction to natural language processing\n3.4.1 Lexicography\nModern dictionaries such as Chambers, Collins and Longmans now rely heavily on\ncorpus data in order to classify and inventorise the various ways words can be used\nin contemporary English as well as any ways these uses may have changed.", "mimetype": "text/plain", "start_char_idx": 356, "end_char_idx": 665, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c133f493-f6b2-42a0-bce0-dd5d40742b4d": {"__data__": {"id_": "c133f493-f6b2-42a0-bce0-dd5d40742b4d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9c493a62-295b-461d-8956-150a6135e130", "node_type": "1", "metadata": {}, "hash": "80e015a31983fc786ffcb09b7f9514d155698208a2a900be4f53aad0fd8ab8eb", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c57a2913-0d23-4354-ad83-71e73056ffc4", "node_type": "1", "metadata": {}, "hash": "fea12ba9dc0c56ce8a3822a2f505569236b118afdef626821dfaadfaaae7de5f", "class_name": "RelatedNodeInfo"}}, "text": "For\nexample, a lexicographer who wishes to determine whether the words scapegoat ,\nthermostat orleverage can be used as verbs can enter the appropriate search string\nand be presented with examples such as the following (from the BNC):\nScapegoating an individual prevents the debate and delays community\nunderstanding .\nThe measuring cell is immersed in a vat of liquid, usually benzene or xylene which\ncan be thermostatted at temperatures between 273 and 400 K .\nThese one-time costs once met could be leveraged over much more business activity\naround the globe than we then enjoyed .", "mimetype": "text/plain", "start_char_idx": 666, "end_char_idx": 1250, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "20d076ee-db9f-445d-a038-e99f6c94ec00": {"__data__": {"id_": "20d076ee-db9f-445d-a038-e99f6c94ec00", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c133f493-f6b2-42a0-bce0-dd5d40742b4d", "node_type": "1", "metadata": {}, "hash": "ae758ea528f7332404f1e8c39d58816bd65a92e0647880ef680c9a68e57e72fd", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c57a2913-0d23-4354-ad83-71e73056ffc4", "node_type": "1", "metadata": {}, "hash": "fea12ba9dc0c56ce8a3822a2f505569236b118afdef626821dfaadfaaae7de5f", "class_name": "RelatedNodeInfo"}}, "text": "McEnery and Wilson (2001, p. 107) discuss a case where they claim that two\nwell-known dictionaries had \u2018got it wrong\u2019 by listing quake as a solely intransitive\nverb, while examples in a transitive construction can in fact be found through a\ncorpus search:\nThese sudden movements quake the Earth.", "mimetype": "text/plain", "start_char_idx": 1251, "end_char_idx": 1546, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1b727395-91f1-4e81-a6c8-be495808db92": {"__data__": {"id_": "1b727395-91f1-4e81-a6c8-be495808db92", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "20d076ee-db9f-445d-a038-e99f6c94ec00", "node_type": "1", "metadata": {}, "hash": "d4d7031d00b1f04bfb589885beebd8e249d15c6ed2505c6ae588e1b88080f38c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c57a2913-0d23-4354-ad83-71e73056ffc4", "node_type": "1", "metadata": {}, "hash": "fea12ba9dc0c56ce8a3822a2f505569236b118afdef626821dfaadfaaae7de5f", "class_name": "RelatedNodeInfo"}}, "text": "(BNC)\nIt is perhaps debatable whether the dictionaries in question were \u2018wrong\u2019 to\ndisregard examples like this, or the compilers may have judged this to be an\nidiosyncratic usage which did not merit being included in a work of reference with\nthe status of standard usage.", "mimetype": "text/plain", "start_char_idx": 1547, "end_char_idx": 1819, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "52d40cdd-fd55-4801-a9d9-6a084bebc412": {"__data__": {"id_": "52d40cdd-fd55-4801-a9d9-6a084bebc412", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "904b603f-e9f0-40fd-afb4-49d424dc6962", "node_type": "1", "metadata": {}, "hash": "45bc6d15442a04c832e00900ff0d47dae7d175253575655e3098b0cb09dce8d4", "class_name": "RelatedNodeInfo"}}, "text": "3.4.2 Grammar and syntax\nLarge-scale grammars for pedagogic and reference use such as the Comprehensive\nGrammar of the English Language (Quirk et al., 1985) or the Cambridge Grammar of\nthe English Language (Huddleston and Pullum, 2002) use corpora among their\nsources of information along with results of linguistic research and the compilers\u2019\nown subjective intuitions as competent speakers of the language, although this has\ntended to involve qualitative rather than quantitative analysis.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 491, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "11528f83-27ae-47d3-8917-1a9ae9e5479b": {"__data__": {"id_": "11528f83-27ae-47d3-8917-1a9ae9e5479b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "52d40cdd-fd55-4801-a9d9-6a084bebc412", "node_type": "1", "metadata": {}, "hash": "87f9b17642080ec71f718abbd1da6346fb88a6913d82b69c15a190a45ce36784", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "904b603f-e9f0-40fd-afb4-49d424dc6962", "node_type": "1", "metadata": {}, "hash": "45bc6d15442a04c832e00900ff0d47dae7d175253575655e3098b0cb09dce8d4", "class_name": "RelatedNodeInfo"}}, "text": "Recent advances in\ncomputational power and developments in parsed corpora and tools to analyse them\nhave made it possible for researchers to carry out quantitative studies of various\nkinds of grammatical frequency, such as the relative frequency of different clause\ntypes in English. Other studies use corpora to test predictions made by formal\ngrammars that have been developed within the generative school of linguistics.", "mimetype": "text/plain", "start_char_idx": 492, "end_char_idx": 915, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3608bdf2-f30d-451c-b496-1f086095a943": {"__data__": {"id_": "3608bdf2-f30d-451c-b496-1f086095a943", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "11528f83-27ae-47d3-8917-1a9ae9e5479b", "node_type": "1", "metadata": {}, "hash": "8e4a024db1a880ca9f5c04ab727795df7eee08b21e39b004436247446db7cda4", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "904b603f-e9f0-40fd-afb4-49d424dc6962", "node_type": "1", "metadata": {}, "hash": "45bc6d15442a04c832e00900ff0d47dae7d175253575655e3098b0cb09dce8d4", "class_name": "RelatedNodeInfo"}}, "text": "The\nCOBUILD project which provided the resources for Collins English dictionaries has\nalso resulted in a series of small handbooks covering various kinds of grammatical\nconstruction, which are useful both for advanced language learners and for linguists\nin search of examples.", "mimetype": "text/plain", "start_char_idx": 916, "end_char_idx": 1192, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d15c561a-9b4f-4cf5-9044-3509b38cbcff": {"__data__": {"id_": "d15c561a-9b4f-4cf5-9044-3509b38cbcff", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3608bdf2-f30d-451c-b496-1f086095a943", "node_type": "1", "metadata": {}, "hash": "6ff14e9ff55610248e593c7770cb1263f95932626ddfb5e70cd985f21a35498f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "904b603f-e9f0-40fd-afb4-49d424dc6962", "node_type": "1", "metadata": {}, "hash": "45bc6d15442a04c832e00900ff0d47dae7d175253575655e3098b0cb09dce8d4", "class_name": "RelatedNodeInfo"}}, "text": "3.4.3 Stylistics: variation across authors, periods, genres and channels of\ncommunication\nThe notion of style in communication is that people generally have a choice between\ndifferent ways of expressing themselves and not only do individuals tend to make\n32\n\nCorpora\nsimilar choices each time they communicate, but their particular choices may be\nmore characteristic of particular genres (romantic \ufb01ction, \ufb01nancial news, court\nreports and so on), time periods and channels of communication.", "mimetype": "text/plain", "start_char_idx": 1193, "end_char_idx": 1683, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0bc9c9d9-6aff-45a0-9956-0ae37614f456": {"__data__": {"id_": "0bc9c9d9-6aff-45a0-9956-0ae37614f456", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d15c561a-9b4f-4cf5-9044-3509b38cbcff", "node_type": "1", "metadata": {}, "hash": "ef3ea6d127cc930c90569620b47b9ec2b16aa1a45b3d5187524d7287a17482d3", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "904b603f-e9f0-40fd-afb4-49d424dc6962", "node_type": "1", "metadata": {}, "hash": "45bc6d15442a04c832e00900ff0d47dae7d175253575655e3098b0cb09dce8d4", "class_name": "RelatedNodeInfo"}}, "text": "By channels we\nmean distinctions such as written text compared with spoken discourse, both of\nwhich can be further subdivided: people will make different choices when\ncomposing emails, sending text messages or (rarely) writing a letter by hand. We\nprobably also adopt different styles when talking face-to-face and on the telephone.\nLiterary scholars as well as law enforcement and intelligence agencies may have an\ninterest in identifying the author of a document from internal evidence.", "mimetype": "text/plain", "start_char_idx": 1684, "end_char_idx": 2172, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "36a84821-aed8-4b03-a1fc-7539ee102535": {"__data__": {"id_": "36a84821-aed8-4b03-a1fc-7539ee102535", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0bc9c9d9-6aff-45a0-9956-0ae37614f456", "node_type": "1", "metadata": {}, "hash": "fe0649d22f88adcc28fb6112145f4fdb141b73217bc4fe53400979507872e142", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "904b603f-e9f0-40fd-afb4-49d424dc6962", "node_type": "1", "metadata": {}, "hash": "45bc6d15442a04c832e00900ff0d47dae7d175253575655e3098b0cb09dce8d4", "class_name": "RelatedNodeInfo"}}, "text": "There have\nbeen various famous and less well-known instances of controversial attribution of\nauthorship: for example, various \ufb01gures have been put forward as the authors of\nShakespeare\u2019s plays.", "mimetype": "text/plain", "start_char_idx": 2173, "end_char_idx": 2366, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "555bb09f-ecce-481c-a345-e654ed0ff5d3": {"__data__": {"id_": "555bb09f-ecce-481c-a345-e654ed0ff5d3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "09844597-bb35-462d-ad51-b956020e3374", "node_type": "1", "metadata": {}, "hash": "6254c7c7a4f0fc67f7cf196063b01894b1974e8fdaa13d2ea9d7b54508fd3a21", "class_name": "RelatedNodeInfo"}}, "text": "3.4.4 Training and evaluation\nIn addition to the applications listed above, corpora are routinely used in linguistic\nresearch for training and testing machine-learning systems for speci\ufb01c tasks in text\nanalytics such as:\ndetecting the topic of a document\nanalysing the sentiments expressed for or against some product or policy\nidentifying individuals described in a text, relations between them and events\nthey participate in\nstatistical parsing\nstatistical machine translation.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 479, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d30602bd-f3f5-4d0d-85e6-13d33b4ecd5a": {"__data__": {"id_": "d30602bd-f3f5-4d0d-85e6-13d33b4ecd5a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "555bb09f-ecce-481c-a345-e654ed0ff5d3", "node_type": "1", "metadata": {}, "hash": "00141358e93ca3fb62ad44b1fdc49f59755ec352a54dd4dcf9499ca88e1e27f4", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "09844597-bb35-462d-ad51-b956020e3374", "node_type": "1", "metadata": {}, "hash": "6254c7c7a4f0fc67f7cf196063b01894b1974e8fdaa13d2ea9d7b54508fd3a21", "class_name": "RelatedNodeInfo"}}, "text": "For example, the Brown corpus and the WSJ corpus are typically used for evaluating\ntext segmentation among other text processing tasks (Mikheev, 2003, p. 203).\nThese topics will be covered in more detail in Chapter 5 of this subject guide, where\nyou will be introduced to various machine-learning techniques. These will all be\ntypes of supervised learning , where a system is trained on \u2018corpora containing the\ncorrect label for each input\u2019 (Bird et al., 2009, p.", "mimetype": "text/plain", "start_char_idx": 480, "end_char_idx": 943, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "db9f3d33-6b14-4797-9c22-1e8bcd80b604": {"__data__": {"id_": "db9f3d33-6b14-4797-9c22-1e8bcd80b604", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d30602bd-f3f5-4d0d-85e6-13d33b4ecd5a", "node_type": "1", "metadata": {}, "hash": "bdc82560bdebec7c8eabfaa4ed309b559edddf656df21c3e7105710a16cf80b8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "09844597-bb35-462d-ad51-b956020e3374", "node_type": "1", "metadata": {}, "hash": "6254c7c7a4f0fc67f7cf196063b01894b1974e8fdaa13d2ea9d7b54508fd3a21", "class_name": "RelatedNodeInfo"}}, "text": "222), as opposed to unsupervised\nlearning where the system is designed to detect patterns in the input without any\nfeedback. This normally means that the corpus has been marked up by human\nannotators. Standard practice is to divide a corpus into training and test sets; the\ntest set is considered a gold standard for comparing the accuracy of trained learning\nsystems with that of the annotators. Of course humans are fallible, and it is good\npractice to use multiple annotators for at least a sample of the corpus and report the\nlevel of inter-annotator agreement that was achieved.", "mimetype": "text/plain", "start_char_idx": 944, "end_char_idx": 1527, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7d27379d-f8a0-458b-ae8d-b87637254b08": {"__data__": {"id_": "7d27379d-f8a0-458b-ae8d-b87637254b08", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "db9f3d33-6b14-4797-9c22-1e8bcd80b604", "node_type": "1", "metadata": {}, "hash": "646a85c24298371219f0ec1f8debf77b308acb4e545c5a96318d8199f6908e5f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "09844597-bb35-462d-ad51-b956020e3374", "node_type": "1", "metadata": {}, "hash": "6254c7c7a4f0fc67f7cf196063b01894b1974e8fdaa13d2ea9d7b54508fd3a21", "class_name": "RelatedNodeInfo"}}, "text": "This will set an upper bound\nfor the performance that can be expected from the system, as it seems meaningless\nto say that a computer program can achieve 100 per cent accuracy on tasks where\nhuman annotators disagree (see Jurafsky and Martin, 2009, p. 189).\n3.5 Corpora\nThis section provides brief descriptions of various corpora, some of which are\ndistributed in full or in part with the NLTK and others can be accessed online.", "mimetype": "text/plain", "start_char_idx": 1528, "end_char_idx": 1956, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f41d071e-9434-407b-8fc9-65ed14879d97": {"__data__": {"id_": "f41d071e-9434-407b-8fc9-65ed14879d97", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7d27379d-f8a0-458b-ae8d-b87637254b08", "node_type": "1", "metadata": {}, "hash": "69eb6f66d1fcb9769500c26a074eeee47b03a8fd890321206e61d990d4d68323", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "09844597-bb35-462d-ad51-b956020e3374", "node_type": "1", "metadata": {}, "hash": "6254c7c7a4f0fc67f7cf196063b01894b1974e8fdaa13d2ea9d7b54508fd3a21", "class_name": "RelatedNodeInfo"}}, "text": "33\n\nCO3354 Introduction to natural language processing\n3.5.1 Brown corpus\nThis was one of the \ufb01rst \u2018large-scale\u2019 machine readable corpora, though it may seem\nrather small by today\u2019s standards, consisting of one million words. It was developed\nat Brown University from the early 1960s and took around two decades to complete.", "mimetype": "text/plain", "start_char_idx": 1957, "end_char_idx": 2281, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4b742297-abae-46aa-a775-8299292e19c0": {"__data__": {"id_": "4b742297-abae-46aa-a775-8299292e19c0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4602b0fa-2ce6-457b-b66b-b9fb64c4c3be", "node_type": "1", "metadata": {}, "hash": "272f690e9952135a1a37931aad4074c247629749eb7cd08a470e558fd61afc53", "class_name": "RelatedNodeInfo"}}, "text": "It was intended as a \u2018standard corpus of present-day edited American English\u2019 and is\ncaterorised by genre under headings such as:\nNews Chicago Tribune : Society Reportage\nEditorial Christian Science Monitor : Editorials\nReviews Time Magazine : Reviews\nGovernment US Of\ufb01ce of Civil Defense: The Family Fallout Shelter\nScience Fiction Heinlein: Stranger in a Strange Land\nHumour Thurber: The future, if any, of comedy .\nThe Brown corpus is provided with the NLTK in tagged and untagged versions and\ncan be accessed using the various methods listed by Bird et al.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 560, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "62c26afe-62ea-4316-bb5a-3d066ea3c2d3": {"__data__": {"id_": "62c26afe-62ea-4316-bb5a-3d066ea3c2d3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4b742297-abae-46aa-a775-8299292e19c0", "node_type": "1", "metadata": {}, "hash": "d11c21e6dce550bbf71b6cc75f08fbdd349b938d2b4bf79df8de12cae6519c17", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4602b0fa-2ce6-457b-b66b-b9fb64c4c3be", "node_type": "1", "metadata": {}, "hash": "272f690e9952135a1a37931aad4074c247629749eb7cd08a470e558fd61afc53", "class_name": "RelatedNodeInfo"}}, "text": "(2009, Table 2.3,\np. 50).\n3.5.2 British National Corpus\nThe BNC is created and managed by the BNC consortium, which includes Oxford\nand Lancaster universities, dictionary publishers OUP, Longmans and Chambers, and\nthe British Library. It was developed between 1991 and 1994 and consists of 100\nmillion words: 90 per cent written and 10 per cent transcriptions of speech. This\nwas one of the \ufb01rst corpora to include spontaneous spoken English.", "mimetype": "text/plain", "start_char_idx": 561, "end_char_idx": 1003, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4a6b5ddf-215c-41bf-bcd8-dc05d2c13196": {"__data__": {"id_": "4a6b5ddf-215c-41bf-bcd8-dc05d2c13196", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "62c26afe-62ea-4316-bb5a-3d066ea3c2d3", "node_type": "1", "metadata": {}, "hash": "f5cf2784dbd765acc025c5d5c9aebcc39560ec96d4e1a1eb4652d8100fd7330f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4602b0fa-2ce6-457b-b66b-b9fb64c4c3be", "node_type": "1", "metadata": {}, "hash": "272f690e9952135a1a37931aad4074c247629749eb7cd08a470e558fd61afc53", "class_name": "RelatedNodeInfo"}}, "text": "This\nwas one of the \ufb01rst corpora to include spontaneous spoken English. The corpus was\nmarked up using an automated part-of-speech tagger which resulted in a signi\ufb01cant\nsaving of time and expense compared with manual annotation by competent\nspeakers of the language, but means that there is inevitably a degree of error \u2013 as\nyou may discover in the course of the exercise given later in this chapter.\nYou can access this corpus online and perform various kinds of analysis using the\nSimple Query language.", "mimetype": "text/plain", "start_char_idx": 932, "end_char_idx": 1437, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f71a58e8-bc42-4ba7-b6aa-dfcfb05b85bc": {"__data__": {"id_": "f71a58e8-bc42-4ba7-b6aa-dfcfb05b85bc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4a6b5ddf-215c-41bf-bcd8-dc05d2c13196", "node_type": "1", "metadata": {}, "hash": "515e8c8a9310e6e7421c7886f3fb00ef5cf38a56758f5568ca977f3f30067abf", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4602b0fa-2ce6-457b-b66b-b9fb64c4c3be", "node_type": "1", "metadata": {}, "hash": "272f690e9952135a1a37931aad4074c247629749eb7cd08a470e558fd61afc53", "class_name": "RelatedNodeInfo"}}, "text": "You can access this corpus online and perform various kinds of analysis using the\nSimple Query language. Registration is required via the following link but there is\ncurrently no charge:\nhttp://bncweb.lancs.ac.uk/bncwebSignup/user/login.php (last visited 27th\nMay 2013)\n3.5.3 COBUILD Bank of English\nThe COBUILD project involved Collins Dictionaries and the University of\nBirmingham. The Collins corpus is a 2.5-billion word analytical database of English.", "mimetype": "text/plain", "start_char_idx": 1333, "end_char_idx": 1789, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bfd37cad-12ca-44b6-b587-bcb8d8ca19b4": {"__data__": {"id_": "bfd37cad-12ca-44b6-b587-bcb8d8ca19b4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f71a58e8-bc42-4ba7-b6aa-dfcfb05b85bc", "node_type": "1", "metadata": {}, "hash": "13d28bcb81c7751e38ef756d8ba482f7ad445a7824cc50792a7564216f7ac773", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4602b0fa-2ce6-457b-b66b-b9fb64c4c3be", "node_type": "1", "metadata": {}, "hash": "272f690e9952135a1a37931aad4074c247629749eb7cd08a470e558fd61afc53", "class_name": "RelatedNodeInfo"}}, "text": "The Collins corpus is a 2.5-billion word analytical database of English.\nIt contains written material from websites, newspapers, magazines and books\npublished around the world, and spoken material from radio, TV and everyday\nconversations. The Bank of EnglishTMforms part of the Collins Corpus and contains\n650 million words. It was used as a basis for the Collins Advanced Learner\u2019s\nDictionary, grammars and various tutorial materials for learners of English.", "mimetype": "text/plain", "start_char_idx": 1717, "end_char_idx": 2177, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c9a77129-d5c9-467a-a733-d7fa5fb18f98": {"__data__": {"id_": "c9a77129-d5c9-467a-a733-d7fa5fb18f98", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0d595c8c-a021-4a78-b184-9314729c5bd9", "node_type": "1", "metadata": {}, "hash": "47d313df08f35204103e7cf68be1730ee1a7e9a1c14ed70f060070f63b74f248", "class_name": "RelatedNodeInfo"}}, "text": "It is not\nincluded in the NLTK but there is limited online access via\nhttp://www.collinslanguage.com/wordbanks .\n34\n\nCorpora\n3.5.4 Penn Treebank\nThe Penn Treebank with its various offshoots is one of the widely used linguistic\nresources among empirical researchers.\nIt includes a collection of texts in four different formats:\nRaw text (original).\nTagged with POS using a tagset which was developed as part of the project.\n\u2018Parsed\u2019; that is, marked up with constituent structure.\nCombined, including both POS tags and constituent structure.\nThe Penn Treebank project .", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 568, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "717873b8-e72f-4bcd-8fc1-ddb3babc920f": {"__data__": {"id_": "717873b8-e72f-4bcd-8fc1-ddb3babc920f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c9a77129-d5c9-467a-a733-d7fa5fb18f98", "node_type": "1", "metadata": {}, "hash": "5aeb282a557dd785e6eb81be1a03728df329ceb8a69d88db85f9c0eb375641b7", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0d595c8c-a021-4a78-b184-9314729c5bd9", "node_type": "1", "metadata": {}, "hash": "47d313df08f35204103e7cf68be1730ee1a7e9a1c14ed70f060070f63b74f248", "class_name": "RelatedNodeInfo"}}, "text": "Combined, including both POS tags and constituent structure.\nThe Penn Treebank project . . .", "mimetype": "text/plain", "start_char_idx": 480, "end_char_idx": 572, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "56ca8a26-ef2b-406d-b4d2-c3a29864653d": {"__data__": {"id_": "56ca8a26-ef2b-406d-b4d2-c3a29864653d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4673f362-5d18-4d2d-8dae-10a7c46aaa4b", "node_type": "1", "metadata": {}, "hash": "586015c82e8ad169028e1d10631160646c1600d2197d5b423401791da23ebc6b", "class_name": "RelatedNodeInfo"}}, "text": "The Penn Treebank project . . . has produced treebanks from the Brown, Switchboard, ATIS and Wall Street\nJournal corpora of English, as well as treebanks in Arabic and Chinese.\nJurafsky and Martin (2009, p. 438)\nThe project began at the University of Pennsylvania in the 1990s and the results\nhave been used as a basis for further annotation efforts involving semantics and\nrhetorical structure.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 395, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5e16d50f-22c1-46b7-8a9a-4cdb6dd81c57": {"__data__": {"id_": "5e16d50f-22c1-46b7-8a9a-4cdb6dd81c57", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "56ca8a26-ef2b-406d-b4d2-c3a29864653d", "node_type": "1", "metadata": {}, "hash": "441410424a28f9e64e07eeb49ccd98bf4305619958ff5abc999f4e8d75815112", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4673f362-5d18-4d2d-8dae-10a7c46aaa4b", "node_type": "1", "metadata": {}, "hash": "586015c82e8ad169028e1d10631160646c1600d2197d5b423401791da23ebc6b", "class_name": "RelatedNodeInfo"}}, "text": "The NLTK includes a selection from the Wall Street Journal\n(WSJ) component of the Treebank, which can be accessed in each of the above\nformats and additionally with a simpli\ufb01ed POS tagset (Bird et al., 2009, Table 5-1,\np. 183). Here is an excerpt showing the four different formats:\nRaw text\nPierre Vinken, 61 years old, will join the board as a\nnonexecutive director Nov. 29.", "mimetype": "text/plain", "start_char_idx": 396, "end_char_idx": 772, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7e6f9652-020a-403a-bef3-1aa174145307": {"__data__": {"id_": "7e6f9652-020a-403a-bef3-1aa174145307", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5e16d50f-22c1-46b7-8a9a-4cdb6dd81c57", "node_type": "1", "metadata": {}, "hash": "9e5043a74a4d21604e45dc7eb242eeaad1fc86eba376dbc0cfa5a9c1cdf4729d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4673f362-5d18-4d2d-8dae-10a7c46aaa4b", "node_type": "1", "metadata": {}, "hash": "586015c82e8ad169028e1d10631160646c1600d2197d5b423401791da23ebc6b", "class_name": "RelatedNodeInfo"}}, "text": "29.\nTagged\n[ Pierre/NNP Vinken/NNP ]\n,/,\n[ 61/CD years/NNS ]\nold/JJ ,/, will/MD join/VB\n[ the/DT board/NN ]\nas/IN\n[ a/DT nonexecutive/JJ director/NN Nov./NNP 29/CD ]\n./.", "mimetype": "text/plain", "start_char_idx": 769, "end_char_idx": 938, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0ee16332-a899-494d-9fb2-641f890cd0a7": {"__data__": {"id_": "0ee16332-a899-494d-9fb2-641f890cd0a7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7e6f9652-020a-403a-bef3-1aa174145307", "node_type": "1", "metadata": {}, "hash": "01bfb2a81907abab1577775857812dd581d205e4bc1f72c2d31758313902297a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4673f362-5d18-4d2d-8dae-10a7c46aaa4b", "node_type": "1", "metadata": {}, "hash": "586015c82e8ad169028e1d10631160646c1600d2197d5b423401791da23ebc6b", "class_name": "RelatedNodeInfo"}}, "text": "Parsed\n( (S (NP-SBJ (NP Pierre Vinken)\n,\n(ADJP (NP 61 years) old)\n35\n\nCO3354 Introduction to natural language processing\n,)\n(VP will\n(VP join\n(NP the board)\n(PP-CLR as\n(NP a nonexecutive director))\n(NP-TMP Nov. 29)))\n.))", "mimetype": "text/plain", "start_char_idx": 939, "end_char_idx": 1159, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "34e0944e-dd01-48bb-8a50-43ebcf06908f": {"__data__": {"id_": "34e0944e-dd01-48bb-8a50-43ebcf06908f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0ee16332-a899-494d-9fb2-641f890cd0a7", "node_type": "1", "metadata": {}, "hash": "74cb47f5bf6d8cabd9e9ee9689a771a2f479d9ecf6d8c58f50093d2043c4c090", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4673f362-5d18-4d2d-8dae-10a7c46aaa4b", "node_type": "1", "metadata": {}, "hash": "586015c82e8ad169028e1d10631160646c1600d2197d5b423401791da23ebc6b", "class_name": "RelatedNodeInfo"}}, "text": "29)))\n.))\nCombined\n( (S\n(NP-SBJ\n(NP (NNP Pierre) (NNP Vinken) )\n(, ,)\n(ADJP\n(NP (CD 61) (NNS years) )\n(JJ old) )\n(, ,) )\n(VP (MD will)\n(VP (VB join)\n(NP (DT the) (NN board) )\n(PP-CLR (IN as)\n(NP (DT a) (JJ nonexecutive) (NN director) ))\n(NP-TMP (NNP Nov.) (CD 29) )))\n(.", "mimetype": "text/plain", "start_char_idx": 1150, "end_char_idx": 1420, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a4ba050f-1079-4011-86eb-ad73e61f1465": {"__data__": {"id_": "a4ba050f-1079-4011-86eb-ad73e61f1465", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "34e0944e-dd01-48bb-8a50-43ebcf06908f", "node_type": "1", "metadata": {}, "hash": "7875dc07481b26713b5ba50eef08fd2bc430226196c1097dc2f51404bdee079c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4673f362-5d18-4d2d-8dae-10a7c46aaa4b", "node_type": "1", "metadata": {}, "hash": "586015c82e8ad169028e1d10631160646c1600d2197d5b423401791da23ebc6b", "class_name": "RelatedNodeInfo"}}, "text": "(CD 29) )))\n(. .)", "mimetype": "text/plain", "start_char_idx": 1406, "end_char_idx": 1423, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "05595f23-9640-4d80-aa1c-2315b900c314": {"__data__": {"id_": "05595f23-9640-4d80-aa1c-2315b900c314", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ec3c6d6f-16ea-4410-8ce9-2095469f1087", "node_type": "1", "metadata": {}, "hash": "92c514bb3485b55d66ccb53cc40fda37ee8bca63115fd3d73ed14f485a562b95", "class_name": "RelatedNodeInfo"}}, "text": "(CD 29) )))\n(. .) ))\n3.5.5 Gutenberg archive\nThe NLTK includes a small selection of out-of-copyright literary texts from Project\nGutenberg, an archive of free electronic books hosted at http://www.gutenberg.org/\nSome of the texts included are:\nJane Austen: Emma ,Persuasion\nGK Chesterton: Father Brown stories ,The Man Who Was Thursday\nWilliam Blake: Poems\nMilton: Paradise Lost\nShakespeare: Julius Caesar ,Macbeth ,Hamlet\n3.5.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 427, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1738da19-dd60-43c4-afda-bb8dc726536f": {"__data__": {"id_": "1738da19-dd60-43c4-afda-bb8dc726536f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "05595f23-9640-4d80-aa1c-2315b900c314", "node_type": "1", "metadata": {}, "hash": "885e5042c3f13549c445f70a3942b97865ddfd3e8a3ce90daa12d5b5b822a527", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ec3c6d6f-16ea-4410-8ce9-2095469f1087", "node_type": "1", "metadata": {}, "hash": "92c514bb3485b55d66ccb53cc40fda37ee8bca63115fd3d73ed14f485a562b95", "class_name": "RelatedNodeInfo"}}, "text": "Macbeth ,Hamlet\n3.5.6 Other corpora\nSome further corpora included with the NLTK are:\nThe Reuters corpus distributed with the NLTK contains 10,788 news documents\ntotalling 1.3m words, partitioned into \u2018training\u2019 and \u2018test\u2019 sets. This split is for\ntraining and testing machine learning algorithms: we return to this topic in\nChapter 5 of this subject guide.\n36\n\nCorpora\nUS Presidents\u2019 inaugural and State of the Union addresses, organised as separate\n\ufb01les.\nUN Declaration of Human Rights in 300+ languages.", "mimetype": "text/plain", "start_char_idx": 407, "end_char_idx": 911, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bb874048-18ce-442f-8fc8-ea8ecef10972": {"__data__": {"id_": "bb874048-18ce-442f-8fc8-ea8ecef10972", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1738da19-dd60-43c4-afda-bb8dc726536f", "node_type": "1", "metadata": {}, "hash": "af24145e0b0be4759c6c25b524084a40d358f6f6971cdec82ee400a592313829", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ec3c6d6f-16ea-4410-8ce9-2095469f1087", "node_type": "1", "metadata": {}, "hash": "92c514bb3485b55d66ccb53cc40fda37ee8bca63115fd3d73ed14f485a562b95", "class_name": "RelatedNodeInfo"}}, "text": "UN Declaration of Human Rights in 300+ languages. Here are a few excerpts:\n\u000fAll human beings are born free and equal in dignity and rights.\n\u000fAbantu bonke bazalwa bekhululekile njalo belingana kumalungelo abo .\n\u000fTodos os seres humanos nascem livres e iguais em dignidade e em direitos .\nOther corpora with online query interfaces include:\n1. The Corpus of Contemporary American English, hosted at Brigham Young\nUniversity, is claimed to be \u2018the only large and balanced corpus of American\nEnglish\u2019.", "mimetype": "text/plain", "start_char_idx": 862, "end_char_idx": 1358, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4f312346-7d5b-4cbf-b9f4-ffbb252900c2": {"__data__": {"id_": "4f312346-7d5b-4cbf-b9f4-ffbb252900c2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bb874048-18ce-442f-8fc8-ea8ecef10972", "node_type": "1", "metadata": {}, "hash": "3a93a270603d64c4a87419bdaa0979b413839f12e29ea5f3e33807fe67b3a5ac", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ec3c6d6f-16ea-4410-8ce9-2095469f1087", "node_type": "1", "metadata": {}, "hash": "92c514bb3485b55d66ccb53cc40fda37ee8bca63115fd3d73ed14f485a562b95", "class_name": "RelatedNodeInfo"}}, "text": "http://corpus.byu.edu/coca/ (last visited 27th May 2013)\n2. The Intellitext project at the University of Leeds \u2018aims to facilitate corpus use for\nacademics working in various areas of the humanities\u2019 and currently provides\naccess to monolingual and parallel corpora in several European and Asian\nlanguages. http://corpus.leeds.ac.uk/it/ (last visited 27th May 2013)\nLearning activity\n1.", "mimetype": "text/plain", "start_char_idx": 1359, "end_char_idx": 1745, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b051a8aa-6fa2-42e0-9753-96b7c2c1794a": {"__data__": {"id_": "b051a8aa-6fa2-42e0-9753-96b7c2c1794a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4f312346-7d5b-4cbf-b9f4-ffbb252900c2", "node_type": "1", "metadata": {}, "hash": "3366ada638fed05162fc6204b817953cfbe7407979786ee7f6e08c537c21a267", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ec3c6d6f-16ea-4410-8ce9-2095469f1087", "node_type": "1", "metadata": {}, "hash": "92c514bb3485b55d66ccb53cc40fda37ee8bca63115fd3d73ed14f485a562b95", "class_name": "RelatedNodeInfo"}}, "text": "Pick two or three of the corpora mentioned above and research them online, focusing on questions\nsuch as:\nhow large is the corpus?\nwhat language(s) and genre(s) does it represent?\nwhen was it constructed and what is its intended use?\nwhat is the sampling frame?", "mimetype": "text/plain", "start_char_idx": 1746, "end_char_idx": 2007, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b8f57bfc-9640-4afe-9e54-c053bd16691b": {"__data__": {"id_": "b8f57bfc-9640-4afe-9e54-c053bd16691b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c853d148-7048-4b17-a508-9043e42101ce", "node_type": "1", "metadata": {}, "hash": "b34d4428acc597246c8b804cc231e2d1f3d01ef268caf55ecb429d6c241d64bf", "class_name": "RelatedNodeInfo"}}, "text": "when was it constructed and what is its intended use?\nwhat is the sampling frame?\nwhat level of interannotator agreement was achieved, if reported?\n2. Logon to the BNC Web (free registration needed) or another online corpus. Study the documentation\nprovided and search for data to answer the following questions:\nWhat syntactic categories can the following words have? total,pancake ,requisition ,acquisition .\nThe guide to Simple Query Syntax provided with the BNC warns that \u2018part-of-speech tags have\nbeen assigned by an automatic software tool and are not always correct\u2019.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 575, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a5908b7c-b7b3-40d4-9f0d-053c90b7bbb8": {"__data__": {"id_": "a5908b7c-b7b3-40d4-9f0d-053c90b7bbb8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b8f57bfc-9640-4afe-9e54-c053bd16691b", "node_type": "1", "metadata": {}, "hash": "48c0bb8813b5687ef6a24f53cbea9553ab868db9d4863be601d76ecf166facd1", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c853d148-7048-4b17-a508-9043e42101ce", "node_type": "1", "metadata": {}, "hash": "b34d4428acc597246c8b804cc231e2d1f3d01ef268caf55ecb429d6c241d64bf", "class_name": "RelatedNodeInfo"}}, "text": "Have your answers to\nthe previous question shown up any examples of incorrect classi\ufb01cation, in your view?\nWhat prepositions can follow the verb talk? Give an example in each case.\n3.5.7 WordNet\nThe NLTK also includes English WordNet, with 155,287 words and 117,659\nsynonym sets or synsets . A synset consists of a set of synonymous words paired with\na de\ufb01nition and linked to words with more general or more speci\ufb01c meanings. For\nexample, table has various meanings:\ntable.n.", "mimetype": "text/plain", "start_char_idx": 576, "end_char_idx": 1052, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5057ed14-d0eb-41de-858f-e5768958861f": {"__data__": {"id_": "5057ed14-d0eb-41de-858f-e5768958861f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a5908b7c-b7b3-40d4-9f0d-053c90b7bbb8", "node_type": "1", "metadata": {}, "hash": "55792c629b6395a81caf16439a9039b594fe5b082a79c95f4d830ade8f210265", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c853d148-7048-4b17-a508-9043e42101ce", "node_type": "1", "metadata": {}, "hash": "b34d4428acc597246c8b804cc231e2d1f3d01ef268caf55ecb429d6c241d64bf", "class_name": "RelatedNodeInfo"}}, "text": "For\nexample, table has various meanings:\ntable.n.01 ['table', 'tabular\\_array'], \"a set of data arranged in\nrows and columns\"\ntable.n.02 ['table'], \"a piece of furniture having a smooth flat top\n37\n\nCO3354 Introduction to natural language processing\nthat is usually supported by one or more vertical legs\"\ntable.n.02 hyponyms: drop-leaf\\_table, coffee\\_table, pool\\_table, altar,\ntable.n.02 hypernyms: furniture\n3.", "mimetype": "text/plain", "start_char_idx": 1003, "end_char_idx": 1417, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "80b38e19-be36-4e0a-8243-8105347245c9": {"__data__": {"id_": "80b38e19-be36-4e0a-8243-8105347245c9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5057ed14-d0eb-41de-858f-e5768958861f", "node_type": "1", "metadata": {}, "hash": "8b1085846c7d5cd270bcd312baafa83825080a047a5f5514a98bd35f6db8f961", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c853d148-7048-4b17-a508-9043e42101ce", "node_type": "1", "metadata": {}, "hash": "b34d4428acc597246c8b804cc231e2d1f3d01ef268caf55ecb429d6c241d64bf", "class_name": "RelatedNodeInfo"}}, "text": "pool\\_table, altar,\ntable.n.02 hypernyms: furniture\n3.6 Some basic corpus analysis\nThis chapter describes some relatively simple techniques, extracting various kinds of\ndata in suitable formats for human interpretation of the results. Chapters 4 and 5 of\nthe subject guide will look at ways the analysis and interpretation itself can be\nautomated to varying degrees.\nConcordancing involves locating every instance of a word or phrase within a text or\ncorpus and presenting it in context, usually a \ufb01xed number of words before and\nafter each occurrence.", "mimetype": "text/plain", "start_char_idx": 1363, "end_char_idx": 1915, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d3f2be16-a68d-4617-8e7a-174fb368e777": {"__data__": {"id_": "d3f2be16-a68d-4617-8e7a-174fb368e777", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "80b38e19-be36-4e0a-8243-8105347245c9", "node_type": "1", "metadata": {}, "hash": "3392b02f1bd0016f2ade6b2046725d9170ece8468d3a8dec769a4c489a771881", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c853d148-7048-4b17-a508-9043e42101ce", "node_type": "1", "metadata": {}, "hash": "b34d4428acc597246c8b804cc231e2d1f3d01ef268caf55ecb429d6c241d64bf", "class_name": "RelatedNodeInfo"}}, "text": "Collocations are pairs of sequences of words that occur together in a text more\nfrequently than would be expected by chance, and so provide a rough indication\nof the content or style of a document.\nConditional frequency distributions support an elementary form of statistical\nanalysis.", "mimetype": "text/plain", "start_char_idx": 1916, "end_char_idx": 2201, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3274847c-28ec-4afc-bd53-40e62cfac0ae": {"__data__": {"id_": "3274847c-28ec-4afc-bd53-40e62cfac0ae", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6fa6ed9a-547b-4f00-8761-032f734588ab", "node_type": "1", "metadata": {}, "hash": "e41696f06b75e861834d7334242c73a810758c2e5d233b89c6ebe7e6c2a7aca9", "class_name": "RelatedNodeInfo"}}, "text": "Conditional frequency distributions support an elementary form of statistical\nanalysis. A frequency distribution counts observable events and a conditional\nfrequency distribution pairs each event with a condition. Some sample\napplications are:\nComparing the use of particular words in different genres.\nComparing word lengths in different languages.\n3.6.1 Frequency distributions\nThe following worked example displays some rudimentary stylistic analysis by\nranking the POS tags in a corpus according to frequency.\nCalculating tag frequency\n1. Import the Brown corpus.\n2. List the different categories within the corpus.\n3.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 622, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8ccf9d8c-7152-472f-a070-2786ee0d6260": {"__data__": {"id_": "8ccf9d8c-7152-472f-a070-2786ee0d6260", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3274847c-28ec-4afc-bd53-40e62cfac0ae", "node_type": "1", "metadata": {}, "hash": "3478711841ce96c323fa453c52e164f4c8a99230dc1dd745feebbdc915cdd7bb", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6fa6ed9a-547b-4f00-8761-032f734588ab", "node_type": "1", "metadata": {}, "hash": "e41696f06b75e861834d7334242c73a810758c2e5d233b89c6ebe7e6c2a7aca9", "class_name": "RelatedNodeInfo"}}, "text": "Import the Brown corpus.\n2. List the different categories within the corpus.\n3. Count the number of sentences in the science \ufb01ction category.\n4. Extract all the word tokens from the science \ufb01ction category, paired with their\ntags, and store them in the variable bsf. Note that the simpli\ufb01ed tagset is\nselected.\n5. Calculate a frequency distribution of the tags: this gives an ordered list of the\ntags paired with their frequency in the variable sftagfd. (Only the 12 most\nfrequent are shown.)\n>>> from nltk.", "mimetype": "text/plain", "start_char_idx": 543, "end_char_idx": 1050, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f28753c9-9dfd-4076-b4c9-84e177465b6c": {"__data__": {"id_": "f28753c9-9dfd-4076-b4c9-84e177465b6c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8ccf9d8c-7152-472f-a070-2786ee0d6260", "node_type": "1", "metadata": {}, "hash": "25c14a565ef39efa84ea8b81ec776acb8df86168014cad3d240a23725a2201ce", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6fa6ed9a-547b-4f00-8761-032f734588ab", "node_type": "1", "metadata": {}, "hash": "e41696f06b75e861834d7334242c73a810758c2e5d233b89c6ebe7e6c2a7aca9", "class_name": "RelatedNodeInfo"}}, "text": "(Only the 12 most\nfrequent are shown.)\n>>> from nltk.corpus import brown\n>>> brown.categories()\n['adventure', 'belles_lettres', 'editorial', 'fiction',\n'government', 'hobbies', 'humor', 'learned', 'lore',\n38\n\nSome basic corpus analysis\n'mystery', 'news', 'religion', 'reviews', 'romance', 'science_fiction']\n>>> sf_sents = brown.sents(categories = 'science_fiction')\n>>> len(sf_sents)\n948\n>>> bsf = brown.", "mimetype": "text/plain", "start_char_idx": 997, "end_char_idx": 1402, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b8a2f7c3-4229-46d1-8af9-fec3899e081a": {"__data__": {"id_": "b8a2f7c3-4229-46d1-8af9-fec3899e081a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f28753c9-9dfd-4076-b4c9-84e177465b6c", "node_type": "1", "metadata": {}, "hash": "fd055d6fd5b107d41f0dbb4bc2f6629133ad38149ca962a44d4f740a2c2c317f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6fa6ed9a-547b-4f00-8761-032f734588ab", "node_type": "1", "metadata": {}, "hash": "e41696f06b75e861834d7334242c73a810758c2e5d233b89c6ebe7e6c2a7aca9", "class_name": "RelatedNodeInfo"}}, "text": "tagged_words(categories = 'science_fiction',\nsimplify_tags=True)\n>>> sf_tag_fd = nltk.FreqDist(tag for (word,tag) in bsf)\n>>> sf_tag_fd.keys()\n['N', 'V', 'DET', 'PRO', 'P', '.', 'ADJ', ',', 'CNJ', 'ADV', 'VD', 'NP', ]\n>>> sf_tag_fd.tabulate()\nN V DET PRO P .", "mimetype": "text/plain", "start_char_idx": 1402, "end_char_idx": 1660, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d457a4c1-1502-4be4-a8c8-27a730346fb7": {"__data__": {"id_": "d457a4c1-1502-4be4-a8c8-27a730346fb7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b8a2f7c3-4229-46d1-8af9-fec3899e081a", "node_type": "1", "metadata": {}, "hash": "5c91bc5f78266282356f6cda59e72037c5d458ac4572c767f337a778a6ded0f0", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6fa6ed9a-547b-4f00-8761-032f734588ab", "node_type": "1", "metadata": {}, "hash": "e41696f06b75e861834d7334242c73a810758c2e5d233b89c6ebe7e6c2a7aca9", "class_name": "RelatedNodeInfo"}}, "text": "ADJ , CNJ ADV VD NP\n2232 1473 1345 1268 1182 1078 793 791 685 644 531 467\nLearning activity\n1. Repeat the above process for other categories such as romance, news and religion. How do the\nfrequency distributions and sentence counts enable you to compare the literary styles of these\ngenres? Explain any assumptions you make.\n2.", "mimetype": "text/plain", "start_char_idx": 1661, "end_char_idx": 1988, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5479d43b-2951-4481-abde-c6ff20ef385d": {"__data__": {"id_": "5479d43b-2951-4481-abde-c6ff20ef385d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "eedf7998-053c-4daa-ab05-742ed7045c8a", "node_type": "1", "metadata": {}, "hash": "b2018b5b3793c8eff8c4bbe9258d41541cfcb80b10d4b0c32deca963c823c2cc", "class_name": "RelatedNodeInfo"}}, "text": "Explain any assumptions you make.\n2. Having read through Bird et al. (2009, section 2.1), with particular attention to Table 2-3 on page 50,\nanswer the following questions:\n(a) Summarise the README \ufb01le from the Reuters corpus.\n(b) Create a variable soysents containing all sentences from reports concerning soy products.\n(c) Display the \ufb01rst ten sentences in soysents .", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 369, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3a0c6bc6-3737-4f0b-9f59-71bfae5f8f47": {"__data__": {"id_": "3a0c6bc6-3737-4f0b-9f59-71bfae5f8f47", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "60fee7ad-cef8-4586-a350-1acd16bd2450", "node_type": "1", "metadata": {}, "hash": "c20aeafce45fb196a6af0dcde11323023bc97dc46757dd7370f82d8b8a6be74d", "class_name": "RelatedNodeInfo"}}, "text": "(c) Display the \ufb01rst ten sentences in soysents .\n(d) Create a variable metalwords containing all words from reports concerning metals.\n(e) What are the most frequently mentioned metals in this collection? Caution: why might this result\nbe less than 100 per cent reliable?\n3.6.2 DIY corpus: some worked examples\nNLTK\u2019s plain text corpus reader can be used to build a \u2018corpus\u2019 from a collection of\ntext \ufb01les.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 406, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d6bfa225-16fd-47e6-a137-ce3ea552f8cf": {"__data__": {"id_": "d6bfa225-16fd-47e6-a137-ce3ea552f8cf", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3a0c6bc6-3737-4f0b-9f59-71bfae5f8f47", "node_type": "1", "metadata": {}, "hash": "dcb6dc0813de0d7d9b22e4acb7363db218dda82aab89e4a7d72f690a876b24c1", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "60fee7ad-cef8-4586-a350-1acd16bd2450", "node_type": "1", "metadata": {}, "hash": "c20aeafce45fb196a6af0dcde11323023bc97dc46757dd7370f82d8b8a6be74d", "class_name": "RelatedNodeInfo"}}, "text": "The resulting corpus will be formatted for access as raw text, lists of words\nor lists of sentences and can be re-formatted for other functions such as\nconcordancing and \ufb01nding collocations.\nThe \ufb01rst example involves a one-text \u2018corpus\u2019 of the recent report from the UK\nEquality and Human Rights Commission: How fair is Britain ?", "mimetype": "text/plain", "start_char_idx": 407, "end_char_idx": 736, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "da59beb8-d60d-4a24-8995-a626f17739dc": {"__data__": {"id_": "da59beb8-d60d-4a24-8995-a626f17739dc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d6bfa225-16fd-47e6-a137-ce3ea552f8cf", "node_type": "1", "metadata": {}, "hash": "0ee07c5877d7ec3977f0b81cfebe0a388a8290e6235a9dd8e883b2ba0cac033c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "60fee7ad-cef8-4586-a350-1acd16bd2450", "node_type": "1", "metadata": {}, "hash": "c20aeafce45fb196a6af0dcde11323023bc97dc46757dd7370f82d8b8a6be74d", "class_name": "RelatedNodeInfo"}}, "text": "Step 1 Download the report as a PDF from http://www.equalityhumanrights.com\nStep 2 Manually extract text using Adobe Acrobat or another PDF reader and save\nas a .txt \ufb01le\nStep 3 Point the corpus reader to the directory where you have saved the text \ufb01le.\n>>> import nltk\n>>> from nltk.corpus import PlaintextCorpusReader\n>>> corpus_root = 'C:\\NLP-stuff\\Corpora'\n>>> mycorpus = PlaintextCorpusReader(corpus_root,'.", "mimetype": "text/plain", "start_char_idx": 737, "end_char_idx": 1148, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9bbd732e-c81a-44f3-8c7d-a72e71e26fc9": {"__data__": {"id_": "9bbd732e-c81a-44f3-8c7d-a72e71e26fc9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "da59beb8-d60d-4a24-8995-a626f17739dc", "node_type": "1", "metadata": {}, "hash": "966e00885310e59de51fd6422ba8f6bba7d17fc509d3c6fd51a07b615142ce54", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "60fee7ad-cef8-4586-a350-1acd16bd2450", "node_type": "1", "metadata": {}, "hash": "c20aeafce45fb196a6af0dcde11323023bc97dc46757dd7370f82d8b8a6be74d", "class_name": "RelatedNodeInfo"}}, "text": "*')\n39\n\nCO3354 Introduction to natural language processing\nWe can now use the raw,words andsents methods to display the content in\ndifferent formats:\n>>> mycorpus.fileids()\n['howfair.txt']\n>>> mycorpus.words('howfair.txt')\n['Equality', 'and', 'Human', 'Rights', 'Commission', ]\n>>> hf_raw = mycorpus.raw('howfair.", "mimetype": "text/plain", "start_char_idx": 1148, "end_char_idx": 1461, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d6916eb3-7fee-4541-b40f-36e0fb62fc52": {"__data__": {"id_": "d6916eb3-7fee-4541-b40f-36e0fb62fc52", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9bbd732e-c81a-44f3-8c7d-a72e71e26fc9", "node_type": "1", "metadata": {}, "hash": "8c188d5c670b4fa6c5f551496ad3361778175accc2aeac124c7b574b45fcb300", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "60fee7ad-cef8-4586-a350-1acd16bd2450", "node_type": "1", "metadata": {}, "hash": "c20aeafce45fb196a6af0dcde11323023bc97dc46757dd7370f82d8b8a6be74d", "class_name": "RelatedNodeInfo"}}, "text": "'Rights', 'Commission', ]\n>>> hf_raw = mycorpus.raw('howfair.txt')\n>>> hf_raw[:100]\n'Equality and Human Rights Commission\\r\\nTriennial\nReview 2010\\r\\nExecutive Summary\\r\\nHow fair\\r\\nis Britain'\n>>> mycorpus.sents('howfair.txt')\n[['Equality', 'and', 'Human', 'Rights', 'Commission', 'Triennial',\n'Review', '2010', 'Executive', 'Summary', 'How', 'fair', 'is',\n'Britain', '?", "mimetype": "text/plain", "start_char_idx": 1400, "end_char_idx": 1772, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a6aafa4b-e41b-4d58-9035-ceec79ab4332": {"__data__": {"id_": "a6aafa4b-e41b-4d58-9035-ceec79ab4332", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d6916eb3-7fee-4541-b40f-36e0fb62fc52", "node_type": "1", "metadata": {}, "hash": "037aeed76c0ce8f11c7b0370bf1da12a4015b0fda01692b151712a04bd43a7df", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "60fee7ad-cef8-4586-a350-1acd16bd2450", "node_type": "1", "metadata": {}, "hash": "c20aeafce45fb196a6af0dcde11323023bc97dc46757dd7370f82d8b8a6be74d", "class_name": "RelatedNodeInfo"}}, "text": "'Executive', 'Summary', 'How', 'fair', 'is',\n'Britain', '?'], ...\nConcordancing and collocations\nTheText method formats the content in a way which can be accessed by the\nconcordance andcollocation methods.", "mimetype": "text/plain", "start_char_idx": 1714, "end_char_idx": 1919, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4b9d9df8-7304-4e0b-ba3b-57938b86a92d": {"__data__": {"id_": "4b9d9df8-7304-4e0b-ba3b-57938b86a92d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "2931e386-4f81-41fb-91ee-171dee4def7d", "node_type": "1", "metadata": {}, "hash": "9a8c0456d3b3624a69e33a2232b87c7120620c96639eb2d13b68fba1aa3d71e2", "class_name": "RelatedNodeInfo"}}, "text": "Note that concordancing will always\nreturn \ufb01xed-length strings which include your target text as a substring, and so may\nbe cut off in the middle of a word.\n>>> fair=nltk.Text(mycorpus.words('howfair.txt'))\n>>> fair.concordance('equal')\nBuilding index.\nDisplaying 3 of 3 matches:\nhas narrowed considerably since the equal Pay Act 1970 came into force in 1975\nsonal circumstances ,", "mimetype": "text/plain", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e12aecfb-3cc6-4984-b3c4-295abf7d1569": {"__data__": {"id_": "e12aecfb-3cc6-4984-b3c4-295abf7d1569", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4b9d9df8-7304-4e0b-ba3b-57938b86a92d", "node_type": "1", "metadata": {}, "hash": "90ff65e5d55e7d318507102c995670f7c62235b00e38ab77d135ffd8c16a1b96", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "2931e386-4f81-41fb-91ee-171dee4def7d", "node_type": "1", "metadata": {}, "hash": "9a8c0456d3b3624a69e33a2232b87c7120620c96639eb2d13b68fba1aa3d71e2", "class_name": "RelatedNodeInfo"}}, "text": "should have an equal opportunity to have a say in decisio\nthat every individual should have an equal chance to make the most of their tal\n>>> fair.collocations()\nBuilding collocations list\nHuman Rights; Rights Commission; Significant findings; Headline data;\nExecutive Summary; less likely; ethnic minority; life expectancy;\n0845 604; domestic violence; hate crime; labour market; disabled people;\nmental health; Black Caribbean; different groups; religiously motivated;\nsexual assault; minority groups; formal childcare\nConditional frequency distribution\nRecall that a frequency distribution is a set of ordered pairs <event;", "mimetype": "text/plain", "start_char_idx": 383, "end_char_idx": 1009, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "79f34316-2bb1-45c5-9e2a-5b3f53d79745": {"__data__": {"id_": "79f34316-2bb1-45c5-9e2a-5b3f53d79745", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e12aecfb-3cc6-4984-b3c4-295abf7d1569", "node_type": "1", "metadata": {}, "hash": "a2c15c5ab1ed059e11d6c839a55b56419875a0dc6d2e89e818361f62d631449b", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "2931e386-4f81-41fb-91ee-171dee4def7d", "node_type": "1", "metadata": {}, "hash": "9a8c0456d3b3624a69e33a2232b87c7120620c96639eb2d13b68fba1aa3d71e2", "class_name": "RelatedNodeInfo"}}, "text": "count>\nwhere count is the number of times event occurs. In our context event is a word-type\nandcount is the number of tokens of that type in a text. A conditional frequency\ndistribution is a collection of frequency distributions, each one for a different\ncondition.\nFor this example we add a second document to the corpus, extracted from a PDF\n\u2018Guide to data protection\u2019.\nStep 1 Create a single variable text word consisting of pairs of each word-token\nwith the \ufb01leid of the document it occurs in.", "mimetype": "text/plain", "start_char_idx": 1010, "end_char_idx": 1507, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2ba7f64a-93fc-4d1f-bcf8-0ae65be8dd58": {"__data__": {"id_": "2ba7f64a-93fc-4d1f-bcf8-0ae65be8dd58", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "79f34316-2bb1-45c5-9e2a-5b3f53d79745", "node_type": "1", "metadata": {}, "hash": "51277fe96735ad60d39b94773c8d775dbfdc895e51423595e4667fe61a73585f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "2931e386-4f81-41fb-91ee-171dee4def7d", "node_type": "1", "metadata": {}, "hash": "9a8c0456d3b3624a69e33a2232b87c7120620c96639eb2d13b68fba1aa3d71e2", "class_name": "RelatedNodeInfo"}}, "text": "40\n\nSummary\nStep 2 Create a conditional frequency distribution, which will tell you the frequency\nof each word in both texts.\nStep 3 Pick a sample of words which are likely to occur in both documents, and\ntabulate their comparative frequency.", "mimetype": "text/plain", "start_char_idx": 1508, "end_char_idx": 1750, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bc9614c7-a204-4372-8074-e0feb1b95a3e": {"__data__": {"id_": "bc9614c7-a204-4372-8074-e0feb1b95a3e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e415415a-706a-43a6-a9fe-ce2113ff0e6b", "node_type": "1", "metadata": {}, "hash": "7747126a1130e798b89737f576afe01f0f30d56072bbdfe011064081dbcdc04b", "class_name": "RelatedNodeInfo"}}, "text": ">>> text_word = [(text,word) for text in ['howfair.txt','guide.txt']\nfor word in mycorpus.words(text)]\n>>> text_word[:10]\n[('howfair.txt', 'Equality'), ('howfair.txt', 'and'),\n('howfair.txt', 'Human'),('howfair.txt', 'Rights'),\n('howfair.txt', 'Commission'), ('howfair.txt', 'Triennial'),\n('howfair.txt', 'Review'), ('howfair.txt', '2010'),\n('howfair.txt', 'Executive'),", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 370, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9a0867e6-6abe-49bd-ab70-d90847bba751": {"__data__": {"id_": "9a0867e6-6abe-49bd-ab70-d90847bba751", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bc9614c7-a204-4372-8074-e0feb1b95a3e", "node_type": "1", "metadata": {}, "hash": "693ad7ba16a5c339455c4fe8c0cba308dba61e13e09874c8a9d2c8f86066e599", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e415415a-706a-43a6-a9fe-ce2113ff0e6b", "node_type": "1", "metadata": {}, "hash": "7747126a1130e798b89737f576afe01f0f30d56072bbdfe011064081dbcdc04b", "class_name": "RelatedNodeInfo"}}, "text": "('howfair.txt', '2010'),\n('howfair.txt', 'Executive'),\n('howfair.txt', 'Summary')]\n>>> cfd = nltk.ConditionalFreqDist(text_word)\n>>> cfd\n<ConditionalFreqDist with 2 conditions>\n>>> cfd.conditions()\n['guide.txt', 'howfair.txt']\n>>> cfd['howfair.txt']\n<FreqDist with 16391 outcomes>\n>>> cfd['guide.txt']\n<FreqDist with 47064 outcomes>\nTesting the CFD\n>>> cfd['guide.", "mimetype": "text/plain", "start_char_idx": 316, "end_char_idx": 680, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "62adb358-3073-421f-bd81-7da1f7525520": {"__data__": {"id_": "62adb358-3073-421f-bd81-7da1f7525520", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9a0867e6-6abe-49bd-ab70-d90847bba751", "node_type": "1", "metadata": {}, "hash": "12a4ba99d55e3b1d9cfdc63bb02d10d2ce1d9ba922c789fb50656005e4fc3d80", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e415415a-706a-43a6-a9fe-ce2113ff0e6b", "node_type": "1", "metadata": {}, "hash": "7747126a1130e798b89737f576afe01f0f30d56072bbdfe011064081dbcdc04b", "class_name": "RelatedNodeInfo"}}, "text": "txt']['fair']\n31\n>>> cfd['howfair.txt']['fair']\n30\n>>> keywords = ['fair','police','crime','office','equal','privacy']\n>>>>cfd.tabulate(conditions=['howfair.txt','guide.txt'],\nsamples=keywords)\nfair police crime office equal privacy\nhowfair.txt 30 15 29 4 2 0\nguide.txt 31 16 17 2 0 26\nLearning activity\nFind some suitable electronic documents and follow the above techniques to construct a \u2018mini-corpus\u2019.", "mimetype": "text/plain", "start_char_idx": 680, "end_char_idx": 1085, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "089cf8b8-8d6a-4340-a187-778043d3d95b": {"__data__": {"id_": "089cf8b8-8d6a-4340-a187-778043d3d95b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "62adb358-3073-421f-bd81-7da1f7525520", "node_type": "1", "metadata": {}, "hash": "cfe50b8229349d1365293e8d75d157fcd89acdb74bea07b4d50e4104985aa55b", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e415415a-706a-43a6-a9fe-ce2113ff0e6b", "node_type": "1", "metadata": {}, "hash": "7747126a1130e798b89737f576afe01f0f30d56072bbdfe011064081dbcdc04b", "class_name": "RelatedNodeInfo"}}, "text": "The\ndocuments in these examples were sourced from UK government websites: you may \ufb01nd similar\ndocuments on the website of your own country\u2019s government, or of transnational organisations like the\nEuropean Union or the United Nations. Think of some terms which are likely to occur in several of these\ndocuments and compare them using a conditional frequency distribution. If you can \ufb01nd a lengthy report\nwhich is issued along with a shorter summary, it is an interesting exercise to pick some key terms and see if\ntheir comparative frequency is the same or similar in the original document and the summary.", "mimetype": "text/plain", "start_char_idx": 1086, "end_char_idx": 1691, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "48353f9c-d44d-41f0-8e9c-435f0b6c902c": {"__data__": {"id_": "48353f9c-d44d-41f0-8e9c-435f0b6c902c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "089cf8b8-8d6a-4340-a187-778043d3d95b", "node_type": "1", "metadata": {}, "hash": "9cac662d21bcfe95a2cf2931234a9eee0dec18adaef189ec1d25b62ffd7afb49", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e415415a-706a-43a6-a9fe-ce2113ff0e6b", "node_type": "1", "metadata": {}, "hash": "7747126a1130e798b89737f576afe01f0f30d56072bbdfe011064081dbcdc04b", "class_name": "RelatedNodeInfo"}}, "text": "3.7 Summary\n1. A corpus is a collection of linguistic data which was not originally produced for\nthe purposes of linguistic analysis. Properly speaking it should be constructed so\nas to be balanced and representative.", "mimetype": "text/plain", "start_char_idx": 1692, "end_char_idx": 1909, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5cf5534b-c344-4867-9981-625c04333a39": {"__data__": {"id_": "5cf5534b-c344-4867-9981-625c04333a39", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "13d4710c-a3b5-4ad4-9568-3ea329cf181d", "node_type": "1", "metadata": {}, "hash": "002867e7573102046aed83aace87a8e80895fff1d4a2f68ae88418c323d42405", "class_name": "RelatedNodeInfo"}}, "text": "Properly speaking it should be constructed so\nas to be balanced and representative. If a corpus includes any kind of\n41\n\nCO3354 Introduction to natural language processing\nannotation, it is good practice to use multiple annotators for at least a sample of\nthe corpus and report the level of inter-annotator agreement that was\nachieved.\n2. Some uses of corpora include:\nLexicography (compiling dictionaries).\nCompiling grammars for education and reference purposes.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 464, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2ebeeff5-8495-4db2-82bf-322ec2127124": {"__data__": {"id_": "2ebeeff5-8495-4db2-82bf-322ec2127124", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5cf5534b-c344-4867-9981-625c04333a39", "node_type": "1", "metadata": {}, "hash": "5bae5f40e6f17ba7620816b97e5b51a477ea94a42c4e14d89621c3859319ddd1", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "13d4710c-a3b5-4ad4-9568-3ea329cf181d", "node_type": "1", "metadata": {}, "hash": "002867e7573102046aed83aace87a8e80895fff1d4a2f68ae88418c323d42405", "class_name": "RelatedNodeInfo"}}, "text": "Compiling grammars for education and reference purposes.\nStylistics: developing techniques to identify the author or genre of a\ndocument; investigating the effect on language use of different channels\nsuch as email, chat, face-to-face conversation, telephone calls and\nhand-written letters.\nTraining and evaluation in linguistic research, using machine learning\ntechniques.\n3. This chapter includes brief descriptions of several well-known and widely-used\ncorpora such as the Brown corpus, the BNC and the Penn Treebank.\n4.", "mimetype": "text/plain", "start_char_idx": 408, "end_char_idx": 931, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7957cf29-c73f-448d-b81a-8194a1d25fa8": {"__data__": {"id_": "7957cf29-c73f-448d-b81a-8194a1d25fa8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2ebeeff5-8495-4db2-82bf-322ec2127124", "node_type": "1", "metadata": {}, "hash": "6a9b3e105671e5d314cc0968cb465932fe3ae108312f313d428f2d6529b11ed1", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "13d4710c-a3b5-4ad4-9568-3ea329cf181d", "node_type": "1", "metadata": {}, "hash": "002867e7573102046aed83aace87a8e80895fff1d4a2f68ae88418c323d42405", "class_name": "RelatedNodeInfo"}}, "text": "4. Students on this course can access a variety of corpora through online interfaces\nor by using corpus tools provided with the NLTK.\n5. Some simple techniques for analysing corpora include concordancing,\ncollocations and (conditional) frequency distributions. None of these techniques\ninvolve automated linguistic analysis: the interpretation of the outputs is down\nto the analyst.\n3.8 Sample examination question\na) Explain what is meant by the following types of corpus, and describe an example\nin each category that you have encountered during this course:\nisolated\ncategorised\noverlapping\ntemporal.", "mimetype": "text/plain", "start_char_idx": 929, "end_char_idx": 1532, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b125293c-a311-476d-9887-60187fe62823": {"__data__": {"id_": "b125293c-a311-476d-9887-60187fe62823", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7957cf29-c73f-448d-b81a-8194a1d25fa8", "node_type": "1", "metadata": {}, "hash": "9c2d5ae413d046e6d3268d300c51974e6ee131adc9aba79c6a1335e63268ad61", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "13d4710c-a3b5-4ad4-9568-3ea329cf181d", "node_type": "1", "metadata": {}, "hash": "002867e7573102046aed83aace87a8e80895fff1d4a2f68ae88418c323d42405", "class_name": "RelatedNodeInfo"}}, "text": "b) What applications would a tagged andparsed corpus be suitable for? What are\nsome advantages and disadvantages of using an automated tagger to build such a\ncorpus?\nc) Suppose the following lists show the number of sentences and the most commonly\noccurring part-of-speech tags in three different categories of text in a corpus, with\ntheir frequency of occurrence in brackets. What can you say about the styles of these\ndocuments from studying these results? Discuss any assumptions you make.", "mimetype": "text/plain", "start_char_idx": 1533, "end_char_idx": 2025, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3f03f971-d411-4b94-9723-de077acda599": {"__data__": {"id_": "3f03f971-d411-4b94-9723-de077acda599", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b125293c-a311-476d-9887-60187fe62823", "node_type": "1", "metadata": {}, "hash": "d3e00961239388e4b51803ba80a779a18ecf41b2246f17bbba26b98a9ee0c841", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "13d4710c-a3b5-4ad4-9568-3ea329cf181d", "node_type": "1", "metadata": {}, "hash": "002867e7573102046aed83aace87a8e80895fff1d4a2f68ae88418c323d42405", "class_name": "RelatedNodeInfo"}}, "text": "Discuss any assumptions you make.\nCategory A (4623 sentences) N (22236) P (10845) DET (10648) NP (8336) V\n(7346) ADJ (5435) \u2018,\u2019 (5188) \u2018.\u2019 (4472) CNJ (4227) PRO (3408) ADV (2770) VD\n(2531) . . .", "mimetype": "text/plain", "start_char_idx": 1992, "end_char_idx": 2186, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "baf81663-2302-4a01-b9ba-258b8e310aef": {"__data__": {"id_": "baf81663-2302-4a01-b9ba-258b8e310aef", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4b7cbe1b-3050-473f-846e-610ca9efa68b", "node_type": "1", "metadata": {}, "hash": "8655a2ef1ff63db11e3626208b9dc4d858e3d04aa6ea7eabdf6a0d2b388e37bd", "class_name": "RelatedNodeInfo"}}, "text": ". .\nCategory B (948 sentences) N (2232) V (1473) DET (1345) PRO (1268) P (1182)\n\u2018.\u2019 (1078) ADJ (793) \u2018,\u2019 (791) CNJ (685) ADV (644) VD (531) NP (467) . . .", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 154, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "efd95743-4377-4a43-be40-6cd4a74d4289": {"__data__": {"id_": "efd95743-4377-4a43-be40-6cd4a74d4289", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "baf81663-2302-4a01-b9ba-258b8e310aef", "node_type": "1", "metadata": {}, "hash": "b663815fe83d38788b2bad3f2e295e1ae797a0cd949b419e2dbb2a75cb28cfb4", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4b7cbe1b-3050-473f-846e-610ca9efa68b", "node_type": "1", "metadata": {}, "hash": "8655a2ef1ff63db11e3626208b9dc4d858e3d04aa6ea7eabdf6a0d2b388e37bd", "class_name": "RelatedNodeInfo"}}, "text": ". .\nCategory C (1716 sentences) N (7304) P (4364) DET (4239) V (3863) ADJ (2620)\nCNJ (2324) PRO (2243) \u2018,\u2019 (1913) \u2018.\u2019 (1892) ADV (1485) NP (1224) VN (952)\n. . .\n42\n\nAppendix C\nAnswers to selected activities\nThis section includes model solutions to some of the exercises and activities where\nappropriate.", "mimetype": "text/plain", "start_char_idx": 151, "end_char_idx": 454, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "512a2ce5-1d82-4fcc-911c-772c9a384a42": {"__data__": {"id_": "512a2ce5-1d82-4fcc-911c-772c9a384a42", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "efd95743-4377-4a43-be40-6cd4a74d4289", "node_type": "1", "metadata": {}, "hash": "4bb8ddcebee157763890de4e2805d6c145b76792d7a76e5cdc88e94d4d25b85e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4b7cbe1b-3050-473f-846e-610ca9efa68b", "node_type": "1", "metadata": {}, "hash": "8655a2ef1ff63db11e3626208b9dc4d858e3d04aa6ea7eabdf6a0d2b388e37bd", "class_name": "RelatedNodeInfo"}}, "text": "In other cases there is no \u2018correct\u2019 answer and the point of the activity is\nto stimulate you to engage in independent self-directed learning.", "mimetype": "text/plain", "start_char_idx": 455, "end_char_idx": 597, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "90a81d39-71c8-4b66-8eec-78e356a2dcda": {"__data__": {"id_": "90a81d39-71c8-4b66-8eec-78e356a2dcda", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0a61637e-320a-4481-bfdd-042145a23dd3", "node_type": "1", "metadata": {}, "hash": "1e2443c1ed5466c2086c9796725b6e0b5c48145cbe91787fc69d271176f420e1", "class_name": "RelatedNodeInfo"}}, "text": "Chapter 2: Introducing NLP: patterns and structure in natural\nlanguage\nIdentify parts of speech, page 14\nJack (Proper Noun) and(conjunction) Jill(Proper Noun) went (verb) up\n(preposition) the(determiner) hill(noun) .\nThe(determiner) owl(noun) and(conjunction) the(determiner) pussycat (noun)\nwent (verb) to(preposition) sea(noun) .\nOperation of a \ufb01nite-state machine, page 17\n1. John swam.\n2.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 392, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c89328be-a227-4ad6-89c6-702be9e8c7a4": {"__data__": {"id_": "c89328be-a227-4ad6-89c6-702be9e8c7a4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "90a81d39-71c8-4b66-8eec-78e356a2dcda", "node_type": "1", "metadata": {}, "hash": "3bed9f50a78e649946b236092c824e40d92a0da7cd7c7abde1c4d054eb13000e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0a61637e-320a-4481-bfdd-042145a23dd3", "node_type": "1", "metadata": {}, "hash": "1e2443c1ed5466c2086c9796725b6e0b5c48145cbe91787fc69d271176f420e1", "class_name": "RelatedNodeInfo"}}, "text": "John swam.\n2. (a) John and Mary walked on the hill.\n(b) The cat sat on the mat and slept.\n(c) John or a \ufb01sh walked on a hill and barked.\n(d) . . .\nCoding regular expressions, page 19\n1. a(aa)*(bb)*\n2.", "mimetype": "text/plain", "start_char_idx": 379, "end_char_idx": 579, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8a3350cc-cf7a-4160-9acc-41f1eaed15eb": {"__data__": {"id_": "8a3350cc-cf7a-4160-9acc-41f1eaed15eb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c89328be-a227-4ad6-89c6-702be9e8c7a4", "node_type": "1", "metadata": {}, "hash": "0c339f5ff419420a24d4adb149105a3deaf00df285574a29e53efbdc33e5f890", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0a61637e-320a-4481-bfdd-042145a23dd3", "node_type": "1", "metadata": {}, "hash": "1e2443c1ed5466c2086c9796725b6e0b5c48145cbe91787fc69d271176f420e1", "class_name": "RelatedNodeInfo"}}, "text": ".\nCoding regular expressions, page 19\n1. a(aa)*(bb)*\n2. (aaa)j(aab)j(abb)j(bbb)j(bba)j(baa)j(aba)j(bab)\n97\n\nCO3354 Introduction to natural language processing\nRegular grammars, page 21\nS!eitherjif S1\nS!thejajone S2\nS2!happy S2\nS2!", "mimetype": "text/plain", "start_char_idx": 524, "end_char_idx": 754, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "36282591-77e2-4472-8f10-ca5f240a3164": {"__data__": {"id_": "36282591-77e2-4472-8f10-ca5f240a3164", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8a3350cc-cf7a-4160-9acc-41f1eaed15eb", "node_type": "1", "metadata": {}, "hash": "029af59867c0785e8b6dd4ce07aea0af8757c73f12b9c42fc8e12b08e914ed6a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0a61637e-320a-4481-bfdd-042145a23dd3", "node_type": "1", "metadata": {}, "hash": "1e2443c1ed5466c2086c9796725b6e0b5c48145cbe91787fc69d271176f420e1", "class_name": "RelatedNodeInfo"}}, "text": "(boyjgirljdog) eats (\u2018ice cream\u2019 j\u2018hot dogs\u2019jcandy) S3\nS3!orjthen S2\nS3!\u000f\nThis is a slightly idealised rendering of Pinker\u2019s state diagram which appears to have\nno halting state.\nThe problem with this grammar can be clearly seen: the rule S3!orjthen S2 has\nno connection with the rule that introduces either orifand so there is no way to\nensure that the appropriate conjunction is used.", "mimetype": "text/plain", "start_char_idx": 754, "end_char_idx": 1140, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "aca74c6a-d8af-4d20-96e3-31bffda771db": {"__data__": {"id_": "aca74c6a-d8af-4d20-96e3-31bffda771db", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "36282591-77e2-4472-8f10-ca5f240a3164", "node_type": "1", "metadata": {}, "hash": "1a996ad62582dd9fd33cc9703772ff6d2e2e922a21e6bc821ac2f88151dee8c7", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0a61637e-320a-4481-bfdd-042145a23dd3", "node_type": "1", "metadata": {}, "hash": "1e2443c1ed5466c2086c9796725b6e0b5c48145cbe91787fc69d271176f420e1", "class_name": "RelatedNodeInfo"}}, "text": "Past tense forms, page 25\nThe general idea is that rules need to be conditional in order to handle\nnon-standard cases before applying general regularities: so a reasonable rule based\non this data set might be:\nwelcome!welcomed else\n-come!-came\nChapter 3: Getting to grips with natural language data\nOnline corpus queries, page 37\nExamples of incorrect tagging: search on to total/V gives examples like:\n. . . a ticket to total oblivion.\n. . . to describe it to total strangers.\nas well as \u2018correct\u2019 examples like\n.", "mimetype": "text/plain", "start_char_idx": 1141, "end_char_idx": 1655, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c02b0dc0-657d-4bf8-8128-ed701d136328": {"__data__": {"id_": "c02b0dc0-657d-4bf8-8128-ed701d136328", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aca74c6a-d8af-4d20-96e3-31bffda771db", "node_type": "1", "metadata": {}, "hash": "19eb7a0e128f29d68c6c5dffec9c901c02892505f3065337a09af395a329386f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0a61637e-320a-4481-bfdd-042145a23dd3", "node_type": "1", "metadata": {}, "hash": "1e2443c1ed5466c2086c9796725b6e0b5c48145cbe91787fc69d271176f420e1", "class_name": "RelatedNodeInfo"}}, "text": ". to describe it to total strangers.\nas well as \u2018correct\u2019 examples like\n. . .", "mimetype": "text/plain", "start_char_idx": 1582, "end_char_idx": 1659, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7000890f-6c66-4c35-ac05-d1324d36e0b2": {"__data__": {"id_": "7000890f-6c66-4c35-ac05-d1324d36e0b2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e0d641ad-f162-4be8-97fe-7e6e671ec6d9", "node_type": "1", "metadata": {}, "hash": "7fc3b20ccd58d10e00fdb313950d0c30a7afb8c6e12b6127459d4c2074d97971", "class_name": "RelatedNodeInfo"}}, "text": "as well as \u2018correct\u2019 examples like\n. . . thought to total about 1,500 families . . .\n. . . a great opportunity to total and celebrate all the small wins made over the\nyear\n98\n\nAPPENDIX C. ANSWERS TO SELECTED ACTIVITIES\nUsing NLTK tools, page 39\n1.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 247, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b4d9eb1b-bd4b-4a00-a367-7fac4d148c33": {"__data__": {"id_": "b4d9eb1b-bd4b-4a00-a367-7fac4d148c33", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7000890f-6c66-4c35-ac05-d1324d36e0b2", "node_type": "1", "metadata": {}, "hash": "c79bad091baad1ad06519959145b74a214e51949174e7d50029f3a26915dec81", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e0d641ad-f162-4be8-97fe-7e6e671ec6d9", "node_type": "1", "metadata": {}, "hash": "7fc3b20ccd58d10e00fdb313950d0c30a7afb8c6e12b6127459d4c2074d97971", "class_name": "RelatedNodeInfo"}}, "text": "\u2018Stylistic\u2019 analysis\nScience Fiction (948 sentences) N (2232) V (1473) DET (1345) PRO (1268) P\n(1182) \u2018.\u2019 (1078) ADJ (793) \u2018,\u2019 (791) CNJ (685) ADV (644) VD (531) NP (467)\n. . .", "mimetype": "text/plain", "start_char_idx": 248, "end_char_idx": 424, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2d8e528d-85fb-43ea-b81a-050ce0549a3b": {"__data__": {"id_": "2d8e528d-85fb-43ea-b81a-050ce0549a3b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b4d9eb1b-bd4b-4a00-a367-7fac4d148c33", "node_type": "1", "metadata": {}, "hash": "ef0d2a75a3acfc22b7b0280d4061a62549dce2f47748fbbf050f7d1248000a0f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e0d641ad-f162-4be8-97fe-7e6e671ec6d9", "node_type": "1", "metadata": {}, "hash": "7fc3b20ccd58d10e00fdb313950d0c30a7afb8c6e12b6127459d4c2074d97971", "class_name": "RelatedNodeInfo"}}, "text": ". .\nNews (4623 sentences) N (22236) P (10845) DET (10648) NP (8336) V (7346)\nADJ (5435) \u2018,\u2019 (5188) \u2018.\u2019 (4472) CNJ (4227) PRO (3408) ADV (2770) VD (2531)\n. . .", "mimetype": "text/plain", "start_char_idx": 421, "end_char_idx": 579, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9f0e2522-b906-463d-8ee4-d856dec7524c": {"__data__": {"id_": "9f0e2522-b906-463d-8ee4-d856dec7524c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2d8e528d-85fb-43ea-b81a-050ce0549a3b", "node_type": "1", "metadata": {}, "hash": "017e76e8442b8a0622d2371be35a0f3b626bd51139f218859df198d1ea15ba67", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e0d641ad-f162-4be8-97fe-7e6e671ec6d9", "node_type": "1", "metadata": {}, "hash": "7fc3b20ccd58d10e00fdb313950d0c30a7afb8c6e12b6127459d4c2074d97971", "class_name": "RelatedNodeInfo"}}, "text": ". .\nReligion (1716 sentences) N (7304) P (4364) DET (4239) V (3863) ADJ (2620)\nCNJ (2324) PRO (2243) \u2018,\u2019 (1913) \u2018.\u2019 (1892) ADV (1485) NP (1224) VN (952)\n. . .", "mimetype": "text/plain", "start_char_idx": 576, "end_char_idx": 734, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "060ea210-9f25-4d8f-bd2e-970a21df63db": {"__data__": {"id_": "060ea210-9f25-4d8f-bd2e-970a21df63db", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9f0e2522-b906-463d-8ee4-d856dec7524c", "node_type": "1", "metadata": {}, "hash": "7232bf80928ae02e2bea85532ef5f0df2ecc442727829943e29b62c609398861", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e0d641ad-f162-4be8-97fe-7e6e671ec6d9", "node_type": "1", "metadata": {}, "hash": "7fc3b20ccd58d10e00fdb313950d0c30a7afb8c6e12b6127459d4c2074d97971", "class_name": "RelatedNodeInfo"}}, "text": ". .\nSome counts:\nSF: N 2232, PRO 1268, NP 467 ADJ 793\nNE: N 22236, NP 8336, PRO 3408 ADJ 5435\nRE: N 7304, PRO 2243 NP 1224 ADJ 2620\nSF: S 948, COMMA 791, CNJ 685\nNE: COM 5188 S 4623 CNJ 4227\nRE: CNJ 2324 COM 1913 S 1716\nSome tentative conclusions:\n1.", "mimetype": "text/plain", "start_char_idx": 731, "end_char_idx": 981, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "770a95a6-a554-4e3f-a62f-56782fbc559c": {"__data__": {"id_": "770a95a6-a554-4e3f-a62f-56782fbc559c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "060ea210-9f25-4d8f-bd2e-970a21df63db", "node_type": "1", "metadata": {}, "hash": "52013ce9fee24a43891328d81dd5337e4695b8943e91aa7a0089c1b31e80aecd", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e0d641ad-f162-4be8-97fe-7e6e671ec6d9", "node_type": "1", "metadata": {}, "hash": "7fc3b20ccd58d10e00fdb313950d0c30a7afb8c6e12b6127459d4c2074d97971", "class_name": "RelatedNodeInfo"}}, "text": "Reference and description: both SF and RE use pronouns more than proper\nnames; News has more proper names. Hard to interpret without further\nanalysis: if an SF work includes a lot of dialogue for example, it might be more\nnatural for characters to refer to each other as I, we, you and so on rather than\nby name.", "mimetype": "text/plain", "start_char_idx": 982, "end_char_idx": 1294, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2f72524d-9ce1-40fd-a620-10e1463d27ee": {"__data__": {"id_": "2f72524d-9ce1-40fd-a620-10e1463d27ee", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0c5ca7cb-de13-4d4d-add2-c603d231e3e6", "node_type": "1", "metadata": {}, "hash": "481a59a064478bd2dca3c7a64b4b79327d371adc942fe1db80167209f8d3cd37", "class_name": "RelatedNodeInfo"}}, "text": "And news stories tend to be about named individuals.\n2. Syntactic complexity: we cannot be very precise with this data but it looks as if\nthe SF genre has the least syntactic complexity and the RE genre the highest,\njudging from the numbers of commas and conjunctions per sentence. Of course\nwe cannot tell whether these tokens are connecting clauses or other types of\nphrases.\nIn an examination or coursework question, you would get credit for discussing these\nand other characteristics in the light of your impressionistic understanding of the\ntypical styles for these genres.\n2.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 581, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "13863cee-ffc5-4598-a4bb-f9dd160aa6cb": {"__data__": {"id_": "13863cee-ffc5-4598-a4bb-f9dd160aa6cb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2f72524d-9ce1-40fd-a620-10e1463d27ee", "node_type": "1", "metadata": {}, "hash": "1ca5bbf74d70d021258251f54f6165e5b9764724f4def00ba300233749c35abd", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0c5ca7cb-de13-4d4d-add2-c603d231e3e6", "node_type": "1", "metadata": {}, "hash": "481a59a064478bd2dca3c7a64b4b79327d371adc942fe1db80167209f8d3cd37", "class_name": "RelatedNodeInfo"}}, "text": "2. Reuters\nDisplay the README \ufb01le from the Reuters corpus.\nfrom nltk.corpus import reuters\ndesc = reuters.readme()\nprint desc\n99\n\nCO3354 Introduction to natural language processing\nCreate a variable soysents containing all sentences from reports concerning soy\nproducts.\nreuters.categories()\nPick out categories relating to soy:\nsoysents = reuters.sents(categories=['soy-meal', ...])\nDisplay the \ufb01rst ten sentences in soysents .\nprint soysents[:10]\nCreate a variable metalwords containing all words from reports concerning\nmetals.", "mimetype": "text/plain", "start_char_idx": 579, "end_char_idx": 1109, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "653b143f-7277-484a-8f4e-66d24977ad96": {"__data__": {"id_": "653b143f-7277-484a-8f4e-66d24977ad96", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "13863cee-ffc5-4598-a4bb-f9dd160aa6cb", "node_type": "1", "metadata": {}, "hash": "88932f0bcbf1eb64d07e0413606aaed9d0cf2c8a221fe481804221304ae02d12", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0c5ca7cb-de13-4d4d-add2-c603d231e3e6", "node_type": "1", "metadata": {}, "hash": "481a59a064478bd2dca3c7a64b4b79327d371adc942fe1db80167209f8d3cd37", "class_name": "RelatedNodeInfo"}}, "text": "metalwords = reuters.words(categories = ['alum','copper','gold', ...])\n(Note that inspection of texts in the alum category con\ufb01rms that they are about\naluminium.)\nWhat are the most frequently mentioned metals in this collection? Caution: why\nmight this result be less than 100 per cent reliable?\nfrom nltk.book import *\nfreqmetal = FreqDist(metalwords)\nfreqmetalkeys = freqmetal.keys()\nfreqmetal[:100]\nRemember that the contents of a frequency distribution are listed in the order of\ntheir frequency of occurrence.", "mimetype": "text/plain", "start_char_idx": 1110, "end_char_idx": 1624, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "92c3296a-f7db-491c-8584-2728897cfe6d": {"__data__": {"id_": "92c3296a-f7db-491c-8584-2728897cfe6d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "653b143f-7277-484a-8f4e-66d24977ad96", "node_type": "1", "metadata": {}, "hash": "6b38575f158feeb4eb88160135fa51333e41b8bc5515d29ebf02303bfc93a3b8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0c5ca7cb-de13-4d4d-add2-c603d231e3e6", "node_type": "1", "metadata": {}, "hash": "481a59a064478bd2dca3c7a64b4b79327d371adc942fe1db80167209f8d3cd37", "class_name": "RelatedNodeInfo"}}, "text": "By scanning the output you should see that the\n\ufb01rst three metals listed are gold, copper and steel. However caution is in order\nas Reuters is an overlapping corpus, so we may be double-counting some\noccurrences. These metals may also be mentioned under the category\nstrategic-metal , or some reports may mention more than one kind of metal\nand so come under multiple categories.\nChapter 4: Computational tools for text analysis\nComparing stemmers, page 48\nLancaster rules Remove ist/s/e/ing/en/th/ity/ate/al/a/ed/ment/ation .", "mimetype": "text/plain", "start_char_idx": 1625, "end_char_idx": 2150, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "600ecab5-5a16-4890-8eea-c9d46ab95c2e": {"__data__": {"id_": "600ecab5-5a16-4890-8eea-c9d46ab95c2e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "f5bfda18-f49e-4d83-b4de-20046679630a", "node_type": "1", "metadata": {}, "hash": "0d496061e4d07cb93c622b6b1dd850b98f464abad3747c325a2c6f164ad2520f", "class_name": "RelatedNodeInfo"}}, "text": "Replace -ieswith -y.\nSome motivations: reduce verbs to stem form, remove plural af\ufb01x and\nreturn stem in irregular cases ( study ), remove ordinal af\ufb01x -th, remove\naf\ufb01xes that form nominalisations or adjectives: - ment ,-al.\nPorter rules Remove s/ing/ity/e/ate/ed/ment/ational .\nReplace -ywith -i.\nMotivations: similar to Lancaster rules but applied more sparingly.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 364, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "29b76b15-96b4-4dec-a700-71995085daf0": {"__data__": {"id_": "29b76b15-96b4-4dec-a700-71995085daf0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf1fd50-370d-40f3-a584-19ff02fbe919", "node_type": "4", "metadata": {}, "hash": "8b0870ff8a5a215ac1e64da8672c89422cb76942cfb6f6ed24840d040f43d62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "600ecab5-5a16-4890-8eea-c9d46ab95c2e", "node_type": "1", "metadata": {}, "hash": "025cd0c0ceeaf2add0acbe1852c70ba5e65e97f38a57f89b8dc7d91d91dbe00a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "f5bfda18-f49e-4d83-b4de-20046679630a", "node_type": "1", "metadata": {}, "hash": "0d496061e4d07cb93c622b6b1dd850b98f464abad3747c325a2c6f164ad2520f", "class_name": "RelatedNodeInfo"}}, "text": "Errors Lancaster removes -thfrom south as if it were an ordinal and -efrom are\nthough aris not a stem here; not clear why -aremoved from area. Lancaster and\nPorter both treat some proper names as common nouns; for example, by\nremoving the last letter from Lyons andStanhope (both) or by postulating an -i\nstem for names ending in -y(Porter).\n100", "mimetype": "text/plain", "start_char_idx": 365, "end_char_idx": 710, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/metadata": {"ba8c4dd2-ced9-43db-a5e8-29d7d8155828": {"doc_hash": "a8a4a6f2804b7e72904527f36a30fbcbb5316da2ac8d57689ec978a8bd8458c3", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "0129a81e-c476-4369-b096-1bfc7132d5b6": {"doc_hash": "f071dd5d2e514a9b59212b478d620d742c281caa064e269689d6c1d59d34e665", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "ec93a1fd-8a9f-492d-90ec-ec72cc2166f6": {"doc_hash": "2fc023692fd1007fa3108db61c2533e7d248ea367bd52cc4389821e96b6ce22b", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "5b37f427-5b47-40d0-bf79-a020b02747ac": {"doc_hash": "8cbc1cf337b1b009f219f6637bb022eed06259725866a7289740d08b1ac02e35", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "9820bd76-52ad-4d76-a299-ce6aaad2d619": {"doc_hash": "60d4d94ca581554a9ba78c0d25e45f852c5807c0ce78929565b911e97cbe8cef", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "0e3d4afd-db7e-4a20-85fc-3433bed3f402": {"doc_hash": "427b345b53ed8c3b7294bedbfb80591f769256b835da0cd99d330f7a9657d61a", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "6d05c069-f995-4871-a6a5-1996a4a9d8d5": {"doc_hash": "1f8d51e30f7e51c5fcc4bf38d6c24435d70fc304d8dda4100a6e59f82410867b", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "bbffa6d0-1837-4113-b1d6-88c66a801060": {"doc_hash": "f03342bd61794a1ccb4b2c79b84c86066c39273594a19a3d1aebe420c9ce4cf1", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "cacf6547-8f7e-4073-a27c-8f29e73f193a": {"doc_hash": "56601d4d3509279d0de8be501e3c33b7c35f95ee6c1480f5bccda2aba9ca4865", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "82067e65-e783-43d3-bc7a-ce05b4b00d0d": {"doc_hash": "dc7b7a20c600cf458523ac1a4aec075d93445ee9406b5e16690cef21ad29f033", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "1a84b85d-b39c-4ab0-afff-3684dea944b4": {"doc_hash": "344bf28111010b20c930da446ef74d58dbabdbf1e66ac15d3c706f05ed882013", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "b578b6bf-a334-46de-b8b8-f69eb8edcaba": {"doc_hash": "ede7df7436362662e345e6d8f1f1621d2ee2e5834e38ac9c9cb69083c8ab691c", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "a3c5fdd3-166a-4c90-b1a8-c7f4272a0965": {"doc_hash": "998501f923c5cdb2a2cb8340ea1556f92c5240bf878a257b25c2713abdcc0b4e", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "412fa60f-8bac-447e-b1ee-d0fb7494c16c": {"doc_hash": "afebe6d95348ffdc802655920fdcc5af4ff143eec34b3e9135247742c2d09f04", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "894c1340-d0f6-454a-831c-28d42489f639": {"doc_hash": "53988cd050ed1668acdf68fbec4c88739f887cbd7a800b89c6c9caae40856066", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "6524832a-950a-4bb3-abd9-acbe57ba2406": {"doc_hash": "679e099a6cf523a8ad791698c5c6ef3eaefabc0ad74f1da8627b7424dcf0cc38", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "74b8c932-c6b7-41f5-91e0-c6a20d3ef13a": {"doc_hash": "86d33656952aac8d71d62b37b0a595fba516c3cbbf50c65325d6a4d879aba673", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "b9071b6d-a92e-47b0-a73d-a116beafbbe1": {"doc_hash": "903f9e1ed863e828bf9a168651fb86a45698b74a8dc53b3658f223f27c767226", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "a0ac8be7-2343-4739-b1bf-b639d7a83627": {"doc_hash": "c2cf040724b60d5cbd179ba4455bc631338d5c61832b499d1352f41f119b0737", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "7548a93b-2042-402d-9663-c9cf58f7af05": {"doc_hash": "a8355e5dbfe2b0ffe2fc7d03db126a8cebd7a0cf0fe0e01bf690243634403529", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "8b80bc92-fa6a-4fc1-a38d-15ae1f43f48e": {"doc_hash": "3fd24ba2effda542452c4a1b688d6221ad6b4f3a2cfd71fcce3abe82276d1ec6", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "dbfd4b04-0039-4fa3-9ced-4978c625aca3": {"doc_hash": "1de4ba250958cf47bd682c400428e98acaa8197f57ce7a3adf0999da8c8a901b", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "157392c9-14b3-4239-abe6-c0e6b2afa370": {"doc_hash": "43e2df41ce641c558868cefa34dedf2d7e16fecb13a8229ef91a3a785ad167b2", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "3e466a67-6571-4e0e-ada3-07c55a9a2a69": {"doc_hash": "83abb2b4b0840d63176b5e9889865fe375230d0635690ba4aa5c23557d3dd6d9", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "23c3f2b8-b98f-4f91-bfad-eb7a245bad97": {"doc_hash": "be91b01445676fe4530c31a88d22b884b3dc2407420b4df52e5d6f46f1e9dcdb", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "c1517d4c-3d41-4412-a7a4-1e3b2a3bb783": {"doc_hash": "b486f45ccda84ef13bdecb8da06326afc939cb5b2574948603389e6f83d9657a", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "09e1c915-353b-4835-a613-f85f9720452a": {"doc_hash": "9b78ade23b18d3c95670b2b93f75d9cb6b7ace0d0c46a071b262f7ae4259cc75", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "c2721a5a-8852-4e29-8d5f-62a65709c385": {"doc_hash": "47c0ac8d929e29b2eee369f07ddca67ad42626ea2b0480d02bd39b809ddc40f9", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "e12349db-35f7-465b-9a2f-fefa4446054a": {"doc_hash": "93f7510aac7ae0c64e02d42b7ca81ef0e0d2c0089ccf12bcaf1376ba16799549", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "2f0134f0-97f4-4add-bf9d-8f93c7a723f5": {"doc_hash": "79eee0d2074bf953923828d9e1ddc2cda16a0acfd771d0e3f2f2c3700a76996f", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "d43edd0d-285e-4d1d-9f48-510ba80a26b2": {"doc_hash": "faad69882e5b9030eb7806200c07ff676d53716f30c6a3a56ea37c9292f9d577", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "d05612d5-1fc2-4b4e-8b23-b654fac5eb54": {"doc_hash": "9d2f1c6e95fa9ed74a3ef6798aa9e8524de38ae4f859f2879eeb50b43ce3b5ad", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "12c6529e-5bfc-4cdb-ba1d-b346b537ddbd": {"doc_hash": "3cfe6a7eb28525e16afbbdb10d741e180e23b8795391c455f57008df81a7106e", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "5f9803e1-c78b-4516-9676-7c3d59f5e3c6": {"doc_hash": "f9edb7a28da6d820827977a86976aeec8ae917a1f663345ca26d7f8ab9416d80", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "d5e7803c-fe7e-4397-9d57-b4d233d2940e": {"doc_hash": "8ef01e3092c28c9de37d43b5d2d2c860b5a3e19664aedd42b676c74989f81dd3", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "a86fa115-9666-4413-803a-f9bdc2b3c705": {"doc_hash": "15af1985d1c780c7b9bad6385dd4bb41f9c91cd230587884202a69412169ef91", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "64248c25-68be-4d86-9036-2bc5ebf5087f": {"doc_hash": "fa837a258fe5a5ab220e1684ce17d1a346b6d55f51409633f50889e950769f2b", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "3ef22783-da6f-428d-bb12-7e6c2273dd61": {"doc_hash": "c3fed5b0cc4a4680b72a2e2203a2cb8512d67d80011a3bc7653f7fb2c58b7d49", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "5f4ecab5-ad1b-47e9-822c-0f54cdd8ccdd": {"doc_hash": "4537fbe0fc02fa713a70e270b3c52354b6c29cc126d249ed98e9364ee99bc7ab", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "9ff3ce2c-0379-406c-a8eb-1ab0013304fc": {"doc_hash": "0de2d960139de5c49efc6193d9fe47968bd392d9e594b465437d305dccc8a328", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "bd41e00a-7043-4f68-bb92-5ffc9c4dc1ec": {"doc_hash": "30c796154cf6a6acd40d3d356d68b7503ecb1a6a333b3d102bedb324418ab51c", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "73d1e212-4483-441d-bac3-f8be01007682": {"doc_hash": "91a2eb3fc8e8bab9c3c512f1de6728ef628ab8f34a6e4bc16921de2a7f382d53", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "17985ccc-408f-4d6e-a15e-a1062fce4a0c": {"doc_hash": "703ea9cbae100392fee7a4a770d5b53423c594dba37ee9f44b50a34d0098e4ed", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "5408125b-8b32-4b98-b9cd-05fc3aaa7fbd": {"doc_hash": "47ca26199ec87dac70556888b2494d416460fc4e184d6f6d41eb193b6b00fb55", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "e686929c-2133-4304-86df-a8dd0e707731": {"doc_hash": "dd161576442b509e696fb450d2f53954335722303c8c11039df93097c821bf5c", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "a47fea3a-8340-432c-ae40-5a848af88020": {"doc_hash": "101c5eccc70b21942290f1c7d69a95e689975b1a389f7958179aa96348693205", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "73aa9fd4-cd64-4cb7-bc2f-382239d749a9": {"doc_hash": "e83b76f4d16e7656448d9a8c9d6bbfead4924e82dbc687d7ed3ca16406d46c7b", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "c12f4d5f-a272-44f4-b3e0-9523ae6c5611": {"doc_hash": "66f8d9c6d5676141b54b9695bf1c54588ae3fb2cc12cb01c16ac02768116c130", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "41954dcf-ce49-439a-bc62-a757a53c772d": {"doc_hash": "0c5a2da3fef54b73b79b1b3e4ec425d5d2b0dd493c6a88ca740888cec2709b0b", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "a7e422d7-7aa7-4dfc-b049-68e45ff08ab2": {"doc_hash": "1d4c3756b4c390d4ccff607265ae24c12c9fda9f9cfb93b0ceaf7751df9ae0b2", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "8cafad7a-b7ee-486a-96f3-35f93d97a364": {"doc_hash": "2d934263d2f854b0fb3df1aeafc4c696772474204adfe9f1a72a64a981a9e585", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "d2fc6b8a-3b33-42b3-820d-a7b3ad8d0304": {"doc_hash": "5fe440ce89fd78f5ef25ab4ac66b6d3edd50705f2475fcf8f6a872e76af119bd", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "f97a944c-98e7-45e4-b396-0b516221ce32": {"doc_hash": "4e221cd2495ad8b3ff6c75af95cff601afabfc21e12b084770049bdb77f2d15a", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "471f0d14-6eb0-42cf-9816-a59b40804092": {"doc_hash": "3b9a2b848a54594d712243bebe6cab2ea5cc1645610b0d9f0ada1a9f9eaec44c", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "1e840b1d-d004-4bef-b8d7-b3e8c18e24a5": {"doc_hash": "1bc29fe514ee289d8322444be9cebc694f50d2660962fab127cf23f604bd8221", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "e483f6e7-c8cd-4cc5-88fd-128fac2f4344": {"doc_hash": "9e355dcd99cf72a9ca3457b0571ac39ec8201b386973ab0021c21b9c977a96b6", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "4735e27b-8cdd-4d13-999a-53a4a9b63e9b": {"doc_hash": "5a9da08b6c0dd122a1c32c70d8a38b0e52a7a590fa80a0beef4fde41958073b6", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "67c202fa-af61-477f-8edc-b4ec0a297225": {"doc_hash": "7e538b934cfde5d78eaf36667496764f9c31efa06c905573cd9bc167c03a0cfa", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "b3a1ad44-d0df-403a-a8a6-296508bf145e": {"doc_hash": "13e353d16e9c41ad3710c208d22361d6c49f5a6787511c6cf0a575c8cd33eddb", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "1ca2d322-aa94-4004-9761-cea3350d9aa0": {"doc_hash": "269f21e66baf08f88e8d328c9980b6b72955224c62a7013e63ff9f9f7db2ca17", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "5427e50c-c0d5-47ab-843d-455abb2954c3": {"doc_hash": "ce8f059d8bc5109badb6885004452be574830beb1ab7de904d3a894f19902c65", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "46c06b8b-f6e7-4470-86dc-f4c7fe815a21": {"doc_hash": "4acc9b66afa8fce868817561f2f574f602de3e07a4c0ab80015768e8aee8f930", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "83bff032-4712-45a6-8a31-ba9c65fa698b": {"doc_hash": "41d9739c35b957d659800e6de08200b62985682eed784df6424e21d306615785", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "aeced65f-b145-4940-ab80-ede84f1c5d67": {"doc_hash": "fc8f39becf40de4706395c99b6110aba5771da619b6555979a56a93912cda787", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "cddeb800-4135-4ae7-b951-9c90c2298dee": {"doc_hash": "2e0a79bc50f2be4edc289a608024caa78f87e5e3eac840fad1c804db4b74979a", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "ad41c290-bd3e-4411-8ac2-5560c265bad6": {"doc_hash": "96d5d67812676381d4fea250702a342abbbbcef24fbb274484b764c4c4c42ffe", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "ee009c33-67bd-4d9c-a8aa-a973b3866530": {"doc_hash": "e91fdcc120dd053bbf999c025bbe023bc3b7d11f505ae4dd0636cbc7badd4cc1", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "a55c8c92-8ade-40a1-a42f-f008eda9d766": {"doc_hash": "195ca86935123f01807b6003a4113e6ef0aeda002aadd0578ed62fd9d78db553", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "27cb265c-8a30-4a47-a431-56e87c0a3422": {"doc_hash": "1ca2f1c7264d481213e290302dceb2bbd5a432e5efd3ecede18a32d82caf51ef", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "fb053235-5ae2-4f9b-bd35-e0e6f22d0db6": {"doc_hash": "26e5eca3eeb1c0b5b89bef5b85d578bc273260ac2df965e1bf0f2dc802235239", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "b00aced5-cdc9-4bd1-ba06-97586566fc1e": {"doc_hash": "fbc212093bf77a0790d66ab228d1a3ab8e4cd0102c4d73dc944ee91b4334828b", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "ff5a7c25-0652-411a-93ed-b2bd0f2abd38": {"doc_hash": "58de69c4a65cb26857e3225e65c301dcf37befb40d1fd58fc29b011dfd90f8fb", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "a56a6a43-464c-40ce-b47d-5c91b46df98a": {"doc_hash": "16bcbbcd36e57bd3f492f095c8baf7be01cad110f7d0f8cf0dbe9f9fc8080c8f", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "663ec1f4-8deb-46d6-9e2e-da95ecf8e48d": {"doc_hash": "2f4a4c1b19c7cb7b80557590f8b8765af7514afd39b962820539cf7ad1d59293", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "6d41249a-c560-4f19-952c-9d4aef985451": {"doc_hash": "b3b8af9972925addc775cd5c1fb009de997b2d6f7f9a1027aacaf1dc3032e71f", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "4153621b-fc78-4b98-b9b3-e372de826ce8": {"doc_hash": "27d6f3f067c0e5a0dda788a93c26faa5b206226c4ac962d25fb2c39b2d3d8677", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "c57a2913-0d23-4354-ad83-71e73056ffc4": {"doc_hash": "fea12ba9dc0c56ce8a3822a2f505569236b118afdef626821dfaadfaaae7de5f", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "904b603f-e9f0-40fd-afb4-49d424dc6962": {"doc_hash": "45bc6d15442a04c832e00900ff0d47dae7d175253575655e3098b0cb09dce8d4", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "09844597-bb35-462d-ad51-b956020e3374": {"doc_hash": "6254c7c7a4f0fc67f7cf196063b01894b1974e8fdaa13d2ea9d7b54508fd3a21", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "4602b0fa-2ce6-457b-b66b-b9fb64c4c3be": {"doc_hash": "272f690e9952135a1a37931aad4074c247629749eb7cd08a470e558fd61afc53", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "0d595c8c-a021-4a78-b184-9314729c5bd9": {"doc_hash": "47d313df08f35204103e7cf68be1730ee1a7e9a1c14ed70f060070f63b74f248", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "4673f362-5d18-4d2d-8dae-10a7c46aaa4b": {"doc_hash": "586015c82e8ad169028e1d10631160646c1600d2197d5b423401791da23ebc6b", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "ec3c6d6f-16ea-4410-8ce9-2095469f1087": {"doc_hash": "92c514bb3485b55d66ccb53cc40fda37ee8bca63115fd3d73ed14f485a562b95", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "c853d148-7048-4b17-a508-9043e42101ce": {"doc_hash": "b34d4428acc597246c8b804cc231e2d1f3d01ef268caf55ecb429d6c241d64bf", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "6fa6ed9a-547b-4f00-8761-032f734588ab": {"doc_hash": "e41696f06b75e861834d7334242c73a810758c2e5d233b89c6ebe7e6c2a7aca9", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "eedf7998-053c-4daa-ab05-742ed7045c8a": {"doc_hash": "b2018b5b3793c8eff8c4bbe9258d41541cfcb80b10d4b0c32deca963c823c2cc", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "60fee7ad-cef8-4586-a350-1acd16bd2450": {"doc_hash": "c20aeafce45fb196a6af0dcde11323023bc97dc46757dd7370f82d8b8a6be74d", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "2931e386-4f81-41fb-91ee-171dee4def7d": {"doc_hash": "9a8c0456d3b3624a69e33a2232b87c7120620c96639eb2d13b68fba1aa3d71e2", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "e415415a-706a-43a6-a9fe-ce2113ff0e6b": {"doc_hash": "7747126a1130e798b89737f576afe01f0f30d56072bbdfe011064081dbcdc04b", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "13d4710c-a3b5-4ad4-9568-3ea329cf181d": {"doc_hash": "002867e7573102046aed83aace87a8e80895fff1d4a2f68ae88418c323d42405", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "4b7cbe1b-3050-473f-846e-610ca9efa68b": {"doc_hash": "8655a2ef1ff63db11e3626208b9dc4d858e3d04aa6ea7eabdf6a0d2b388e37bd", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "0a61637e-320a-4481-bfdd-042145a23dd3": {"doc_hash": "1e2443c1ed5466c2086c9796725b6e0b5c48145cbe91787fc69d271176f420e1", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "e0d641ad-f162-4be8-97fe-7e6e671ec6d9": {"doc_hash": "7fc3b20ccd58d10e00fdb313950d0c30a7afb8c6e12b6127459d4c2074d97971", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "0c5ca7cb-de13-4d4d-add2-c603d231e3e6": {"doc_hash": "481a59a064478bd2dca3c7a64b4b79327d371adc942fe1db80167209f8d3cd37", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "f5bfda18-f49e-4d83-b4de-20046679630a": {"doc_hash": "0d496061e4d07cb93c622b6b1dd850b98f464abad3747c325a2c6f164ad2520f", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "64b393fc-fc47-4ba5-9e54-86cd37dc4bf1": {"doc_hash": "30f39f61101653da00f7723589900bcde6f6b58ec61ab409c972eb3dbb950da7", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "b3124ff6-651e-47cf-9d2c-c654b988282b": {"doc_hash": "d1c4179b81ea6bde08dc86473508957cc8534077cde969d8173fe09fa15a1559", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "52686205-a159-4572-b140-d1cb8540d486": {"doc_hash": "19431263179382aa55228a80eeb94c2eb01b3c25fb1e76b849f30b2e36004c1d", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "94af2a57-93e1-4ce8-9ce0-dbf9b8b32749": {"doc_hash": "74d98f53bc2c01293b65517ff378afdd87a4a30301e4dd86f5c706cfdc4293fd", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "09b63a4d-ccb2-4e21-9a27-da05e3108553": {"doc_hash": "c695af8ca7a10b2290886b88928709dcaebeb3903e5d80f4b94bdb24f22c8803", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "3f775351-a3f2-4c33-b08f-9aaa193b9df2": {"doc_hash": "9aa38495f68059753f3a61d93f4e574c9e790591fa71765f01a0429ff16755c3", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "de12f8c0-636d-4128-b0bc-a8d6d7cb1750": {"doc_hash": "3853dda6d2790e5f344425984c9819c2519ab61533faa8449097e711685c1a39", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "06e2c2e2-40e8-4468-bba1-aa66a97c8aef": {"doc_hash": "374bb96f8a233b9ac712b74fef3f653fc13e48681233c0afa5f9077a3c90170e", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "3c046325-e860-415f-98ab-681be9fa9159": {"doc_hash": "8f01cf6bbcabb08e4d06a2a7454954946833b0c892428d1ee31ae9a66bd52cac", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "769aacc9-d946-4337-8f03-c728a0d8a8d6": {"doc_hash": "d2ae3fff96073c4f74880f33c6514bf3d0cc397a8cc2fb458b951d2bda2acdfc", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "b3859fe6-8e7b-4d29-a6c7-49c8b81b6d96": {"doc_hash": "deb19662c06b24bbf630a936d84702d96582c3cfbedf0248f4710ba5d5872b68", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "5eeaa7e6-8d18-45fe-a9cd-1a6bc944491a": {"doc_hash": "aff1b9a41d5f4bb8979d628f457e224be93f6f9af5ba34c64d6fd26da2c6d3cf", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "0ba589de-48d4-4c7e-9760-fd1b34ef0f48": {"doc_hash": "2eda22b090662e90fe486712148999ffed82a6ab7dcfe884286681de181c9a5a", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "88906bf3-c206-4b3c-8df5-959bd316db29": {"doc_hash": "2816dace15a56d2abc0b9bf32fbd0377de441c23465ef0b82e8fc242a96fa5d9", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "6629f93d-e1ec-4a70-a6c3-ad0916631bfb": {"doc_hash": "cddf23c1927ad33d9b5e5183d95089586e0e1cc0e2288bfb90a815a67fb3e988", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "a8e8b03b-687d-44d0-9ac4-e4626dca0505": {"doc_hash": "7560509e70509f6e4863cc50d5a368c243b1c04b3c1142b9334e0e8e795dc567", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "d6efc806-1f57-40e6-8e6f-f74f92e83b10": {"doc_hash": "9e0bbd261a73fd0688255fccb00a8d973aad74f960365f9d16ef4401417016a7", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "0d0b9e35-5b60-4ae3-923a-046802078e1e": {"doc_hash": "cc17fbeda0b1ece1f94395d562d3fb5b9328a421deaec9f90e3429c4f84aed20", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "bd8537f2-34b0-4ade-b16d-20ed78f12df2": {"doc_hash": "47780ce253788d94bdb154782c308b59db654faf46a460e4c75444a19f34eb86", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "3b8ce35e-b417-4af1-82e5-fed0affc7e06": {"doc_hash": "3c10fbe86b666dbf77d7acabaf7a64bf2bb16de61e4817ff76039484fd99b42a", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "a116afc0-b278-4c2a-af13-1d87a75f254c": {"doc_hash": "3fd24ba2effda542452c4a1b688d6221ad6b4f3a2cfd71fcce3abe82276d1ec6", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "5e7447c6-088e-46d7-aaa4-dcc336d40fa7": {"doc_hash": "aef96238b9c585f941aeca885698ae0fa403538f33ccc6946d54c6b00f3fb7f7", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "4a5c46e1-5405-42ea-99ba-1476d7cd2f41": {"doc_hash": "82f1ebefd9ad5bb9ca207b5cc5ebd1d309629af7b556499a4a33cf73e580ab9c", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "acd0198c-4d91-419b-82a9-7993b67e277d": {"doc_hash": "743d702dfbfbc4d58f1084415d478a4b500921b3cf524dc36cd5c74d2cb1c1d2", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "5733258d-aae4-4beb-b60f-05be5a0c6246": {"doc_hash": "cb1363741254e3e25bb8c31c88799875e1a358f1909909a501ab910665934abf", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "b400211c-cf17-41a2-a26e-b67fbfb6a6f0": {"doc_hash": "4283fe5eab48dc0d3b552ae57261ebba27a9c29fbe6e37f2d195371b73fd55f4", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "558f27a6-a184-4775-a361-1e91054eb1f6": {"doc_hash": "c52b2deb9f27577cc5869e7e920ebc0717d048112532379eef566cc281899857", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "b89bec4d-3970-4d98-903a-46c76677a95f": {"doc_hash": "2d1b5bc69dc029a96a33d63c859068f132441e31256376f2c8db27d2874ae441", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "53596b48-6085-445e-b3fe-caa0bc0719cb": {"doc_hash": "11938024335bdbec5476b9c59d36faeb1dd61bb946c5b4e3e4322e5d3eeb3540", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "24a10c4a-6e63-47e1-9d47-83ffb276d0a6": {"doc_hash": "618760627c727c4bbd121290f68bfd558e4f13692aedf5df0ac260dcfda7d9dd", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "e88a8c60-eece-4ec1-afc2-d9fe8cab4678": {"doc_hash": "f6ae79dccb05eb35ae25618b30f1726760823eac1c7ed297f3103a5fa798d046", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "655775a1-af8c-4b7d-b33c-646e1d73f94c": {"doc_hash": "720865afa90008f4d8c7f3a15d620d06b7f7f780b6d9d4911074d2bb74c2229e", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "a4f016a8-fadb-4331-ab74-78b85907137e": {"doc_hash": "ea4f01eb6759a3d8b09bd8425ba86fdc854a82737f6cd4bab8910d836fc77be3", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "c4671bd9-a69c-4fd6-b414-fa647a70ddb7": {"doc_hash": "fa528b1142d33fc785634172e6d9897d1962e79d625f72a091340d5442a89b33", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "9e12f918-327a-46c1-8e4a-464e4e7330a9": {"doc_hash": "3575144995092b51c041599f0a65738cac5c8bf79c6cf5ebf0913b4091379307", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "da2cec8f-4938-4c5d-b437-9193ce3ae2b4": {"doc_hash": "83a84b253a610e86d80b0775e8aeb997adbd1e5a33249fedd89d3e7cba4c968d", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "fd129550-b226-4f27-891e-6449af3b0425": {"doc_hash": "15325cc6aca3cbfb4906b3bf3ac142d9b134c7c76df401c69669232fe75351c5", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "389170f8-d253-45aa-b010-d041dd158029": {"doc_hash": "8cba46c40e99e31171b00a8280823f5f7fba252f70fa0ec6c111d2228ed5641f", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "82f15931-ce85-4895-a5f4-044f1fa04213": {"doc_hash": "57c17e1d4e0d088fbc14fe7d89dd6d988e38da98d0bfa7b450a3d5d788026eb0", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "7890cc53-e5a0-4234-83b3-d2aa4f9bf941": {"doc_hash": "00bcc454d561deb3722f3e123361758fc2befce54cb7ea21d5116e7760ea8efc", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "ba8f7981-bb0a-41d0-b47a-bdce70b2cf65": {"doc_hash": "788a6c94fec0f067fc9810fc1562c19b04f052bbefab7c006ba12f0805cd9fce", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "11426f68-fbdb-4bf1-af98-0a437bb2c145": {"doc_hash": "b486f45ccda84ef13bdecb8da06326afc939cb5b2574948603389e6f83d9657a", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "13d13ce1-35ef-42e9-85dc-4bb3bc5e8397": {"doc_hash": "c25294a9fefa7a3517532a0518f371b188322598267e8994d547588649caddbc", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "d81617f1-917d-41cd-982e-0f2f959d610a": {"doc_hash": "72710eb60c6d362750034bc59a6a813286a87f81027f1e6d2709411b6eee5dae", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "d51ceb86-2093-425b-971c-1804fd98dcc0": {"doc_hash": "55e4cf319e41af443531d273100e04b8685b5030fd402d54a6397f261e5b79f2", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "138c94d4-0b76-4a7c-8302-5eeba39be8ac": {"doc_hash": "a5dae8c07fd87025d66f3547940f45760285c7f7b33b6b66d64ef50cdc48567d", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "54fe4db7-2f16-4bcc-91fd-5bf471d11628": {"doc_hash": "10756d2962fca17a33e664de9a293804cb3c3b2d1475e821291d60894376aa72", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "9d6dd1e2-de16-4122-8f1f-37b2fbd19650": {"doc_hash": "7a4e65918aba85f1ea0b759f51336c820533ee99bd981baac4ef5f2c9007c973", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "732ede0b-c7f4-4353-9810-002a775e1d8a": {"doc_hash": "d5794df01712b51d3aa3e446eab2d1f0ac868090591b1b936ec3210032f07b78", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "83b6ef6e-252c-45e8-b87f-25b0d46cc231": {"doc_hash": "3a67a2f631c936de0cb68bb26ebe88d0a5b7d15eae58cac9599df2d5e2868517", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "a47d0acf-1417-4ad6-9226-f207ea3c8501": {"doc_hash": "d4384b9fca6c0d0467aa8bce98f5682b00057f2f134d60badc34b46f0201ce33", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "f89d57b2-0802-451e-9df5-747343b44248": {"doc_hash": "916aed2fe6881422b467e99664dc8a1dd5dff84829b5c1534a966744d32bda59", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "1c72995a-37d2-4b41-acdd-3c0ea046ea0d": {"doc_hash": "d64fd92ea44ea4e4f52fefc4e8ecaa5502d031e57cc5478f100624a0195d5ec2", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "e4f6928d-29ad-4a0e-b339-19a733962726": {"doc_hash": "2f67f63b62589ad9d5ae718425b6ea64aee862893ce24767d4160882c9bafe98", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "1252d39d-c4d6-41f6-86da-3d019ddb1b5b": {"doc_hash": "9a773fefaabf6669b74a2705efea65ae236e74bf1889a70d84ff8a30da0a1513", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "53f4bdb1-f6df-4dbd-af07-0ba70e7bc384": {"doc_hash": "fe51358c3cfa066c74fecdbd89efbda97757c73a150f34391b26f6d99f4fd108", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "12c2b752-7d4e-4398-bde3-27ecc1b42a57": {"doc_hash": "4b45561d50754ea39417da7c6b459048b71f1cbe29d1270e5d6639648d0276c9", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "ff7c5fec-c554-4c9e-b6e4-20cb497138cf": {"doc_hash": "61b02d30ec5b8b03470d91f3cf317e01344d34387c93af59b632390a51e66ad4", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "3e030e8e-e8ab-4402-8a6d-593ae4e361ed": {"doc_hash": "286009f414a76ddc4fb60fc135c3d611944116abc951f31849cc55d9f0d83279", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "2984b406-27ce-4e64-b48c-bcfb6f8e51af": {"doc_hash": "309e46a12dd03387005880475c73c73ae65a0aaf3204c9164f499e356138805c", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "9c9aaa41-6e2a-42e3-a15e-478694e5ae94": {"doc_hash": "1675ecf8ffee539fb298ca436bc8443e3e87104ebffbb943257f89668b81c66e", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "560218bd-4a6f-469a-b570-969eaee48eb4": {"doc_hash": "7786f48ccd5dbfc1be61c29e400419fb734e0bea24339cf4a6e4b1c415826098", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "5871c2f5-3dda-4d51-a698-bc10d3b29e7f": {"doc_hash": "faad69882e5b9030eb7806200c07ff676d53716f30c6a3a56ea37c9292f9d577", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "de6b7fe5-6c58-4dd7-84e9-cbfbda6c9fc3": {"doc_hash": "c7108554f7d7ab1638a55d7b90df0499cece48f3c90663f5a29455c202003639", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "9f9ccbdd-b443-4a1e-a064-d00ed892e2c2": {"doc_hash": "7dc3826f5eaf1630d614f83b8881d239b1b3d652e6afe330b11705ed09c7d0de", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "e4fa705e-1106-45fc-9489-340890dcfaba": {"doc_hash": "170b2ed43090e9a6fb7d66c71719d4bbfe3e5b5f5bc4cb32598f951e61609a7a", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "0463259c-3c6d-4f6a-8b88-f293e8d9c284": {"doc_hash": "bd3850efb750f92f5ecdfdf31bed0b7569e26f662c125fa27333e9ba5d847b95", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "2dadce34-d2c0-4f3b-8820-3abe9728c4ff": {"doc_hash": "8ec50f2c46fce117ca28bfd4708de36a603dd0904bbe166311e9a497b2f06a67", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "918d4750-1e38-418c-b4eb-7d0354d5a8ee": {"doc_hash": "4676593295156fe832a24f43d907df75a2f02bf00414c9c8413fa6a932706a9f", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "abf9f6b0-2e3e-49a7-bf7d-50dd1ccb1516": {"doc_hash": "96b34ddebc862fa8933f12ac92a1825d2a94a534ca7a6f47dc7297366247dc5e", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "0d8e16d3-3d05-4e62-87b0-fe9f42b6d973": {"doc_hash": "3786777868424c30d503ac8a2c3fee6906614215d492db9d09e4635aac45d1b4", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "6060b617-9ae3-4a0c-a3d5-390ea3cc3217": {"doc_hash": "252c065819552034494b6e304eb1853f82933e1b062f7216774249bdd2108b4e", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "120d0e91-35df-4138-a074-ec81c23092f1": {"doc_hash": "0968cbdc873f325f6e2089360473f91d1cef4b0b888957cd2e2aa96ca38ae213", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "2fe89b2f-7919-4170-87f1-8299c2cb2d56": {"doc_hash": "fd873d06f75a17892865f9967a56e5fd43599c7b702619bfdb67944d07af412b", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "9978d525-dba9-4008-b071-6c35d78df33f": {"doc_hash": "fc49f1252e60dbafd8e497e3d608dac51f6e2301e83f064eea2c9d306e3685c3", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "fbd9b7db-b1a9-43a8-a451-08fb6d643d60": {"doc_hash": "7c7de17e4831ce61d72f7e015b1f8b377877733ca829c091f830b4eaadd12a9b", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "e1ed24ba-4878-4707-995a-2a2db33e9f4b": {"doc_hash": "0c98e2c70d1bc491d02fde82351683082d14667d06e2f5707ea7b099b2651481", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "e7f5d47e-6f68-4fd3-9821-11d09d605a97": {"doc_hash": "5607833bcf2b3cab30a347edb615f4db895f9aba629a57d1cefedda1e12194e1", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "2b37df9e-ebb8-46f7-a4fe-7d8202fe6bf4": {"doc_hash": "6e9bce2d44eeb92049c0443c933a2327d6130a9779aaadb6bc4364c44acf788c", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "6855f5bc-64b0-4b6b-ab34-e53788bf8f35": {"doc_hash": "368e73e5c10727974472024d2b4001219a4896da65d6472a7c3b50d146ad251f", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "8256fc98-9a3b-421b-b3da-95000240ef7c": {"doc_hash": "5fa89b0902b98975ed650734e0cee793a34faa1afbcff3e65ae2f5c66afeb083", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "c87f47d9-d453-4bfe-b661-4fd3e2cbd006": {"doc_hash": "480011eff8eccd039f5198156bf073a384bd53d2e222120411905ea9b15ce818", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "4a56225c-2b25-4147-b844-ef6abd62a017": {"doc_hash": "8ca83ea73f462560b9a43a753afaf4b9fbc52195a64f171c80e844c39abdc72a", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "faf247df-7443-4d8f-a985-71ebc163312d": {"doc_hash": "15af1985d1c780c7b9bad6385dd4bb41f9c91cd230587884202a69412169ef91", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "5398bc70-9a11-4af4-903b-f987868ba4fa": {"doc_hash": "e69990783b5918889bab8da9cb4814c041587d4a14eaa1ea85076e54ba2f52cc", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "bd399c66-11dd-4b30-be36-f1e2f6b27af1": {"doc_hash": "4ef19f7c92c26491975f03d1e164e7b872507f480889ae90fdd7d4e70002fe40", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "dfce174b-daee-43c6-a72c-512302fc000a": {"doc_hash": "f249231994b22174d9d324e920bd7971cca833878aad469140e23be8d4c3d54c", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "2ad1e2ea-cf46-4abd-9551-a0f66bbbfae9": {"doc_hash": "5e36eacfd1b1b2df0592b4a965f38dbb5e8c9c2656f578e767c350a23d776bf2", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "c5ce600f-9ea6-473b-a6fd-4d9476db96a2": {"doc_hash": "54c3c4f4c315150b5df9b1e8dd528b7809dfcc5e21a7911a491378312cde4a96", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "c39b45bd-812f-4b22-aa30-6a2745260e8e": {"doc_hash": "c270fd2629d5586ce525f4d1b33b226a17a163b258e29d7315f9a2a4800064c3", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "b9b89874-b531-48fd-b901-b17ba4a6b4a7": {"doc_hash": "d76719e14ca104b582df0ec1c0a392a2ddf071aeac4eeb1c7b5bf0b51b6bbb18", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "0d4e1258-834f-4fbc-864a-69bb958f0250": {"doc_hash": "3c500ed1765ec9c38a642af87623cd3927a7a11580085259760b61dd70c30a48", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "e9e87a31-e521-4f26-add5-1fa5cc83b2b1": {"doc_hash": "bd7e20f74cb4a4f531cda9afee6b27aef4ffe945c0ee03476c5c76af7655d94c", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "71dd5542-5b9c-446e-93bc-c61f1a8f5111": {"doc_hash": "e3f54d8ad9dc942ee2fc47896ea0cfce718ae251ed452a4b2e9a0df2c589dd0d", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "9244f949-3dae-4948-b254-8f330087c636": {"doc_hash": "be13b7bb7dbc6999a3dff46a8629f284c27596648f2fcf4596a43130e4a06e4e", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "2a33f8c6-0e04-45a3-bb0b-86c970d3818d": {"doc_hash": "5c1211785ba3413f3a59246bf87856302895642334d49357e510b440f0adf2d4", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "f40885d9-9854-4777-8807-233cea9865a7": {"doc_hash": "31c25c7f6cb64ef22a009e4eaab8c799ffc6439e7b9dc54c893c29d2edbd7f91", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "cea7d83e-ca48-4300-b6b5-ae05af4f579a": {"doc_hash": "5ff1eccda033dea6b71d64979be105f03e56c8fe5f8138b4fadd59056f48e529", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "0a490115-33d4-46ff-85cc-d13f0cffeb5d": {"doc_hash": "1dadb32f36c3ce21ddaf277351b193999d36e7ecf5a69166f6ad6d8d7c3cc2a8", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "97565d28-5833-425b-a97f-2ad351d486a4": {"doc_hash": "9327f9dc0d4b91530847332e7feb27f0eb67595219c61d033f66a3613e9a639e", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "554d8454-664e-4d02-99a8-dc445b231738": {"doc_hash": "093df1345f3344e3b566b34bcfc3cac4196976f37fe6a29b0ae89ba5e65ec936", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "90dfb582-199b-4336-8561-af7f3d222930": {"doc_hash": "a5cc5218088ef568f0393bd3a6c12eecb245f326286c73fab6074ae74125e8f8", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "bed6bc18-235d-4127-8e52-08f2ded50876": {"doc_hash": "8c654d0b4d2d7feb0513c341ecbf1b0f8f06e7e4538f7008e58003b991f1330c", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "01541a09-2aee-4102-bffa-e8171960cb7c": {"doc_hash": "2de8b8a8c21d7f9456b899e46685dbfd08ada627b9adfcf45725472590c8f384", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "5fef8831-14d6-4bc7-8579-8d2ac35bce09": {"doc_hash": "30c796154cf6a6acd40d3d356d68b7503ecb1a6a333b3d102bedb324418ab51c", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "167676cb-c620-4532-959f-b490a6cec2a4": {"doc_hash": "497ef461c0dfc54f5fb4ad9ce9a092029aa4523a1a74bbb30063ebbd04613391", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "3ca598c6-14e2-4e21-bc64-9086965962e3": {"doc_hash": "9585eb2653a7399ae3d777ab10cb2ecef4798c03342ca0e6052153bb7ec9d91a", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "2c4e9599-0dc3-422c-b512-819573a121f4": {"doc_hash": "a13bbb926635577fb2a455c27e5ca2aea0a3903263ef64553018f75c1b7ba45c", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "a2792d4a-2701-44a1-af5f-1ab791bfc156": {"doc_hash": "90ae58eacd3637315f7705056d897146e3e3af1db6c3396112d9e9118aa3f14b", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "9d6866a2-a9ab-4dc8-a062-3ffc0769bb09": {"doc_hash": "133a527e5f2e143e836df7fcbc0bb56ebdac00f3bccd30148653400fdb7645cb", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "d2fabb62-79ba-4704-9f1a-bbbac7b4eb55": {"doc_hash": "a7aca842a5984ec286c52374a9434396d8563b29010f08a7b7bd6867c75bb735", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "8330253a-e2eb-4418-86cb-ff01133b90a7": {"doc_hash": "40c8051e8950d005bc1a4e487ae3c0d60b20314e1c73000a8a9e155f2bea6e5a", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "980359f5-2bd7-4682-aec2-4d17b6a17be2": {"doc_hash": "df160b04b9fb830ddc607f6509bbe6c141e1d49c9599b9178840afc9b13e401e", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "06c2a17b-c2c1-46c5-a542-eedc4da933ff": {"doc_hash": "8b8b9a60fc4160fc47a78150200137a3c9312569864d75225e9856b98cabe84a", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "407d5142-618f-4e0d-b085-f2bc1e42f049": {"doc_hash": "eee24890d8b46a518365bbfad267397c0d17b2c94dbf6baa0e31ae3556302191", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "5f38e1cc-7ed0-40de-bcac-e0ee086e6eb9": {"doc_hash": "c2de031cfd3b334e8890a99253767a4c688c729102b46e75964c2e701748de5c", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "970789e4-2146-4bbe-a23e-0f66749b44ef": {"doc_hash": "f6b2774725da8079366ff0980d977615daa3d034087db0d44946050a020f749e", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "1b2bcf9b-d898-4068-a91c-8ceebe18ba17": {"doc_hash": "643d5df793288289b5f71546bada064bd50830728a3099821a34d93745dfa8d6", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "d64513af-c80b-4871-a8cd-6a12bb499b55": {"doc_hash": "723360a34a54a9fd7ee46f43b0beb4d292035329e965f4e26429e26b176dc66e", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "3c7f1760-8315-4a5d-9021-0409b727c3f8": {"doc_hash": "58cf950a50a7bff54f16d05c30419af9b2ac6784a6bd33be98fd7499c0a93181", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "aec98491-a6aa-4682-8156-5d56d2ed8ff8": {"doc_hash": "01120960ebe159bf6aedb57c7ab5685c047c4ba4500b84b6484c0d2af28cfd44", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "5e1191cb-b28a-4fd5-a978-4e2dbe1b2759": {"doc_hash": "f7accca1dff5404e268dacc797cc094679c34d6c80c0550708ac8e093a8d03a2", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "f9427b1e-ad15-4d30-9936-105fba22f021": {"doc_hash": "31641413684648a77c163a066a091d5f411daf89766f0d7a548ac55d410d7ff1", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "0bdeb975-a17d-4f48-83cc-118021032748": {"doc_hash": "95d8d206ce3a81c68a1c57251c033b1f3121f2a07b09e2d004335c18423c4d0e", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "95e8f49f-3498-45ef-ab1e-b6b84862fc33": {"doc_hash": "52be2707b86c6341e2f8855567ebe8857fd9496d26032d3206aa5a4929007648", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "4e0742d5-a291-464e-bae1-6e36b6257a69": {"doc_hash": "64e23c6caa4a21a74dcc4eb7e76cd15a65375b7157a43e1dcf45bd1b7525f2d0", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "82045510-e880-4e6f-9687-1b57f30c03f2": {"doc_hash": "3542e6c20064a7b04e484eceea0803513b710ce05e46d9043b170fe6f56ee277", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "c2ace729-61f6-4231-8048-6b2c1942e13d": {"doc_hash": "d952e0ba03a2a028f171effc0dccf4179ab6f87f8644b26b93f19c202e545849", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "740360e6-b35f-4722-ad2a-18a58664e540": {"doc_hash": "a7a19157c4c1f988fcd0266370d6d294fbdbed2b4122ec644ae1805d26906240", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "1f5d39fe-327c-40d2-9f66-b14f3c9dd024": {"doc_hash": "1a2c1858a7627e3a8104e8a070613717bcbdaa708cafeaabc8f1923aa762d80c", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "4b9cc138-7e25-4618-a514-96ab2282041e": {"doc_hash": "c14cb4f7c44d91f319d2e0da25ec26713244911b0b4d17fe9dd3b6361278d82d", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "95dd6837-438b-4c0d-9bfc-258350d215ca": {"doc_hash": "c93a9067786248681a79f56ebe9f30860726717fc9ce4795ca5533a1e98079d8", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "256eb066-8499-4edf-ab79-41fc5deb103f": {"doc_hash": "7e50716400427ad1f45bbf4279e93908374282301419dbba8e2685ede1e049b5", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "92df3f81-936b-4e93-a147-3f14704be827": {"doc_hash": "2346e1b4da0bb5c037bbbfe379adbd060cf57490f21f6ec10593ad309c2b6aed", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "6a2652a2-f5e5-4a3b-81a8-89aacf398731": {"doc_hash": "07994db5ee9132d3d8a64f587c6e6e55d3800cc2c3551b6424a8265d92f59c66", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "7ee67fdb-fcd5-4ece-b603-8742cf3619a2": {"doc_hash": "3f2e85962308851455e8e1458cf08a338dc35f784e807a2ff0f7de623cbaee5e", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "8c281032-c249-42de-b36c-d8ee871b3803": {"doc_hash": "2f7acf75a70f89948840f5b900a03583b51d48089afbfaf5700a18e1765e7ba8", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "0b969fd4-c137-4acd-b272-208d00f7d49a": {"doc_hash": "5870fbf2ff23bd814cb71cbb7c0abdb3940f6d163ef3a334f30a60576755cb65", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "4930c93a-230d-403c-9675-1eb74ea812f5": {"doc_hash": "cfd1eee23e6c5f2b1ed86f7cafcb8279e97d076a32d9b8af3c69c4311a66adbf", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "46791f14-864d-4812-b012-f1984b15435a": {"doc_hash": "aa44c3b0b1901c40faed347fc9b1902bdfd94c7e902a20ca553093d8e0ae306b", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "4cfeb977-af54-41b0-b681-681f662dfb8c": {"doc_hash": "82376a6b7e4bba639ecdc56fc9d2f48422f62dcc17d53c36540a9f6207b9aa76", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "815b3681-02eb-4dd1-9194-de2466b9b063": {"doc_hash": "42f383a9de43867f9dbbd91a8641263cfa373b93fa80a51de44578f62b31d060", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "e370a1da-7e9f-4f52-af87-ee2e34a1a22b": {"doc_hash": "039b77e9dadb397516149b9894e50b7ff4eb9f7440c5812ef7710d7b59ed4692", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "e449ba67-6b3f-467c-9c37-aa87fb81e168": {"doc_hash": "8ba3ca0e4e68f5010ce54df4e7b6dafca202bf0a9239578e14f9f679600f99fb", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "b224ec18-c917-4558-8912-0c340d682004": {"doc_hash": "b57ed09626e56b0a8023442884d74247cf41f90739dbf3300d74fe184ce5fa29", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "718b7258-497f-4a7b-9fd3-c897e2b71787": {"doc_hash": "5f1ac3629beac34211c523ce1f1760d5782936e0196f04a668087c1c6c1b27f9", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "9e177f37-6ba2-4e79-9c7a-d1e9127c901d": {"doc_hash": "f7a18439f19eeeacaad28d4adcd16af5a194b8698028000696d26c5f7514808e", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "6336db00-0236-439c-91c2-48c301597882": {"doc_hash": "7b0b5c6d9f8c8135fc87676bad0f1168e7216228f57454fee03f81f418389555", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "aab24697-8302-44fa-a871-ded25764baa4": {"doc_hash": "acf84e38930a85fd92d5186a9c4e5f24120b3aa8569e1f29c58abac28ff3fb85", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "f0b77da9-5853-468f-b7f6-98c97632501e": {"doc_hash": "dc8f15d04c800d19469cb23b738b5c7cc8a96a4e2aa96bcf5fd4357ba57eb3c9", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "cf0bf3b5-c0ba-4867-b730-a052a5a9a319": {"doc_hash": "1ff606f3a22f0ceb0a4606ef9af56da196f42c09262ef2000d4db261d90aafcd", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "6941ba64-e39a-4bb1-a9c2-816bce61d0b5": {"doc_hash": "c340eea4b0533db0d056b8fc0cc8849fa97babd441be38475d2d68e640b776a9", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "14ffb241-7518-4acf-9a91-daf76ad4bacf": {"doc_hash": "a9dc9c9c3968364946da03eccea6d4223b05ab92be83b70e68ae26791c72638c", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "4c3bc92f-712b-4f5b-9e3c-5c6ca73ea05b": {"doc_hash": "a2a55b188589b9e11d31f90b0e948e244a4f7ba8d1cbf1a020dd63c0554897c8", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "2a4374e1-c0a7-415d-9b59-162d89743850": {"doc_hash": "924886e042cd0e8715e9ab36115cb08894238aecca3bbb0126dfe3b234cadaf9", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "b8187973-a78d-47b2-aa0f-20ffac8499ea": {"doc_hash": "9a1dbe6515adf4562957c19299b720d53100a9a67d9c6babb2a351a8b42f103e", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "da0bb457-8323-4e05-a99a-e584ff4d81e3": {"doc_hash": "a399bc5380abca8ea4147cb22a2fe004797bd369dd6080d1a440bfdd359fabe1", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "b38f1308-86a3-4ce3-bc01-f4d1d22f5787": {"doc_hash": "dbdab219169fbce4797e681f684617c07c2acf3f4f1bcada98af667c7181a8fc", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "23f7d6e1-b956-406a-a334-555ffa2f7847": {"doc_hash": "a860275924f5434643784ae1dd50202f04a147bbd56bac2c4cef702709291b00", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "dc70475a-13f2-473c-a551-7e10b5cd8562": {"doc_hash": "6c384560f8f6e93eaec78f530571a5c63d39900e3b3139485328073757b65a64", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "bb8df131-75d7-4feb-a496-b145e1c25cc6": {"doc_hash": "32abe25118a3baaceed550191a6aa290daffcef02d0835493b949063d9694a5e", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "5259bdf5-5c8a-4d53-8091-f40757bccae3": {"doc_hash": "8e027b7238d66c7812ddacf0ca120c1bb2cfbd80c93911842b866e8e15368775", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "8b015bda-90e9-41c3-ab02-c938c58fb6ff": {"doc_hash": "ec68bbc5375abd77a9c3265c92a6d6dab59432746759550b020bff19e199b309", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "86e24653-2bc6-4c23-9e68-cac4d9860fc5": {"doc_hash": "8c1aa6fc3c1c8add70b503fb107d330353db77872d6e942cf923a2d74b99f2b4", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "f19bc2b5-0c7e-4ae6-937a-2ee3992c4c44": {"doc_hash": "b1706244cd1c798c1cb0c97ec6f6460cfc82d77d0a8a68bc861ab38748ba4ada", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "403368a7-2415-49ec-994d-76585cfb4e8f": {"doc_hash": "4564d78df917ea21df5efd409c6353dea509631f49ac8685ce6824f17dc5d98f", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "6e49e5fa-9a4e-48ca-823d-7d8cc9f1d32d": {"doc_hash": "9e355dcd99cf72a9ca3457b0571ac39ec8201b386973ab0021c21b9c977a96b6", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "86247504-f35f-4815-b90d-15724fdf2818": {"doc_hash": "a6834073e8eaf4f32de200c0475eb9e252a1d1b73d80d8b3f760f36a4e0b00ea", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "6c32c346-1a71-4aae-aa9b-5e79d4a44bbe": {"doc_hash": "2e247eee8b91c715482978afce220ac2547161a7fce440c0b2a3898986a505ed", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "1bc3c084-6786-4408-bc4a-707a37147411": {"doc_hash": "79af4c5199dc78df731a9757ca60ae20278f507caa39544130505db6c14a92a8", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "a4d224a7-8779-4f00-92f3-67fab5c0f57d": {"doc_hash": "2d3b5846b539eb49b71a2c64f5e6c78d9eaa0f9facb2a88c42bcf308b9a8d74c", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "1ffe2f44-9a64-45d7-94d1-e5e35f2aa788": {"doc_hash": "7993720092f4c861f01d072b12563427d2d84c1b10a20ccd4f4c6101bbfdf3d3", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "4774d2f4-7a1d-430e-80fc-d7d1a533c6e4": {"doc_hash": "465a7d91468de22174435666c19c30482da01536c1d0978cb099ffb525bfe72c", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "671c6db6-989a-4d6c-ba8d-813f1cf28d43": {"doc_hash": "45ecd1bf829ae80156d2d3b017067b02d64276b421d2255177de84ebc0bc0fdb", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "8f3695c2-c2c6-45df-9d4a-eb3d9fc42145": {"doc_hash": "3b0c28499afc1a0d582a145cc51b3717a4f81185cfe3f07b20d0ef88c90f4c4c", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "f5652d7b-099e-488d-b3bd-b535717b8d11": {"doc_hash": "b5081bb21288ecec5634f3d88f15e214c074cacf38647b674c1e8f8301437588", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "7e2dd0f7-0710-4a9c-ae47-f678af2db31c": {"doc_hash": "3d99793642d606f689d55833464a1f7abfb66a1dc94404344bf342fcdd0e5a13", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "5d281fb2-c324-4701-a337-8240cb7822e7": {"doc_hash": "241ae51683730b184ba7531150a7001e7d436e4d10a96144d9b4fca2a08dc020", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "fd1b1502-9383-41ca-b597-4e9a41308d2d": {"doc_hash": "47d05ea16e94f827dd42fec50f91ebf268bb9eb3fa4e6cdf949b196216976b4e", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "81052675-e1c4-4182-880e-2aafe5249b0e": {"doc_hash": "aa937223ec23d1080d2ca1d16c5756f8bdcd86b6dbf699387e9f12c9047fe062", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "872fc097-e9f2-4f05-a136-f2f6c5567d28": {"doc_hash": "c11d301cac4883782db110edeafdd76fa7677240779a63146d4471750ba05c63", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "3fe385e7-def3-453f-92a1-0930a281e0c5": {"doc_hash": "476951c62ab756d42db8d6f9169d1a011376389efee5d4faf928b6f1545c89dc", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "6f193061-b494-4f7e-947f-f5a9b649aff7": {"doc_hash": "57c7fa11433d780151e798268be65cef36fb07e19b61bf8483e1a072cee811d9", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "70af6a8f-207d-45b5-958a-37a61f1089e2": {"doc_hash": "83c0febd08cffaa93a29a14f3b578933cfa03239ba90bb925fce7578872e555a", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "8beb6183-79ce-4665-815c-3e730e9b4b35": {"doc_hash": "b84296581397cb5242641a04fe1c34201cdfd5aad843b8f0f3fddbed413f56f4", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "29cbfbad-6e66-467d-aa95-21513953c63c": {"doc_hash": "6fcf282232a8393af199a1b93da0816e397cecbcd6ccea9b5f1f980ac8c3a789", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "a702ded8-e037-4848-a285-e54b1847e555": {"doc_hash": "ce8f059d8bc5109badb6885004452be574830beb1ab7de904d3a894f19902c65", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "5dc9b70d-b063-4af6-9863-ca2b6dccc113": {"doc_hash": "a477f64ff98882c766429a16e31e28fb3b60fc8f17e9c284b80e218cf8edc0f7", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "7c2ba3e2-47ea-4554-b721-9af4cdd285e0": {"doc_hash": "2ce52e54d5f75387bc5b81adb588a6aad490615661745bb05ff9a191dcb1444a", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "36933eab-897a-4425-8eed-6d28bb6b3316": {"doc_hash": "c387ee31f07ae37203bfc4273ca100ba0bdc6c535fea98e002a0634eb636c207", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "87293727-9af4-4642-bdba-a7c88ee9644e": {"doc_hash": "0132f0dc9f9d7d5c8ba5dfac09fe5dec421ca275160fcf4305a58c18e5c0770e", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "6e4bf59b-c6b1-43a8-9fd7-7c43c0c0ecee": {"doc_hash": "f1b028ce05ca705d90b513b0c4c831c1381d961e05ba785e7b9a91fc96366150", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "93ad73da-b930-4bbb-8070-f5d2a27a8388": {"doc_hash": "d71cc5c29a7dd8a10f3a0501e1e94064a101a26d1f008bbd95c456d58c3b5dbd", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "17a433fa-2bdd-4738-9c48-0849bf149dc4": {"doc_hash": "9c016b5909cb50c2ea35d8537f9aba1ee0879e46fb81bb1562d7f4c197291417", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "2a017a14-2970-435d-83c2-eb867607a3e8": {"doc_hash": "dd0b52e6c9f0c4e09883d3e23254b969d9aa383841cc59fd681f6c062c2ed0f0", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "f1a413f3-f983-42f6-b543-dc49d1f90d3e": {"doc_hash": "d11587920a5506581224ddf0bfa1f0bbaab707f50cdf11b931cefce3d11b9b8a", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "9af72bcf-7b43-42d6-8cbb-d4b0d789b696": {"doc_hash": "81aa283b475cd0df15e225e795dc89512ec64b3170ed8e70cc053531a21bbc6b", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "5240c364-7eee-4d6a-babf-bc1aa82c208d": {"doc_hash": "28ff200815e64473d9aa5bcaa711452525a0f9ac746cb0622870514f7c8a4761", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "2ac7b8d8-3e28-47e0-adc2-ae9ffe25e0b9": {"doc_hash": "04a952b5458a3d36de87ba14648a53bdcbcc271a3e58b27c56ba4fe7aadda36e", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "efb12073-71ce-42d8-a661-43a9af6c1f77": {"doc_hash": "aa908748e6af0d772ed662a632ba0c2363278dbd295232b43f471e56d29f6a90", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "8556518f-caba-4ca7-b8eb-c8ce3cd43b11": {"doc_hash": "b57b387f5cca7be2552b2b3afd8fe716e5a31f5b96c6d416ac59d42bbd3b8aa7", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "c3a52247-2019-4de7-b58b-5ed8bf86d911": {"doc_hash": "052a44b34635d058040a716ca5c7c4388a4c4285397e5016380367785b893c0b", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "dd0717a7-018c-4692-9358-162d94e2c4fb": {"doc_hash": "74e23f3ba0db4ad45cefe6ad1f9867b0b29bb8f1b91ce2273fced2aa7005fe76", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "b3b5f4a2-db02-4456-b175-1f2ddcd3be3b": {"doc_hash": "bcbae901106e3ae1778bae040adcc6ff19781dfcf8de82c7bf1675797b08f7a0", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "c69a266f-c626-4d99-83bd-ff09fcc1b0b9": {"doc_hash": "240a403fa539e5b018b8dca334faaae9d86757486508a310f1dceee57032075a", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "013a9a2c-ecea-43fa-b052-c494c5e29610": {"doc_hash": "aefaa31ee337019a4683670e827cc416beff30fc24631ec75536c4f7f0153fa5", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "3823b176-c3be-4141-8053-5479b17665ab": {"doc_hash": "7e7b4133b1c0f5baf825505a087b7b88bd66333cc3dcabbfc5acdd0b46393564", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "fc1a3efe-3115-4395-9f08-0ae732f9b52d": {"doc_hash": "59009fc8800197b68ad9e058e9c07aa47189b1b02dfb5ae24d96b0abdcb13ee2", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "d201cd31-b22d-4bc0-8356-60e87cee5f7e": {"doc_hash": "d0242e483f5fd619ecbdc9a9f687853bb105f7d6dd1bd34a35fb965c48e83b36", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "66dd77ed-ce7b-4d16-93e3-549e5294de97": {"doc_hash": "8079a94164f22f4343555f03835c3f09b582dceeb7c6b05d110e9414f979ea74", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "152ca561-b08e-430d-860c-3cc77f75e06b": {"doc_hash": "205acfb386f396e0f86bbc8d932802393a0bfa223a1c773f63d49f524fc840c8", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "9ad32237-b460-4e9f-911c-89782c2afb80": {"doc_hash": "b21b7823f29a4aaf556e328987ec1d81b33df8f291121d7bc7fb5415665b95e0", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "76604b30-b1c0-4490-929a-46fb3ee63b21": {"doc_hash": "909e1c22616a0f57e0d25e7e5c863cbe147f535fd270324dce1642f4d2b231e3", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "0885908d-c248-4e05-8ea8-67859b4b5422": {"doc_hash": "393042cb646ff736280a26931b70da553b01f7d3df201f1da2bdc7ef0691a77e", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "581a7858-6000-4910-abc5-d84bdbd8dc31": {"doc_hash": "b3e01ab22905198c89c2550f065d0158fed227693560ed86abf0c0ff32317465", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "fa8586d2-b9b1-493c-ab65-95dad19173f1": {"doc_hash": "bf010e5ab14e1e7d16c4b1f28cbab0dae9dea08dc3adc5a34530e369837a3399", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "41fc52a8-32e6-4986-93bc-53e620dce770": {"doc_hash": "e3a453b039de2ecda97961029b1c707ee14156e60fa784a344229b30db9ceb03", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "7d9924c8-ad48-445a-a4cd-f4cdf3ffee0d": {"doc_hash": "e073418a69bc4671e7aeb7238a236274d0448fc3d496c4f48fc2bf1c0ce7913e", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "a3f8c9fd-3450-41db-b59d-330d73b0ec31": {"doc_hash": "fcff46dd6262f20ed1c35b171c390b1af23da2602b570b6bed0442b1d1e5680e", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "19fe0c2d-71f5-40fa-8482-918b0b0f968f": {"doc_hash": "c84dc9bd0ab99bee762d53a65cf40a4ea689b552f37a120b6f857be8f5f093be", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "d17b9b25-ebf5-4f4e-9feb-b7302e872e67": {"doc_hash": "e91da190afc5107b52d8898aa628a617f1a6b8b9d408ada44452da0d3de6c4f5", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "d7434bbe-9b5b-4929-87f4-09db6cc8e7fb": {"doc_hash": "210b316e22fc36a7f8b4933cd4c8c445dc669740b5b9f224effa4070b1cacfb5", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "aadcdf0a-70ed-40ce-8d19-5db48210be23": {"doc_hash": "44e7b030d6c849dfd336644f13c2fb4d1e27e3705f995c2990f09e6d768b3e2b", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "ba16a286-8169-4748-bdf5-bd143528bd5b": {"doc_hash": "d0403f310f61f5744072e6beb9ffd5a76acb291c90836e2849ccf629f7d53a4a", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "36b790e2-6c14-4e47-9498-2fc10cca8ccc": {"doc_hash": "22170369958f999a67bc43b4b012d51319c0c7835727d895e39d95a0221a3cb7", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "21604122-4632-4bda-b6ac-04338eb39fa9": {"doc_hash": "043c29346e462f476587ec782fd463529c61cbb4f9f86ae550dd9a05ed55c5b8", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "0216b818-22db-4fb6-937a-14fa96f19fa9": {"doc_hash": "c2795c27ae6aee30b35c8e832a41ad33232e1d0e31aaf668323df0af7420adad", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "dd931f2c-42c8-41bc-8f52-17abfea60410": {"doc_hash": "780f7937da92a220b0a5b84a5c750546e7e47be573afb6012e6eb1620e4a1609", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "baa6ed80-a141-4a56-87ec-3aa0942bea82": {"doc_hash": "24763893b428259e96870b1f327280b7f650295278c42dae259f1991bf71682a", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "19af1143-24c6-4309-8763-d8935d1c3e9c": {"doc_hash": "95f58e235e34968993640275dd0da349fd83739bfcc4242c588b136b61389ace", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "a32973a0-7e9a-4e42-a52a-4147979ce903": {"doc_hash": "fbc212093bf77a0790d66ab228d1a3ab8e4cd0102c4d73dc944ee91b4334828b", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "ff78060e-f104-4259-aee1-17532036337c": {"doc_hash": "224a36a29d1c8f7729ff65029a3fdd30aa33dcaeb1bf2a36d726582afeee5968", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "ac898820-1258-41ac-b93c-ac110fef5484": {"doc_hash": "be264b882c9e07ca74ad47808287eec0105f9fbb1e2a50cb8241d4a8e1b5db80", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "06589271-a7a8-430e-80b5-4871e777c09a": {"doc_hash": "0b1639d84e658f93ed9c81d510ff6633eb81e1542ea4e8a55ac6e296ab97c143", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "c3bd2232-629a-46a6-8332-63a2a0282e6d": {"doc_hash": "6b178d54a96e5898ad79dbd6d78176095b10c95c69e7fc7f3db2848ddbcd3f10", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "47a90958-3cec-429b-9d5b-520e7565fc09": {"doc_hash": "20294e706823989d61d9bf280cefd36cf77da78582d85346545409b97f7600f8", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "77ba65a7-b4bc-4bc2-8658-6e63a698a6a6": {"doc_hash": "9b3765e519ddda402bc704ee02000021261cab32911bbffe0c9b7f21193b725e", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "b670b5f4-1316-47d7-a359-d11fb16188b0": {"doc_hash": "4dbbe1606cede05a08b8547a17983bd84f9416213a972cab35b1bf09a458c6d9", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "53d4e5fd-1205-4e63-91ae-5568ff0f1d9e": {"doc_hash": "f45eca6f8d3e6f33707566cd5dc86606d55c54a9cd0fea3201ef7469aee76b32", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "5f1a748d-647c-4d40-8eb8-1a026f7b61b9": {"doc_hash": "4eebd49112689cdbbbcbc1e7871491bb25f4194eb9b66d4f6f0386996b38331b", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "9e36e5b2-0a08-4dac-aec3-2d1cecb75fae": {"doc_hash": "37bd412af98e8ea3082defe1e9c61a89751bf402dd7bd78dfe45537219032a77", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "c8c9ade2-9ba8-46e8-8432-19155e5071cd": {"doc_hash": "cb2dcc7fcdf7db1b410481cb73a84986ac959c15175f6d88cfdf0777149a4b61", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "6397d877-6252-4cbf-a351-67b5640846c5": {"doc_hash": "1b5a641542afc0518cc1cc8b7456e56adce6d076b565ca13055279aa9fd29ed5", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "84f89005-db53-4885-9dff-47b2f8c019bc": {"doc_hash": "9820348fa5fd535cb7eb4852189bdd8440c88307e8d4e0e31beaca7e62dc1971", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "1e3d5183-8d7e-4290-8a11-cd1347e02d15": {"doc_hash": "3d6d0a330d7334914ebc68337621b53b6cb09c4c05661f3d2d2da41d3cb30bd9", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "89fb4bda-19de-4c9a-8784-6df5f48e49ee": {"doc_hash": "58efb054e320d1a781ba8e780621c2fc78a7120821196f536f09de7ebd06caca", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "034df081-5a94-448a-bb61-b39c09845219": {"doc_hash": "9d2973f8ebcd3b0213eaf66478e1b62a62b9317b6463606ec93708338d0d57b4", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "b690e88c-8c69-43ef-ad68-83378fd77ba0": {"doc_hash": "dbe66bdac423153a0fc3d4d5a97acfe422f39cf22859b2f3ec6d003e377f14ef", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "25ce210f-0adb-4cfd-aeed-d40fea7f4d0a": {"doc_hash": "7e3311d6e64cc0c93800986d167fc2a23501fbbf17ea5da00f7c387b38c14cf5", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "0f0ca2b9-ccad-457b-8a8a-f14a2b9bc03c": {"doc_hash": "145adeac6ce554fd9a9f1bc78794c6db4f9ebc293775a449ced1840f180318d2", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "2fc1a321-1097-44b9-9340-676f4bc0b449": {"doc_hash": "04c9bd33a719e8c1944bee383b90a2c8deef8ccbb04df966e250aa52950bc7a7", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "26be25bc-cda0-46cc-98d4-e88e355e62e8": {"doc_hash": "27d6f3f067c0e5a0dda788a93c26faa5b206226c4ac962d25fb2c39b2d3d8677", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "8db665e8-8f39-45e8-9fd6-2e49ce326b4a": {"doc_hash": "42c9060d4adc1c2ee85708b6e6c4fa1b7a984f7f1e6de7fbc09c718f1bf4c4c5", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "9c493a62-295b-461d-8956-150a6135e130": {"doc_hash": "80e015a31983fc786ffcb09b7f9514d155698208a2a900be4f53aad0fd8ab8eb", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "c133f493-f6b2-42a0-bce0-dd5d40742b4d": {"doc_hash": "ae758ea528f7332404f1e8c39d58816bd65a92e0647880ef680c9a68e57e72fd", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "20d076ee-db9f-445d-a038-e99f6c94ec00": {"doc_hash": "d4d7031d00b1f04bfb589885beebd8e249d15c6ed2505c6ae588e1b88080f38c", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "1b727395-91f1-4e81-a6c8-be495808db92": {"doc_hash": "fbb74c51bd66fb8eb2f134c10ce44cf1f1c3366e1969303b19c96df1a3200b1a", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "52d40cdd-fd55-4801-a9d9-6a084bebc412": {"doc_hash": "87f9b17642080ec71f718abbd1da6346fb88a6913d82b69c15a190a45ce36784", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "11528f83-27ae-47d3-8917-1a9ae9e5479b": {"doc_hash": "8e4a024db1a880ca9f5c04ab727795df7eee08b21e39b004436247446db7cda4", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "3608bdf2-f30d-451c-b496-1f086095a943": {"doc_hash": "6ff14e9ff55610248e593c7770cb1263f95932626ddfb5e70cd985f21a35498f", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "d15c561a-9b4f-4cf5-9044-3509b38cbcff": {"doc_hash": "ef3ea6d127cc930c90569620b47b9ec2b16aa1a45b3d5187524d7287a17482d3", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "0bc9c9d9-6aff-45a0-9956-0ae37614f456": {"doc_hash": "fe0649d22f88adcc28fb6112145f4fdb141b73217bc4fe53400979507872e142", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "36a84821-aed8-4b03-a1fc-7539ee102535": {"doc_hash": "0fcfa15b9c598dbeaf37a0ec3ce9fb722d81b5b3b1198b36d7256f07f44054d4", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "555bb09f-ecce-481c-a345-e654ed0ff5d3": {"doc_hash": "00141358e93ca3fb62ad44b1fdc49f59755ec352a54dd4dcf9499ca88e1e27f4", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "d30602bd-f3f5-4d0d-85e6-13d33b4ecd5a": {"doc_hash": "bdc82560bdebec7c8eabfaa4ed309b559edddf656df21c3e7105710a16cf80b8", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "db9f3d33-6b14-4797-9c22-1e8bcd80b604": {"doc_hash": "646a85c24298371219f0ec1f8debf77b308acb4e545c5a96318d8199f6908e5f", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "7d27379d-f8a0-458b-ae8d-b87637254b08": {"doc_hash": "69eb6f66d1fcb9769500c26a074eeee47b03a8fd890321206e61d990d4d68323", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "f41d071e-9434-407b-8fc9-65ed14879d97": {"doc_hash": "3a49273771d951c62147979dafc82fb0533b95897d625a8d13573cb15491e317", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "4b742297-abae-46aa-a775-8299292e19c0": {"doc_hash": "d11c21e6dce550bbf71b6cc75f08fbdd349b938d2b4bf79df8de12cae6519c17", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "62c26afe-62ea-4316-bb5a-3d066ea3c2d3": {"doc_hash": "f5cf2784dbd765acc025c5d5c9aebcc39560ec96d4e1a1eb4652d8100fd7330f", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "4a6b5ddf-215c-41bf-bcd8-dc05d2c13196": {"doc_hash": "515e8c8a9310e6e7421c7886f3fb00ef5cf38a56758f5568ca977f3f30067abf", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "f71a58e8-bc42-4ba7-b6aa-dfcfb05b85bc": {"doc_hash": "13d28bcb81c7751e38ef756d8ba482f7ad445a7824cc50792a7564216f7ac773", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "bfd37cad-12ca-44b6-b587-bcb8d8ca19b4": {"doc_hash": "a5bd27898b09820537c15b567e461184f670c11222a5c3ec5cf68a88d878fbdd", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "c9a77129-d5c9-467a-a733-d7fa5fb18f98": {"doc_hash": "5aeb282a557dd785e6eb81be1a03728df329ceb8a69d88db85f9c0eb375641b7", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "717873b8-e72f-4bcd-8fc1-ddb3babc920f": {"doc_hash": "49dbb0d67f31e4da078fd2220dec40c591a83022ba61a7f7a4536c7688c85ce7", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "56ca8a26-ef2b-406d-b4d2-c3a29864653d": {"doc_hash": "441410424a28f9e64e07eeb49ccd98bf4305619958ff5abc999f4e8d75815112", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "5e16d50f-22c1-46b7-8a9a-4cdb6dd81c57": {"doc_hash": "9e5043a74a4d21604e45dc7eb242eeaad1fc86eba376dbc0cfa5a9c1cdf4729d", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "7e6f9652-020a-403a-bef3-1aa174145307": {"doc_hash": "01bfb2a81907abab1577775857812dd581d205e4bc1f72c2d31758313902297a", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "0ee16332-a899-494d-9fb2-641f890cd0a7": {"doc_hash": "74cb47f5bf6d8cabd9e9ee9689a771a2f479d9ecf6d8c58f50093d2043c4c090", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "34e0944e-dd01-48bb-8a50-43ebcf06908f": {"doc_hash": "7875dc07481b26713b5ba50eef08fd2bc430226196c1097dc2f51404bdee079c", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "a4ba050f-1079-4011-86eb-ad73e61f1465": {"doc_hash": "c0e2f9670f01767476e94ae9f98a1bc1871d5bf507ba6c776960c0fdf0d6c581", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "05595f23-9640-4d80-aa1c-2315b900c314": {"doc_hash": "885e5042c3f13549c445f70a3942b97865ddfd3e8a3ce90daa12d5b5b822a527", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "1738da19-dd60-43c4-afda-bb8dc726536f": {"doc_hash": "af24145e0b0be4759c6c25b524084a40d358f6f6971cdec82ee400a592313829", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "bb874048-18ce-442f-8fc8-ea8ecef10972": {"doc_hash": "3a93a270603d64c4a87419bdaa0979b413839f12e29ea5f3e33807fe67b3a5ac", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "4f312346-7d5b-4cbf-b9f4-ffbb252900c2": {"doc_hash": "3366ada638fed05162fc6204b817953cfbe7407979786ee7f6e08c537c21a267", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "b051a8aa-6fa2-42e0-9753-96b7c2c1794a": {"doc_hash": "7543704788e9c84ec89f3e245239b3f050f953ff5c626e2494302c848de78862", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "b8f57bfc-9640-4afe-9e54-c053bd16691b": {"doc_hash": "48c0bb8813b5687ef6a24f53cbea9553ab868db9d4863be601d76ecf166facd1", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "a5908b7c-b7b3-40d4-9f0d-053c90b7bbb8": {"doc_hash": "55792c629b6395a81caf16439a9039b594fe5b082a79c95f4d830ade8f210265", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "5057ed14-d0eb-41de-858f-e5768958861f": {"doc_hash": "8b1085846c7d5cd270bcd312baafa83825080a047a5f5514a98bd35f6db8f961", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "80b38e19-be36-4e0a-8243-8105347245c9": {"doc_hash": "3392b02f1bd0016f2ade6b2046725d9170ece8468d3a8dec769a4c489a771881", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "d3f2be16-a68d-4617-8e7a-174fb368e777": {"doc_hash": "4731f95361c126fccefacda75d471c7a8b85224d01ba105f54a92d444149a077", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "3274847c-28ec-4afc-bd53-40e62cfac0ae": {"doc_hash": "3478711841ce96c323fa453c52e164f4c8a99230dc1dd745feebbdc915cdd7bb", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "8ccf9d8c-7152-472f-a070-2786ee0d6260": {"doc_hash": "25c14a565ef39efa84ea8b81ec776acb8df86168014cad3d240a23725a2201ce", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "f28753c9-9dfd-4076-b4c9-84e177465b6c": {"doc_hash": "fd055d6fd5b107d41f0dbb4bc2f6629133ad38149ca962a44d4f740a2c2c317f", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "b8a2f7c3-4229-46d1-8af9-fec3899e081a": {"doc_hash": "5c91bc5f78266282356f6cda59e72037c5d458ac4572c767f337a778a6ded0f0", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "d457a4c1-1502-4be4-a8c8-27a730346fb7": {"doc_hash": "b804eb1ef5df5abdebdcaafc58994655e6452e31418efdba8fe9abcb6db85b58", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "5479d43b-2951-4481-abde-c6ff20ef385d": {"doc_hash": "b2018b5b3793c8eff8c4bbe9258d41541cfcb80b10d4b0c32deca963c823c2cc", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "3a0c6bc6-3737-4f0b-9f59-71bfae5f8f47": {"doc_hash": "dcb6dc0813de0d7d9b22e4acb7363db218dda82aab89e4a7d72f690a876b24c1", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "d6bfa225-16fd-47e6-a137-ce3ea552f8cf": {"doc_hash": "0ee07c5877d7ec3977f0b81cfebe0a388a8290e6235a9dd8e883b2ba0cac033c", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "da59beb8-d60d-4a24-8995-a626f17739dc": {"doc_hash": "966e00885310e59de51fd6422ba8f6bba7d17fc509d3c6fd51a07b615142ce54", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "9bbd732e-c81a-44f3-8c7d-a72e71e26fc9": {"doc_hash": "8c188d5c670b4fa6c5f551496ad3361778175accc2aeac124c7b574b45fcb300", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "d6916eb3-7fee-4541-b40f-36e0fb62fc52": {"doc_hash": "037aeed76c0ce8f11c7b0370bf1da12a4015b0fda01692b151712a04bd43a7df", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "a6aafa4b-e41b-4d58-9035-ceec79ab4332": {"doc_hash": "dc0c85099a47e621761e123a2cf34f85e3168b380c610d8b78188c8f9f49492e", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "4b9d9df8-7304-4e0b-ba3b-57938b86a92d": {"doc_hash": "90ff65e5d55e7d318507102c995670f7c62235b00e38ab77d135ffd8c16a1b96", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "e12aecfb-3cc6-4984-b3c4-295abf7d1569": {"doc_hash": "a2c15c5ab1ed059e11d6c839a55b56419875a0dc6d2e89e818361f62d631449b", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "79f34316-2bb1-45c5-9e2a-5b3f53d79745": {"doc_hash": "51277fe96735ad60d39b94773c8d775dbfdc895e51423595e4667fe61a73585f", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "2ba7f64a-93fc-4d1f-bcf8-0ae65be8dd58": {"doc_hash": "3d46f7ccf1c36bd4d17101287f95f32b5f5263131a527553179459ea35e4cb62", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "bc9614c7-a204-4372-8074-e0feb1b95a3e": {"doc_hash": "693ad7ba16a5c339455c4fe8c0cba308dba61e13e09874c8a9d2c8f86066e599", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "9a0867e6-6abe-49bd-ab70-d90847bba751": {"doc_hash": "12a4ba99d55e3b1d9cfdc63bb02d10d2ce1d9ba922c789fb50656005e4fc3d80", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "62adb358-3073-421f-bd81-7da1f7525520": {"doc_hash": "cfe50b8229349d1365293e8d75d157fcd89acdb74bea07b4d50e4104985aa55b", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "089cf8b8-8d6a-4340-a187-778043d3d95b": {"doc_hash": "9cac662d21bcfe95a2cf2931234a9eee0dec18adaef189ec1d25b62ffd7afb49", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "48353f9c-d44d-41f0-8e9c-435f0b6c902c": {"doc_hash": "73940264a598787badc7cfd3638bf599e29d38eedd3fc2b30cc02ad3cb0a9239", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "5cf5534b-c344-4867-9981-625c04333a39": {"doc_hash": "5bae5f40e6f17ba7620816b97e5b51a477ea94a42c4e14d89621c3859319ddd1", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "2ebeeff5-8495-4db2-82bf-322ec2127124": {"doc_hash": "6a9b3e105671e5d314cc0968cb465932fe3ae108312f313d428f2d6529b11ed1", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "7957cf29-c73f-448d-b81a-8194a1d25fa8": {"doc_hash": "9c2d5ae413d046e6d3268d300c51974e6ee131adc9aba79c6a1335e63268ad61", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "b125293c-a311-476d-9887-60187fe62823": {"doc_hash": "d3e00961239388e4b51803ba80a779a18ecf41b2246f17bbba26b98a9ee0c841", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "3f03f971-d411-4b94-9723-de077acda599": {"doc_hash": "d306dbab8ce5fc524fbf0a71d8c99cb799c7351a5e5e560d4f82f09906b37185", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "baf81663-2302-4a01-b9ba-258b8e310aef": {"doc_hash": "b663815fe83d38788b2bad3f2e295e1ae797a0cd949b419e2dbb2a75cb28cfb4", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "efd95743-4377-4a43-be40-6cd4a74d4289": {"doc_hash": "4bb8ddcebee157763890de4e2805d6c145b76792d7a76e5cdc88e94d4d25b85e", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "512a2ce5-1d82-4fcc-911c-772c9a384a42": {"doc_hash": "c2b3b32bd8239ffcec09c9241c676e50f66030b8cabb6f2df6eecfba6ad60814", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "90a81d39-71c8-4b66-8eec-78e356a2dcda": {"doc_hash": "3bed9f50a78e649946b236092c824e40d92a0da7cd7c7abde1c4d054eb13000e", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "c89328be-a227-4ad6-89c6-702be9e8c7a4": {"doc_hash": "0c339f5ff419420a24d4adb149105a3deaf00df285574a29e53efbdc33e5f890", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "8a3350cc-cf7a-4160-9acc-41f1eaed15eb": {"doc_hash": "029af59867c0785e8b6dd4ce07aea0af8757c73f12b9c42fc8e12b08e914ed6a", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "36282591-77e2-4472-8f10-ca5f240a3164": {"doc_hash": "1a996ad62582dd9fd33cc9703772ff6d2e2e922a21e6bc821ac2f88151dee8c7", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "aca74c6a-d8af-4d20-96e3-31bffda771db": {"doc_hash": "19eb7a0e128f29d68c6c5dffec9c901c02892505f3065337a09af395a329386f", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "c02b0dc0-657d-4bf8-8128-ed701d136328": {"doc_hash": "d42a5e468d2897498ba556bd746a7ccd08e1f24712cbd32679952a429d673941", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "7000890f-6c66-4c35-ac05-d1324d36e0b2": {"doc_hash": "c79bad091baad1ad06519959145b74a214e51949174e7d50029f3a26915dec81", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "b4d9eb1b-bd4b-4a00-a367-7fac4d148c33": {"doc_hash": "ef0d2a75a3acfc22b7b0280d4061a62549dce2f47748fbbf050f7d1248000a0f", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "2d8e528d-85fb-43ea-b81a-050ce0549a3b": {"doc_hash": "017e76e8442b8a0622d2371be35a0f3b626bd51139f218859df198d1ea15ba67", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "9f0e2522-b906-463d-8ee4-d856dec7524c": {"doc_hash": "7232bf80928ae02e2bea85532ef5f0df2ecc442727829943e29b62c609398861", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "060ea210-9f25-4d8f-bd2e-970a21df63db": {"doc_hash": "52013ce9fee24a43891328d81dd5337e4695b8943e91aa7a0089c1b31e80aecd", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "770a95a6-a554-4e3f-a62f-56782fbc559c": {"doc_hash": "fa282c183237fd2f00fd0eea279703fae4649c1ef3116682644bc4c4bacff3a4", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "2f72524d-9ce1-40fd-a620-10e1463d27ee": {"doc_hash": "1ca5bbf74d70d021258251f54f6165e5b9764724f4def00ba300233749c35abd", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "13863cee-ffc5-4598-a4bb-f9dd160aa6cb": {"doc_hash": "88932f0bcbf1eb64d07e0413606aaed9d0cf2c8a221fe481804221304ae02d12", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "653b143f-7277-484a-8f4e-66d24977ad96": {"doc_hash": "6b38575f158feeb4eb88160135fa51333e41b8bc5515d29ebf02303bfc93a3b8", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "92c3296a-f7db-491c-8584-2728897cfe6d": {"doc_hash": "fb98eb69127e40ace324f95c242937b2c8a072d8659408493fc680175f9c7885", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "600ecab5-5a16-4890-8eea-c9d46ab95c2e": {"doc_hash": "025cd0c0ceeaf2add0acbe1852c70ba5e65e97f38a57f89b8dc7d91d91dbe00a", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}, "29b76b15-96b4-4dec-a700-71995085daf0": {"doc_hash": "62be52373e7ff5320be6ef5eda1fe7ae43654a9c2bafe613d4516ff650629f1c", "ref_doc_id": "faf1fd50-370d-40f3-a584-19ff02fbe919"}}, "docstore/ref_doc_info": {"faf1fd50-370d-40f3-a584-19ff02fbe919": {"node_ids": ["ba8c4dd2-ced9-43db-a5e8-29d7d8155828", "0129a81e-c476-4369-b096-1bfc7132d5b6", "ec93a1fd-8a9f-492d-90ec-ec72cc2166f6", "5b37f427-5b47-40d0-bf79-a020b02747ac", "9820bd76-52ad-4d76-a299-ce6aaad2d619", "0e3d4afd-db7e-4a20-85fc-3433bed3f402", "6d05c069-f995-4871-a6a5-1996a4a9d8d5", "bbffa6d0-1837-4113-b1d6-88c66a801060", "cacf6547-8f7e-4073-a27c-8f29e73f193a", "82067e65-e783-43d3-bc7a-ce05b4b00d0d", "1a84b85d-b39c-4ab0-afff-3684dea944b4", "b578b6bf-a334-46de-b8b8-f69eb8edcaba", "a3c5fdd3-166a-4c90-b1a8-c7f4272a0965", "412fa60f-8bac-447e-b1ee-d0fb7494c16c", "894c1340-d0f6-454a-831c-28d42489f639", "6524832a-950a-4bb3-abd9-acbe57ba2406", "74b8c932-c6b7-41f5-91e0-c6a20d3ef13a", "b9071b6d-a92e-47b0-a73d-a116beafbbe1", "a0ac8be7-2343-4739-b1bf-b639d7a83627", "7548a93b-2042-402d-9663-c9cf58f7af05", "8b80bc92-fa6a-4fc1-a38d-15ae1f43f48e", "dbfd4b04-0039-4fa3-9ced-4978c625aca3", "157392c9-14b3-4239-abe6-c0e6b2afa370", "3e466a67-6571-4e0e-ada3-07c55a9a2a69", "23c3f2b8-b98f-4f91-bfad-eb7a245bad97", "c1517d4c-3d41-4412-a7a4-1e3b2a3bb783", "09e1c915-353b-4835-a613-f85f9720452a", "c2721a5a-8852-4e29-8d5f-62a65709c385", "e12349db-35f7-465b-9a2f-fefa4446054a", "2f0134f0-97f4-4add-bf9d-8f93c7a723f5", "d43edd0d-285e-4d1d-9f48-510ba80a26b2", "d05612d5-1fc2-4b4e-8b23-b654fac5eb54", "12c6529e-5bfc-4cdb-ba1d-b346b537ddbd", "5f9803e1-c78b-4516-9676-7c3d59f5e3c6", "d5e7803c-fe7e-4397-9d57-b4d233d2940e", "a86fa115-9666-4413-803a-f9bdc2b3c705", "64248c25-68be-4d86-9036-2bc5ebf5087f", "3ef22783-da6f-428d-bb12-7e6c2273dd61", "5f4ecab5-ad1b-47e9-822c-0f54cdd8ccdd", "9ff3ce2c-0379-406c-a8eb-1ab0013304fc", "bd41e00a-7043-4f68-bb92-5ffc9c4dc1ec", "73d1e212-4483-441d-bac3-f8be01007682", "17985ccc-408f-4d6e-a15e-a1062fce4a0c", "5408125b-8b32-4b98-b9cd-05fc3aaa7fbd", "e686929c-2133-4304-86df-a8dd0e707731", "a47fea3a-8340-432c-ae40-5a848af88020", "73aa9fd4-cd64-4cb7-bc2f-382239d749a9", "c12f4d5f-a272-44f4-b3e0-9523ae6c5611", "41954dcf-ce49-439a-bc62-a757a53c772d", "a7e422d7-7aa7-4dfc-b049-68e45ff08ab2", "8cafad7a-b7ee-486a-96f3-35f93d97a364", "d2fc6b8a-3b33-42b3-820d-a7b3ad8d0304", "f97a944c-98e7-45e4-b396-0b516221ce32", "471f0d14-6eb0-42cf-9816-a59b40804092", "1e840b1d-d004-4bef-b8d7-b3e8c18e24a5", "e483f6e7-c8cd-4cc5-88fd-128fac2f4344", "4735e27b-8cdd-4d13-999a-53a4a9b63e9b", "67c202fa-af61-477f-8edc-b4ec0a297225", "b3a1ad44-d0df-403a-a8a6-296508bf145e", "1ca2d322-aa94-4004-9761-cea3350d9aa0", "5427e50c-c0d5-47ab-843d-455abb2954c3", "46c06b8b-f6e7-4470-86dc-f4c7fe815a21", "83bff032-4712-45a6-8a31-ba9c65fa698b", "aeced65f-b145-4940-ab80-ede84f1c5d67", "cddeb800-4135-4ae7-b951-9c90c2298dee", "ad41c290-bd3e-4411-8ac2-5560c265bad6", "ee009c33-67bd-4d9c-a8aa-a973b3866530", "a55c8c92-8ade-40a1-a42f-f008eda9d766", "27cb265c-8a30-4a47-a431-56e87c0a3422", "fb053235-5ae2-4f9b-bd35-e0e6f22d0db6", "b00aced5-cdc9-4bd1-ba06-97586566fc1e", "ff5a7c25-0652-411a-93ed-b2bd0f2abd38", "a56a6a43-464c-40ce-b47d-5c91b46df98a", "663ec1f4-8deb-46d6-9e2e-da95ecf8e48d", "6d41249a-c560-4f19-952c-9d4aef985451", "4153621b-fc78-4b98-b9b3-e372de826ce8", "c57a2913-0d23-4354-ad83-71e73056ffc4", "904b603f-e9f0-40fd-afb4-49d424dc6962", "09844597-bb35-462d-ad51-b956020e3374", "4602b0fa-2ce6-457b-b66b-b9fb64c4c3be", "0d595c8c-a021-4a78-b184-9314729c5bd9", "4673f362-5d18-4d2d-8dae-10a7c46aaa4b", "ec3c6d6f-16ea-4410-8ce9-2095469f1087", "c853d148-7048-4b17-a508-9043e42101ce", "6fa6ed9a-547b-4f00-8761-032f734588ab", "eedf7998-053c-4daa-ab05-742ed7045c8a", "60fee7ad-cef8-4586-a350-1acd16bd2450", "2931e386-4f81-41fb-91ee-171dee4def7d", "e415415a-706a-43a6-a9fe-ce2113ff0e6b", "13d4710c-a3b5-4ad4-9568-3ea329cf181d", "4b7cbe1b-3050-473f-846e-610ca9efa68b", "0a61637e-320a-4481-bfdd-042145a23dd3", "e0d641ad-f162-4be8-97fe-7e6e671ec6d9", "0c5ca7cb-de13-4d4d-add2-c603d231e3e6", "f5bfda18-f49e-4d83-b4de-20046679630a", "64b393fc-fc47-4ba5-9e54-86cd37dc4bf1", "b3124ff6-651e-47cf-9d2c-c654b988282b", "52686205-a159-4572-b140-d1cb8540d486", "94af2a57-93e1-4ce8-9ce0-dbf9b8b32749", "09b63a4d-ccb2-4e21-9a27-da05e3108553", "3f775351-a3f2-4c33-b08f-9aaa193b9df2", "de12f8c0-636d-4128-b0bc-a8d6d7cb1750", "06e2c2e2-40e8-4468-bba1-aa66a97c8aef", "3c046325-e860-415f-98ab-681be9fa9159", "769aacc9-d946-4337-8f03-c728a0d8a8d6", "b3859fe6-8e7b-4d29-a6c7-49c8b81b6d96", "5eeaa7e6-8d18-45fe-a9cd-1a6bc944491a", "0ba589de-48d4-4c7e-9760-fd1b34ef0f48", "88906bf3-c206-4b3c-8df5-959bd316db29", "6629f93d-e1ec-4a70-a6c3-ad0916631bfb", "a8e8b03b-687d-44d0-9ac4-e4626dca0505", "d6efc806-1f57-40e6-8e6f-f74f92e83b10", "0d0b9e35-5b60-4ae3-923a-046802078e1e", "bd8537f2-34b0-4ade-b16d-20ed78f12df2", "3b8ce35e-b417-4af1-82e5-fed0affc7e06", "a116afc0-b278-4c2a-af13-1d87a75f254c", "5e7447c6-088e-46d7-aaa4-dcc336d40fa7", "4a5c46e1-5405-42ea-99ba-1476d7cd2f41", "acd0198c-4d91-419b-82a9-7993b67e277d", "5733258d-aae4-4beb-b60f-05be5a0c6246", "b400211c-cf17-41a2-a26e-b67fbfb6a6f0", "558f27a6-a184-4775-a361-1e91054eb1f6", "b89bec4d-3970-4d98-903a-46c76677a95f", "53596b48-6085-445e-b3fe-caa0bc0719cb", "24a10c4a-6e63-47e1-9d47-83ffb276d0a6", "e88a8c60-eece-4ec1-afc2-d9fe8cab4678", "655775a1-af8c-4b7d-b33c-646e1d73f94c", "a4f016a8-fadb-4331-ab74-78b85907137e", "c4671bd9-a69c-4fd6-b414-fa647a70ddb7", "9e12f918-327a-46c1-8e4a-464e4e7330a9", "da2cec8f-4938-4c5d-b437-9193ce3ae2b4", "fd129550-b226-4f27-891e-6449af3b0425", "389170f8-d253-45aa-b010-d041dd158029", "82f15931-ce85-4895-a5f4-044f1fa04213", "7890cc53-e5a0-4234-83b3-d2aa4f9bf941", "ba8f7981-bb0a-41d0-b47a-bdce70b2cf65", "11426f68-fbdb-4bf1-af98-0a437bb2c145", "13d13ce1-35ef-42e9-85dc-4bb3bc5e8397", "d81617f1-917d-41cd-982e-0f2f959d610a", "d51ceb86-2093-425b-971c-1804fd98dcc0", "138c94d4-0b76-4a7c-8302-5eeba39be8ac", "54fe4db7-2f16-4bcc-91fd-5bf471d11628", "9d6dd1e2-de16-4122-8f1f-37b2fbd19650", "732ede0b-c7f4-4353-9810-002a775e1d8a", "83b6ef6e-252c-45e8-b87f-25b0d46cc231", "a47d0acf-1417-4ad6-9226-f207ea3c8501", "f89d57b2-0802-451e-9df5-747343b44248", "1c72995a-37d2-4b41-acdd-3c0ea046ea0d", "e4f6928d-29ad-4a0e-b339-19a733962726", "1252d39d-c4d6-41f6-86da-3d019ddb1b5b", "53f4bdb1-f6df-4dbd-af07-0ba70e7bc384", "12c2b752-7d4e-4398-bde3-27ecc1b42a57", "ff7c5fec-c554-4c9e-b6e4-20cb497138cf", "3e030e8e-e8ab-4402-8a6d-593ae4e361ed", "2984b406-27ce-4e64-b48c-bcfb6f8e51af", "9c9aaa41-6e2a-42e3-a15e-478694e5ae94", "560218bd-4a6f-469a-b570-969eaee48eb4", "5871c2f5-3dda-4d51-a698-bc10d3b29e7f", "de6b7fe5-6c58-4dd7-84e9-cbfbda6c9fc3", "9f9ccbdd-b443-4a1e-a064-d00ed892e2c2", "e4fa705e-1106-45fc-9489-340890dcfaba", "0463259c-3c6d-4f6a-8b88-f293e8d9c284", "2dadce34-d2c0-4f3b-8820-3abe9728c4ff", "918d4750-1e38-418c-b4eb-7d0354d5a8ee", "abf9f6b0-2e3e-49a7-bf7d-50dd1ccb1516", "0d8e16d3-3d05-4e62-87b0-fe9f42b6d973", "6060b617-9ae3-4a0c-a3d5-390ea3cc3217", "120d0e91-35df-4138-a074-ec81c23092f1", "2fe89b2f-7919-4170-87f1-8299c2cb2d56", "9978d525-dba9-4008-b071-6c35d78df33f", "fbd9b7db-b1a9-43a8-a451-08fb6d643d60", "e1ed24ba-4878-4707-995a-2a2db33e9f4b", "e7f5d47e-6f68-4fd3-9821-11d09d605a97", "2b37df9e-ebb8-46f7-a4fe-7d8202fe6bf4", "6855f5bc-64b0-4b6b-ab34-e53788bf8f35", "8256fc98-9a3b-421b-b3da-95000240ef7c", "c87f47d9-d453-4bfe-b661-4fd3e2cbd006", "4a56225c-2b25-4147-b844-ef6abd62a017", "faf247df-7443-4d8f-a985-71ebc163312d", "5398bc70-9a11-4af4-903b-f987868ba4fa", "bd399c66-11dd-4b30-be36-f1e2f6b27af1", "dfce174b-daee-43c6-a72c-512302fc000a", "2ad1e2ea-cf46-4abd-9551-a0f66bbbfae9", "c5ce600f-9ea6-473b-a6fd-4d9476db96a2", "c39b45bd-812f-4b22-aa30-6a2745260e8e", "b9b89874-b531-48fd-b901-b17ba4a6b4a7", "0d4e1258-834f-4fbc-864a-69bb958f0250", "e9e87a31-e521-4f26-add5-1fa5cc83b2b1", "71dd5542-5b9c-446e-93bc-c61f1a8f5111", "9244f949-3dae-4948-b254-8f330087c636", "2a33f8c6-0e04-45a3-bb0b-86c970d3818d", "f40885d9-9854-4777-8807-233cea9865a7", "cea7d83e-ca48-4300-b6b5-ae05af4f579a", "0a490115-33d4-46ff-85cc-d13f0cffeb5d", "97565d28-5833-425b-a97f-2ad351d486a4", "554d8454-664e-4d02-99a8-dc445b231738", "90dfb582-199b-4336-8561-af7f3d222930", "bed6bc18-235d-4127-8e52-08f2ded50876", "01541a09-2aee-4102-bffa-e8171960cb7c", "5fef8831-14d6-4bc7-8579-8d2ac35bce09", "167676cb-c620-4532-959f-b490a6cec2a4", "3ca598c6-14e2-4e21-bc64-9086965962e3", "2c4e9599-0dc3-422c-b512-819573a121f4", "a2792d4a-2701-44a1-af5f-1ab791bfc156", "9d6866a2-a9ab-4dc8-a062-3ffc0769bb09", "d2fabb62-79ba-4704-9f1a-bbbac7b4eb55", "8330253a-e2eb-4418-86cb-ff01133b90a7", "980359f5-2bd7-4682-aec2-4d17b6a17be2", "06c2a17b-c2c1-46c5-a542-eedc4da933ff", "407d5142-618f-4e0d-b085-f2bc1e42f049", "5f38e1cc-7ed0-40de-bcac-e0ee086e6eb9", "970789e4-2146-4bbe-a23e-0f66749b44ef", "1b2bcf9b-d898-4068-a91c-8ceebe18ba17", "d64513af-c80b-4871-a8cd-6a12bb499b55", "3c7f1760-8315-4a5d-9021-0409b727c3f8", "aec98491-a6aa-4682-8156-5d56d2ed8ff8", "5e1191cb-b28a-4fd5-a978-4e2dbe1b2759", "f9427b1e-ad15-4d30-9936-105fba22f021", "0bdeb975-a17d-4f48-83cc-118021032748", "95e8f49f-3498-45ef-ab1e-b6b84862fc33", "4e0742d5-a291-464e-bae1-6e36b6257a69", "82045510-e880-4e6f-9687-1b57f30c03f2", "c2ace729-61f6-4231-8048-6b2c1942e13d", "740360e6-b35f-4722-ad2a-18a58664e540", "1f5d39fe-327c-40d2-9f66-b14f3c9dd024", "4b9cc138-7e25-4618-a514-96ab2282041e", "95dd6837-438b-4c0d-9bfc-258350d215ca", "256eb066-8499-4edf-ab79-41fc5deb103f", "92df3f81-936b-4e93-a147-3f14704be827", "6a2652a2-f5e5-4a3b-81a8-89aacf398731", "7ee67fdb-fcd5-4ece-b603-8742cf3619a2", "8c281032-c249-42de-b36c-d8ee871b3803", "0b969fd4-c137-4acd-b272-208d00f7d49a", "4930c93a-230d-403c-9675-1eb74ea812f5", "46791f14-864d-4812-b012-f1984b15435a", "4cfeb977-af54-41b0-b681-681f662dfb8c", "815b3681-02eb-4dd1-9194-de2466b9b063", "e370a1da-7e9f-4f52-af87-ee2e34a1a22b", "e449ba67-6b3f-467c-9c37-aa87fb81e168", "b224ec18-c917-4558-8912-0c340d682004", "718b7258-497f-4a7b-9fd3-c897e2b71787", "9e177f37-6ba2-4e79-9c7a-d1e9127c901d", "6336db00-0236-439c-91c2-48c301597882", "aab24697-8302-44fa-a871-ded25764baa4", "f0b77da9-5853-468f-b7f6-98c97632501e", "cf0bf3b5-c0ba-4867-b730-a052a5a9a319", "6941ba64-e39a-4bb1-a9c2-816bce61d0b5", "14ffb241-7518-4acf-9a91-daf76ad4bacf", "4c3bc92f-712b-4f5b-9e3c-5c6ca73ea05b", "2a4374e1-c0a7-415d-9b59-162d89743850", "b8187973-a78d-47b2-aa0f-20ffac8499ea", "da0bb457-8323-4e05-a99a-e584ff4d81e3", "b38f1308-86a3-4ce3-bc01-f4d1d22f5787", "23f7d6e1-b956-406a-a334-555ffa2f7847", "dc70475a-13f2-473c-a551-7e10b5cd8562", "bb8df131-75d7-4feb-a496-b145e1c25cc6", "5259bdf5-5c8a-4d53-8091-f40757bccae3", "8b015bda-90e9-41c3-ab02-c938c58fb6ff", "86e24653-2bc6-4c23-9e68-cac4d9860fc5", "f19bc2b5-0c7e-4ae6-937a-2ee3992c4c44", "403368a7-2415-49ec-994d-76585cfb4e8f", "6e49e5fa-9a4e-48ca-823d-7d8cc9f1d32d", "86247504-f35f-4815-b90d-15724fdf2818", "6c32c346-1a71-4aae-aa9b-5e79d4a44bbe", "1bc3c084-6786-4408-bc4a-707a37147411", "a4d224a7-8779-4f00-92f3-67fab5c0f57d", "1ffe2f44-9a64-45d7-94d1-e5e35f2aa788", "4774d2f4-7a1d-430e-80fc-d7d1a533c6e4", "671c6db6-989a-4d6c-ba8d-813f1cf28d43", "8f3695c2-c2c6-45df-9d4a-eb3d9fc42145", "f5652d7b-099e-488d-b3bd-b535717b8d11", "7e2dd0f7-0710-4a9c-ae47-f678af2db31c", "5d281fb2-c324-4701-a337-8240cb7822e7", "fd1b1502-9383-41ca-b597-4e9a41308d2d", "81052675-e1c4-4182-880e-2aafe5249b0e", "872fc097-e9f2-4f05-a136-f2f6c5567d28", "3fe385e7-def3-453f-92a1-0930a281e0c5", "6f193061-b494-4f7e-947f-f5a9b649aff7", "70af6a8f-207d-45b5-958a-37a61f1089e2", "8beb6183-79ce-4665-815c-3e730e9b4b35", "29cbfbad-6e66-467d-aa95-21513953c63c", "a702ded8-e037-4848-a285-e54b1847e555", "5dc9b70d-b063-4af6-9863-ca2b6dccc113", "7c2ba3e2-47ea-4554-b721-9af4cdd285e0", "36933eab-897a-4425-8eed-6d28bb6b3316", "87293727-9af4-4642-bdba-a7c88ee9644e", "6e4bf59b-c6b1-43a8-9fd7-7c43c0c0ecee", "93ad73da-b930-4bbb-8070-f5d2a27a8388", "17a433fa-2bdd-4738-9c48-0849bf149dc4", "2a017a14-2970-435d-83c2-eb867607a3e8", "f1a413f3-f983-42f6-b543-dc49d1f90d3e", "9af72bcf-7b43-42d6-8cbb-d4b0d789b696", "5240c364-7eee-4d6a-babf-bc1aa82c208d", "2ac7b8d8-3e28-47e0-adc2-ae9ffe25e0b9", "efb12073-71ce-42d8-a661-43a9af6c1f77", "8556518f-caba-4ca7-b8eb-c8ce3cd43b11", "c3a52247-2019-4de7-b58b-5ed8bf86d911", "dd0717a7-018c-4692-9358-162d94e2c4fb", "b3b5f4a2-db02-4456-b175-1f2ddcd3be3b", "c69a266f-c626-4d99-83bd-ff09fcc1b0b9", "013a9a2c-ecea-43fa-b052-c494c5e29610", "3823b176-c3be-4141-8053-5479b17665ab", "fc1a3efe-3115-4395-9f08-0ae732f9b52d", "d201cd31-b22d-4bc0-8356-60e87cee5f7e", "66dd77ed-ce7b-4d16-93e3-549e5294de97", "152ca561-b08e-430d-860c-3cc77f75e06b", "9ad32237-b460-4e9f-911c-89782c2afb80", "76604b30-b1c0-4490-929a-46fb3ee63b21", "0885908d-c248-4e05-8ea8-67859b4b5422", "581a7858-6000-4910-abc5-d84bdbd8dc31", "fa8586d2-b9b1-493c-ab65-95dad19173f1", "41fc52a8-32e6-4986-93bc-53e620dce770", "7d9924c8-ad48-445a-a4cd-f4cdf3ffee0d", "a3f8c9fd-3450-41db-b59d-330d73b0ec31", "19fe0c2d-71f5-40fa-8482-918b0b0f968f", "d17b9b25-ebf5-4f4e-9feb-b7302e872e67", "d7434bbe-9b5b-4929-87f4-09db6cc8e7fb", "aadcdf0a-70ed-40ce-8d19-5db48210be23", "ba16a286-8169-4748-bdf5-bd143528bd5b", "36b790e2-6c14-4e47-9498-2fc10cca8ccc", "21604122-4632-4bda-b6ac-04338eb39fa9", "0216b818-22db-4fb6-937a-14fa96f19fa9", "dd931f2c-42c8-41bc-8f52-17abfea60410", "baa6ed80-a141-4a56-87ec-3aa0942bea82", "19af1143-24c6-4309-8763-d8935d1c3e9c", "a32973a0-7e9a-4e42-a52a-4147979ce903", "ff78060e-f104-4259-aee1-17532036337c", "ac898820-1258-41ac-b93c-ac110fef5484", "06589271-a7a8-430e-80b5-4871e777c09a", "c3bd2232-629a-46a6-8332-63a2a0282e6d", "47a90958-3cec-429b-9d5b-520e7565fc09", "77ba65a7-b4bc-4bc2-8658-6e63a698a6a6", "b670b5f4-1316-47d7-a359-d11fb16188b0", "53d4e5fd-1205-4e63-91ae-5568ff0f1d9e", "5f1a748d-647c-4d40-8eb8-1a026f7b61b9", "9e36e5b2-0a08-4dac-aec3-2d1cecb75fae", "c8c9ade2-9ba8-46e8-8432-19155e5071cd", "6397d877-6252-4cbf-a351-67b5640846c5", "84f89005-db53-4885-9dff-47b2f8c019bc", "1e3d5183-8d7e-4290-8a11-cd1347e02d15", "89fb4bda-19de-4c9a-8784-6df5f48e49ee", "034df081-5a94-448a-bb61-b39c09845219", "b690e88c-8c69-43ef-ad68-83378fd77ba0", "25ce210f-0adb-4cfd-aeed-d40fea7f4d0a", "0f0ca2b9-ccad-457b-8a8a-f14a2b9bc03c", "2fc1a321-1097-44b9-9340-676f4bc0b449", "26be25bc-cda0-46cc-98d4-e88e355e62e8", "8db665e8-8f39-45e8-9fd6-2e49ce326b4a", "9c493a62-295b-461d-8956-150a6135e130", "c133f493-f6b2-42a0-bce0-dd5d40742b4d", "20d076ee-db9f-445d-a038-e99f6c94ec00", "1b727395-91f1-4e81-a6c8-be495808db92", "52d40cdd-fd55-4801-a9d9-6a084bebc412", "11528f83-27ae-47d3-8917-1a9ae9e5479b", "3608bdf2-f30d-451c-b496-1f086095a943", "d15c561a-9b4f-4cf5-9044-3509b38cbcff", "0bc9c9d9-6aff-45a0-9956-0ae37614f456", "36a84821-aed8-4b03-a1fc-7539ee102535", "555bb09f-ecce-481c-a345-e654ed0ff5d3", "d30602bd-f3f5-4d0d-85e6-13d33b4ecd5a", "db9f3d33-6b14-4797-9c22-1e8bcd80b604", "7d27379d-f8a0-458b-ae8d-b87637254b08", "f41d071e-9434-407b-8fc9-65ed14879d97", "4b742297-abae-46aa-a775-8299292e19c0", "62c26afe-62ea-4316-bb5a-3d066ea3c2d3", "4a6b5ddf-215c-41bf-bcd8-dc05d2c13196", "f71a58e8-bc42-4ba7-b6aa-dfcfb05b85bc", "bfd37cad-12ca-44b6-b587-bcb8d8ca19b4", "c9a77129-d5c9-467a-a733-d7fa5fb18f98", "717873b8-e72f-4bcd-8fc1-ddb3babc920f", "56ca8a26-ef2b-406d-b4d2-c3a29864653d", "5e16d50f-22c1-46b7-8a9a-4cdb6dd81c57", "7e6f9652-020a-403a-bef3-1aa174145307", "0ee16332-a899-494d-9fb2-641f890cd0a7", "34e0944e-dd01-48bb-8a50-43ebcf06908f", "a4ba050f-1079-4011-86eb-ad73e61f1465", "05595f23-9640-4d80-aa1c-2315b900c314", "1738da19-dd60-43c4-afda-bb8dc726536f", "bb874048-18ce-442f-8fc8-ea8ecef10972", "4f312346-7d5b-4cbf-b9f4-ffbb252900c2", "b051a8aa-6fa2-42e0-9753-96b7c2c1794a", "b8f57bfc-9640-4afe-9e54-c053bd16691b", "a5908b7c-b7b3-40d4-9f0d-053c90b7bbb8", "5057ed14-d0eb-41de-858f-e5768958861f", "80b38e19-be36-4e0a-8243-8105347245c9", "d3f2be16-a68d-4617-8e7a-174fb368e777", "3274847c-28ec-4afc-bd53-40e62cfac0ae", "8ccf9d8c-7152-472f-a070-2786ee0d6260", "f28753c9-9dfd-4076-b4c9-84e177465b6c", "b8a2f7c3-4229-46d1-8af9-fec3899e081a", "d457a4c1-1502-4be4-a8c8-27a730346fb7", "5479d43b-2951-4481-abde-c6ff20ef385d", "3a0c6bc6-3737-4f0b-9f59-71bfae5f8f47", "d6bfa225-16fd-47e6-a137-ce3ea552f8cf", "da59beb8-d60d-4a24-8995-a626f17739dc", "9bbd732e-c81a-44f3-8c7d-a72e71e26fc9", "d6916eb3-7fee-4541-b40f-36e0fb62fc52", "a6aafa4b-e41b-4d58-9035-ceec79ab4332", "4b9d9df8-7304-4e0b-ba3b-57938b86a92d", "e12aecfb-3cc6-4984-b3c4-295abf7d1569", "79f34316-2bb1-45c5-9e2a-5b3f53d79745", "2ba7f64a-93fc-4d1f-bcf8-0ae65be8dd58", "bc9614c7-a204-4372-8074-e0feb1b95a3e", "9a0867e6-6abe-49bd-ab70-d90847bba751", "62adb358-3073-421f-bd81-7da1f7525520", "089cf8b8-8d6a-4340-a187-778043d3d95b", "48353f9c-d44d-41f0-8e9c-435f0b6c902c", "5cf5534b-c344-4867-9981-625c04333a39", "2ebeeff5-8495-4db2-82bf-322ec2127124", "7957cf29-c73f-448d-b81a-8194a1d25fa8", "b125293c-a311-476d-9887-60187fe62823", "3f03f971-d411-4b94-9723-de077acda599", "baf81663-2302-4a01-b9ba-258b8e310aef", "efd95743-4377-4a43-be40-6cd4a74d4289", "512a2ce5-1d82-4fcc-911c-772c9a384a42", "90a81d39-71c8-4b66-8eec-78e356a2dcda", "c89328be-a227-4ad6-89c6-702be9e8c7a4", "8a3350cc-cf7a-4160-9acc-41f1eaed15eb", "36282591-77e2-4472-8f10-ca5f240a3164", "aca74c6a-d8af-4d20-96e3-31bffda771db", "c02b0dc0-657d-4bf8-8128-ed701d136328", "7000890f-6c66-4c35-ac05-d1324d36e0b2", "b4d9eb1b-bd4b-4a00-a367-7fac4d148c33", "2d8e528d-85fb-43ea-b81a-050ce0549a3b", "9f0e2522-b906-463d-8ee4-d856dec7524c", "060ea210-9f25-4d8f-bd2e-970a21df63db", "770a95a6-a554-4e3f-a62f-56782fbc559c", "2f72524d-9ce1-40fd-a620-10e1463d27ee", "13863cee-ffc5-4598-a4bb-f9dd160aa6cb", "653b143f-7277-484a-8f4e-66d24977ad96", "92c3296a-f7db-491c-8584-2728897cfe6d", "600ecab5-5a16-4890-8eea-c9d46ab95c2e", "29b76b15-96b4-4dec-a700-71995085daf0"], "metadata": {}}}}